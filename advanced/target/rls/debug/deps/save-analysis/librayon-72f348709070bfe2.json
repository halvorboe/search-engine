{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0","program":"/Users/halvorbo/.rustup/toolchains/nightly-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","rayon","--edition=2018","/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=72f348709070bfe2","-C","extra-filename=-72f348709070bfe2","--out-dir","/Users/halvorbo/Projects/search-engine/advanced/target/rls/debug/deps","-L","dependency=/Users/halvorbo/Projects/search-engine/advanced/target/rls/debug/deps","--extern","crossbeam_deque=/Users/halvorbo/Projects/search-engine/advanced/target/rls/debug/deps/libcrossbeam_deque-a9dfe94cc2b929f7.rmeta","--extern","either=/Users/halvorbo/Projects/search-engine/advanced/target/rls/debug/deps/libeither-51a59aa1642c9b1d.rmeta","--extern","rayon_core=/Users/halvorbo/Projects/search-engine/advanced/target/rls/debug/deps/librayon_core-d914e1f6b8a700f6.rmeta","--cap-lints","allow","--cfg","step_by","--error-format=json","--sysroot","/Users/halvorbo/.rustup/toolchains/nightly-x86_64-apple-darwin"],"output":"/Users/halvorbo/Projects/search-engine/advanced/target/rls/debug/deps/librayon-72f348709070bfe2.rmeta"},"prelude":{"crate_id":{"name":"rayon","disambiguator":[6136024824744043772,7445400082629224577]},"crate_root":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src","external_crates":[{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[10530524084485976407,9865151695911701379]}},{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[4677351122568421315,12912476906165123890]}},{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10488131761368839759,14745294566605726166]}},{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[897566241891434780,10334371453616731725]}},{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[11641657356728861508,7085351932648257302]}},{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[676122544404022689,40068272031765985]}},{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3818133010765225013,12223759246914958195]}},{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5938175211405239443,5415126661464186215]}},{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[3780697752239444282,3851721936065226901]}},{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[12165445765909509336,798848316425904467]}},{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[17502485708484438607,8308367046456781365]}},{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[14371327216633401758,10746896804827034804]}},{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[8353860865250060912,12073716115526585438]}},{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[1012648758462094634,18380545652037057514]}},{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[5859193186215189519,203091992714383988]}},{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","num":16,"id":{"name":"either","disambiguator":[11641615604603722459,120136229592150137]}},{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chain.rs","num":17,"id":{"name":"rayon_core","disambiguator":[18123073962490016322,15019038764430304095]}},{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chain.rs","num":18,"id":{"name":"crossbeam_channel","disambiguator":[6340216807286286536,15658015401528935011]}},{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chain.rs","num":19,"id":{"name":"cfg_if","disambiguator":[10868258386125283332,10533175316954764242]}},{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chain.rs","num":20,"id":{"name":"crossbeam_utils","disambiguator":[8630784673443417042,7091223614128856957]}},{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chain.rs","num":21,"id":{"name":"lazy_static","disambiguator":[7427177695640610454,2199846136346973132]}},{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/par_bridge.rs","num":22,"id":{"name":"crossbeam_deque","disambiguator":[1660746372349258736,15273281569750716952]}},{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chain.rs","num":23,"id":{"name":"crossbeam_epoch","disambiguator":[9172479745823779193,12584677627664147904]}},{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chain.rs","num":24,"id":{"name":"scopeguard","disambiguator":[15479479183525032889,2643213063027633067]}},{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chain.rs","num":25,"id":{"name":"memoffset","disambiguator":[9129973015885059360,13139673223423640593]}},{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chain.rs","num":26,"id":{"name":"num_cpus","disambiguator":[11574150367810211139,3783933534835970440]}},{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chain.rs","num":27,"id":{"name":"libc","disambiguator":[4148883850280817979,17678170226125361542]}}],"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":0,"byte_end":4611,"line_start":1,"line_end":120,"column_start":1,"column_end":41}},"imports":[{"kind":"Use","ref_id":{"krate":16,"index":181},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":33154,"byte_end":33160,"line_start":84,"line_end":84,"column_start":17,"column_end":23},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":303}},{"kind":"Use","ref_id":{"krate":0,"index":6556},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":34564,"byte_end":34569,"line_start":155,"line_end":155,"column_start":12,"column_end":17},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":303}},{"kind":"Use","ref_id":{"krate":0,"index":6569},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":34583,"byte_end":34589,"line_start":156,"line_end":156,"column_start":13,"column_end":19},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":303}},{"kind":"Use","ref_id":{"krate":0,"index":6579},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":34603,"byte_end":34609,"line_start":157,"line_end":157,"column_start":13,"column_end":19},"alias_span":null,"name":"Cloned","value":"","parent":{"krate":0,"index":303}},{"kind":"Use","ref_id":{"krate":0,"index":6588},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":34623,"byte_end":34629,"line_start":158,"line_end":158,"column_start":13,"column_end":19},"alias_span":null,"name":"Copied","value":"","parent":{"krate":0,"index":303}},{"kind":"Use","ref_id":{"krate":0,"index":894},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":34643,"byte_end":34648,"line_start":159,"line_end":159,"column_start":13,"column_end":18},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":303}},{"kind":"Use","ref_id":{"krate":0,"index":896},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":34650,"byte_end":34655,"line_start":159,"line_end":159,"column_start":20,"column_end":25},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":303}},{"kind":"Use","ref_id":{"krate":0,"index":6597},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":34673,"byte_end":34682,"line_start":160,"line_end":160,"column_start":16,"column_end":25},"alias_span":null,"name":"Enumerate","value":"","parent":{"krate":0,"index":303}},{"kind":"Use","ref_id":{"krate":0,"index":6606},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":34696,"byte_end":34702,"line_start":161,"line_end":161,"column_start":13,"column_end":19},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":303}},{"kind":"Use","ref_id":{"krate":0,"index":6615},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":34720,"byte_end":34729,"line_start":162,"line_end":162,"column_start":17,"column_end":26},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":303}},{"kind":"Use","ref_id":{"krate":0,"index":6632},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":34745,"byte_end":34752,"line_start":163,"line_end":163,"column_start":15,"column_end":22},"alias_span":null,"name":"FlatMap","value":"","parent":{"krate":0,"index":303}},{"kind":"Use","ref_id":{"krate":0,"index":6641},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":34773,"byte_end":34784,"line_start":164,"line_end":164,"column_start":20,"column_end":31},"alias_span":null,"name":"FlatMapIter","value":"","parent":{"krate":0,"index":303}},{"kind":"Use","ref_id":{"krate":0,"index":6650},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":34799,"byte_end":34806,"line_start":165,"line_end":165,"column_start":14,"column_end":21},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":303}},{"kind":"Use","ref_id":{"krate":0,"index":6659},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":34826,"byte_end":34837,"line_start":166,"line_end":166,"column_start":19,"column_end":30},"alias_span":null,"name":"FlattenIter","value":"","parent":{"krate":0,"index":303}},{"kind":"Use","ref_id":{"krate":0,"index":6668},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":34850,"byte_end":34854,"line_start":167,"line_end":167,"column_start":12,"column_end":16},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":303}},{"kind":"Use","ref_id":{"krate":0,"index":6680},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":34856,"byte_end":34864,"line_start":167,"line_end":167,"column_start":18,"column_end":26},"alias_span":null,"name":"FoldWith","value":"","parent":{"krate":0,"index":303}},{"kind":"Use","ref_id":{"krate":0,"index":6692},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":34880,"byte_end":34887,"line_start":168,"line_end":168,"column_start":14,"column_end":21},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":303}},{"kind":"Use","ref_id":{"krate":0,"index":6701},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":34905,"byte_end":34915,"line_start":169,"line_end":169,"column_start":17,"column_end":27},"alias_span":null,"name":"Interleave","value":"","parent":{"krate":0,"index":303}},{"kind":"Use","ref_id":{"krate":0,"index":6714},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":34942,"byte_end":34960,"line_start":170,"line_end":170,"column_start":26,"column_end":44},"alias_span":null,"name":"InterleaveShortest","value":"","parent":{"krate":0,"index":303}},{"kind":"Use","ref_id":{"krate":0,"index":6726},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":34979,"byte_end":34990,"line_start":171,"line_end":171,"column_start":18,"column_end":29},"alias_span":null,"name":"Intersperse","value":"","parent":{"krate":0,"index":303}},{"kind":"Use","ref_id":{"krate":0,"index":6746},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":35002,"byte_end":35008,"line_start":172,"line_end":172,"column_start":11,"column_end":17},"alias_span":null,"name":"MaxLen","value":"","parent":{"krate":0,"index":303}},{"kind":"Use","ref_id":{"krate":0,"index":6736},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":35010,"byte_end":35016,"line_start":172,"line_end":172,"column_start":19,"column_end":25},"alias_span":null,"name":"MinLen","value":"","parent":{"krate":0,"index":303}},{"kind":"Use","ref_id":{"krate":0,"index":6756},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":35028,"byte_end":35031,"line_start":173,"line_end":173,"column_start":10,"column_end":13},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":303}},{"kind":"Use","ref_id":{"krate":0,"index":6777},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":35048,"byte_end":35055,"line_start":174,"line_end":174,"column_start":16,"column_end":23},"alias_span":null,"name":"MapInit","value":"","parent":{"krate":0,"index":303}},{"kind":"Use","ref_id":{"krate":0,"index":6765},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":35057,"byte_end":35064,"line_start":174,"line_end":174,"column_start":25,"column_end":32},"alias_span":null,"name":"MapWith","value":"","parent":{"krate":0,"index":303}},{"kind":"Use","ref_id":{"krate":0,"index":6789},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":35081,"byte_end":35089,"line_start":175,"line_end":175,"column_start":15,"column_end":23},"alias_span":null,"name":"MultiZip","value":"","parent":{"krate":0,"index":303}},{"kind":"Use","ref_id":{"krate":0,"index":2828},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":35102,"byte_end":35106,"line_start":176,"line_end":176,"column_start":12,"column_end":16},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":303}},{"kind":"Use","ref_id":{"krate":0,"index":7668},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":35108,"byte_end":35112,"line_start":176,"line_end":176,"column_start":18,"column_end":22},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":303}},{"kind":"Use","ref_id":{"krate":0,"index":7677},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":35131,"byte_end":35140,"line_start":177,"line_end":177,"column_start":17,"column_end":26},"alias_span":null,"name":"PanicFuse","value":"","parent":{"krate":0,"index":303}},{"kind":"Use","ref_id":{"krate":0,"index":7693},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":35159,"byte_end":35169,"line_start":178,"line_end":178,"column_start":18,"column_end":28},"alias_span":null,"name":"IterBridge","value":"","parent":{"krate":0,"index":303}},{"kind":"Use","ref_id":{"krate":0,"index":3023},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":35171,"byte_end":35185,"line_start":178,"line_end":178,"column_start":30,"column_end":44},"alias_span":null,"name":"ParallelBridge","value":"","parent":{"krate":0,"index":303}},{"kind":"Use","ref_id":{"krate":0,"index":7702},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":35203,"byte_end":35212,"line_start":179,"line_end":179,"column_start":16,"column_end":25},"alias_span":null,"name":"Positions","value":"","parent":{"krate":0,"index":303}},{"kind":"Use","ref_id":{"krate":0,"index":3244},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":35227,"byte_end":35233,"line_start":180,"line_end":180,"column_start":14,"column_end":20},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":303}},{"kind":"Use","ref_id":{"krate":0,"index":3265},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":35235,"byte_end":35242,"line_start":180,"line_end":180,"column_start":22,"column_end":29},"alias_span":null,"name":"repeatn","value":"","parent":{"krate":0,"index":303}},{"kind":"Use","ref_id":{"krate":0,"index":7711},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":35244,"byte_end":35250,"line_start":180,"line_end":180,"column_start":31,"column_end":37},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":303}},{"kind":"Use","ref_id":{"krate":0,"index":7720},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":35252,"byte_end":35259,"line_start":180,"line_end":180,"column_start":39,"column_end":46},"alias_span":null,"name":"RepeatN","value":"","parent":{"krate":0,"index":303}},{"kind":"Use","ref_id":{"krate":0,"index":7730},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":35271,"byte_end":35274,"line_start":181,"line_end":181,"column_start":10,"column_end":13},"alias_span":null,"name":"Rev","value":"","parent":{"krate":0,"index":303}},{"kind":"Use","ref_id":{"krate":0,"index":7739},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":35286,"byte_end":35290,"line_start":182,"line_end":182,"column_start":11,"column_end":15},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":303}},{"kind":"Use","ref_id":{"krate":0,"index":3394},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":35307,"byte_end":35312,"line_start":183,"line_end":183,"column_start":16,"column_end":21},"alias_span":null,"name":"split","value":"","parent":{"krate":0,"index":303}},{"kind":"Use","ref_id":{"krate":0,"index":7749},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":35314,"byte_end":35319,"line_start":183,"line_end":183,"column_start":23,"column_end":28},"alias_span":null,"name":"Split","value":"","parent":{"krate":0,"index":303}},{"kind":"Use","ref_id":{"krate":0,"index":7758},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":35332,"byte_end":35336,"line_start":184,"line_end":184,"column_start":11,"column_end":15},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":303}},{"kind":"Use","ref_id":{"krate":0,"index":7768},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":35353,"byte_end":35360,"line_start":185,"line_end":185,"column_start":16,"column_end":23},"alias_span":null,"name":"TryFold","value":"","parent":{"krate":0,"index":303}},{"kind":"Use","ref_id":{"krate":0,"index":7783},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":35362,"byte_end":35373,"line_start":185,"line_end":185,"column_start":25,"column_end":36},"alias_span":null,"name":"TryFoldWith","value":"","parent":{"krate":0,"index":303}},{"kind":"Use","ref_id":{"krate":0,"index":7795},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":35388,"byte_end":35394,"line_start":186,"line_end":186,"column_start":13,"column_end":19},"alias_span":null,"name":"Update","value":"","parent":{"krate":0,"index":303}},{"kind":"Use","ref_id":{"krate":0,"index":7817},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":35412,"byte_end":35421,"line_start":187,"line_end":187,"column_start":17,"column_end":26},"alias_span":null,"name":"WhileSome","value":"","parent":{"krate":0,"index":303}},{"kind":"Use","ref_id":{"krate":0,"index":7826},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":35432,"byte_end":35435,"line_start":188,"line_end":188,"column_start":10,"column_end":13},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":303}},{"kind":"Use","ref_id":{"krate":0,"index":7839},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":35449,"byte_end":35454,"line_start":189,"line_end":189,"column_start":13,"column_end":18},"alias_span":null,"name":"ZipEq","value":"","parent":{"krate":0,"index":303}},{"kind":"Use","ref_id":{"krate":0,"index":7851},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":35512,"byte_end":35518,"line_start":194,"line_end":194,"column_start":24,"column_end":30},"alias_span":null,"name":"StepBy","value":"","parent":{"krate":0,"index":303}},{"kind":"Use","ref_id":{"krate":0,"index":4764},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/prelude.rs","byte_start":420738,"byte_end":420758,"line_start":5,"line_end":5,"column_start":22,"column_end":42},"alias_span":null,"name":"FromParallelIterator","value":"","parent":{"krate":0,"index":4866}},{"kind":"Use","ref_id":{"krate":0,"index":4699},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/prelude.rs","byte_start":420781,"byte_end":420804,"line_start":6,"line_end":6,"column_start":22,"column_end":45},"alias_span":null,"name":"IndexedParallelIterator","value":"","parent":{"krate":0,"index":4866}},{"kind":"Use","ref_id":{"krate":0,"index":4465},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/prelude.rs","byte_start":420827,"byte_end":420847,"line_start":7,"line_end":7,"column_start":22,"column_end":42},"alias_span":null,"name":"IntoParallelIterator","value":"","parent":{"krate":0,"index":4866}},{"kind":"Use","ref_id":{"krate":0,"index":4469},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/prelude.rs","byte_start":420870,"byte_end":420893,"line_start":8,"line_end":8,"column_start":22,"column_end":45},"alias_span":null,"name":"IntoParallelRefIterator","value":"","parent":{"krate":0,"index":4866}},{"kind":"Use","ref_id":{"krate":0,"index":4480},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/prelude.rs","byte_start":420916,"byte_end":420942,"line_start":9,"line_end":9,"column_start":22,"column_end":48},"alias_span":null,"name":"IntoParallelRefMutIterator","value":"","parent":{"krate":0,"index":4866}},{"kind":"Use","ref_id":{"krate":0,"index":3023},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/prelude.rs","byte_start":420965,"byte_end":420979,"line_start":10,"line_end":10,"column_start":22,"column_end":36},"alias_span":null,"name":"ParallelBridge","value":"","parent":{"krate":0,"index":4866}},{"kind":"Use","ref_id":{"krate":0,"index":4772},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/prelude.rs","byte_start":421002,"byte_end":421019,"line_start":11,"line_end":11,"column_start":22,"column_end":39},"alias_span":null,"name":"ParallelDrainFull","value":"","parent":{"krate":0,"index":4866}},{"kind":"Use","ref_id":{"krate":0,"index":4776},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/prelude.rs","byte_start":421042,"byte_end":421060,"line_start":12,"line_end":12,"column_start":22,"column_end":40},"alias_span":null,"name":"ParallelDrainRange","value":"","parent":{"krate":0,"index":4866}},{"kind":"Use","ref_id":{"krate":0,"index":4768},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/prelude.rs","byte_start":421083,"byte_end":421097,"line_start":13,"line_end":13,"column_start":22,"column_end":36},"alias_span":null,"name":"ParallelExtend","value":"","parent":{"krate":0,"index":4866}},{"kind":"Use","ref_id":{"krate":0,"index":4491},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/prelude.rs","byte_start":421120,"byte_end":421136,"line_start":14,"line_end":14,"column_start":22,"column_end":38},"alias_span":null,"name":"ParallelIterator","value":"","parent":{"krate":0,"index":4866}},{"kind":"Use","ref_id":{"krate":0,"index":5228},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/prelude.rs","byte_start":421160,"byte_end":421173,"line_start":15,"line_end":15,"column_start":23,"column_end":36},"alias_span":null,"name":"ParallelSlice","value":"","parent":{"krate":0,"index":4866}},{"kind":"Use","ref_id":{"krate":0,"index":5239},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/prelude.rs","byte_start":421197,"byte_end":421213,"line_start":16,"line_end":16,"column_start":23,"column_end":39},"alias_span":null,"name":"ParallelSliceMut","value":"","parent":{"krate":0,"index":4866}},{"kind":"Use","ref_id":{"krate":0,"index":5572},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/prelude.rs","byte_start":421235,"byte_end":421249,"line_start":17,"line_end":17,"column_start":21,"column_end":35},"alias_span":null,"name":"ParallelString","value":"","parent":{"krate":0,"index":4866}},{"kind":"Use","ref_id":{"krate":17,"index":1297},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":4224,"byte_end":4233,"line_start":111,"line_end":111,"column_start":21,"column_end":30},"alias_span":null,"name":"FnContext","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":428},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":4255,"byte_end":4268,"line_start":112,"line_end":112,"column_start":21,"column_end":34},"alias_span":null,"name":"ThreadBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":875},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":4290,"byte_end":4300,"line_start":113,"line_end":113,"column_start":21,"column_end":31},"alias_span":null,"name":"ThreadPool","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":1285},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":4322,"byte_end":4342,"line_start":114,"line_end":114,"column_start":21,"column_end":41},"alias_span":null,"name":"ThreadPoolBuildError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":1002},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":4364,"byte_end":4381,"line_start":115,"line_end":115,"column_start":21,"column_end":38},"alias_span":null,"name":"ThreadPoolBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":1001},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":4404,"byte_end":4423,"line_start":116,"line_end":116,"column_start":22,"column_end":41},"alias_span":null,"name":"current_num_threads","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":912},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":4425,"byte_end":4445,"line_start":116,"line_end":116,"column_start":43,"column_end":63},"alias_span":null,"name":"current_thread_index","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":198},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":4469,"byte_end":4473,"line_start":117,"line_end":117,"column_start":22,"column_end":26},"alias_span":null,"name":"join","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":208},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":4475,"byte_end":4487,"line_start":117,"line_end":117,"column_start":28,"column_end":40},"alias_span":null,"name":"join_context","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":635},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":4511,"byte_end":4516,"line_start":118,"line_end":118,"column_start":22,"column_end":27},"alias_span":null,"name":"scope","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":621},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":4518,"byte_end":4523,"line_start":118,"line_end":118,"column_start":29,"column_end":34},"alias_span":null,"name":"Scope","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":641},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":4547,"byte_end":4557,"line_start":119,"line_end":119,"column_start":22,"column_end":32},"alias_span":null,"name":"scope_fifo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":624},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":4559,"byte_end":4568,"line_start":119,"line_end":119,"column_start":34,"column_end":43},"alias_span":null,"name":"ScopeFifo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":814},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":4592,"byte_end":4597,"line_start":120,"line_end":120,"column_start":22,"column_end":27},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":821},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":4599,"byte_end":4609,"line_start":120,"line_end":120,"column_start":29,"column_end":39},"alias_span":null,"name":"spawn_fifo","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":0,"byte_end":4611,"line_start":1,"line_end":120,"column_start":1,"column_end":41},"name":"","qualname":"::","value":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":11},{"krate":0,"index":50},{"krate":0,"index":303},{"krate":0,"index":4804},{"krate":0,"index":4866},{"krate":0,"index":4906},{"krate":0,"index":4948},{"krate":0,"index":4980},{"krate":0,"index":5024},{"krate":0,"index":5565},{"krate":0,"index":5801},{"krate":0,"index":5828},{"krate":0,"index":5942},{"krate":0,"index":5956},{"krate":0,"index":5987},{"krate":0,"index":5998},{"krate":0,"index":6001},{"krate":0,"index":6004},{"krate":0,"index":6007},{"krate":0,"index":6010},{"krate":0,"index":6013},{"krate":0,"index":6014},{"krate":0,"index":6017},{"krate":0,"index":6020},{"krate":0,"index":6021},{"krate":0,"index":6024},{"krate":0,"index":6027},{"krate":0,"index":6028},{"krate":0,"index":6031},{"krate":0,"index":6034},{"krate":0,"index":6035},{"krate":0,"index":6038},{"krate":0,"index":6041},{"krate":0,"index":6042},{"krate":0,"index":6045}],"decl_id":null,"docs":" Data-parallelism library that makes it easy to convert sequential\n computations into parallel","sig":null,"attributes":[{"value":"deny(missing_debug_implementations)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":53,"byte_end":92,"line_start":2,"line_end":2,"column_start":1,"column_end":40}},{"value":"deny(missing_docs)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":93,"byte_end":115,"line_start":3,"line_end":3,"column_start":1,"column_end":23}},{"value":"deny(unreachable_pub)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":116,"byte_end":141,"line_start":4,"line_end":4,"column_start":1,"column_end":26}},{"value":"warn(rust_2018_idioms)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":142,"byte_end":168,"line_start":5,"line_end":5,"column_start":1,"column_end":27}},{"value":"/ Data-parallelism library that makes it easy to convert sequential","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":170,"byte_end":239,"line_start":7,"line_end":7,"column_start":1,"column_end":70}},{"value":"/ computations into parallel","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":240,"byte_end":270,"line_start":8,"line_end":8,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":271,"byte_end":274,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Rayon is lightweight and convenient for introducing parallelism into existing","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":275,"byte_end":356,"line_start":10,"line_end":10,"column_start":1,"column_end":82}},{"value":"/ code. It guarantees data-race free executions and takes advantage of","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":357,"byte_end":429,"line_start":11,"line_end":11,"column_start":1,"column_end":73}},{"value":"/ parallelism when sensible, based on work-load at runtime.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":430,"byte_end":491,"line_start":12,"line_end":12,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":492,"byte_end":495,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # How to use Rayon","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":496,"byte_end":518,"line_start":14,"line_end":14,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":519,"byte_end":522,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ There are two ways to use Rayon:","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":523,"byte_end":559,"line_start":16,"line_end":16,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":560,"byte_end":563,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ - **High-level parallel constructs** are the simplest way to use Rayon and also","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":564,"byte_end":647,"line_start":18,"line_end":18,"column_start":1,"column_end":84}},{"value":"/   typically the most efficient.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":648,"byte_end":683,"line_start":19,"line_end":19,"column_start":1,"column_end":36}},{"value":"/   - [Parallel iterators][iter module] make it easy to convert a sequential iterator to","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":684,"byte_end":774,"line_start":20,"line_end":20,"column_start":1,"column_end":91}},{"value":"/     execute in parallel.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":775,"byte_end":803,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/     - The [`ParallelIterator`] trait defines general methods for all parallel iterators.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":804,"byte_end":896,"line_start":22,"line_end":22,"column_start":1,"column_end":93}},{"value":"/     - The [`IndexedParallelIterator`] trait adds methods for iterators that support random","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":897,"byte_end":991,"line_start":23,"line_end":23,"column_start":1,"column_end":95}},{"value":"/       access.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":992,"byte_end":1009,"line_start":24,"line_end":24,"column_start":1,"column_end":18}},{"value":"/   - The [`par_sort`] method sorts `&mut [T]` slices (or vectors) in parallel.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":1010,"byte_end":1091,"line_start":25,"line_end":25,"column_start":1,"column_end":82}},{"value":"/   - [`par_extend`] can be used to efficiently grow collections with items produced","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":1092,"byte_end":1178,"line_start":26,"line_end":26,"column_start":1,"column_end":87}},{"value":"/     by a parallel iterator.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":1179,"byte_end":1210,"line_start":27,"line_end":27,"column_start":1,"column_end":32}},{"value":"/ - **Custom tasks** let you divide your work into parallel tasks yourself.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":1211,"byte_end":1288,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/   - [`join`] is used to subdivide a task into two pieces.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":1289,"byte_end":1350,"line_start":29,"line_end":29,"column_start":1,"column_end":62}},{"value":"/   - [`scope`] creates a scope within which you can create any number of parallel tasks.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":1351,"byte_end":1442,"line_start":30,"line_end":30,"column_start":1,"column_end":92}},{"value":"/   - [`ThreadPoolBuilder`] can be used to create your own thread pools or customize","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":1443,"byte_end":1529,"line_start":31,"line_end":31,"column_start":1,"column_end":87}},{"value":"/     the global one.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":1530,"byte_end":1553,"line_start":32,"line_end":32,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":1554,"byte_end":1557,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ [iter module]: iter/index.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":1558,"byte_end":1592,"line_start":34,"line_end":34,"column_start":1,"column_end":35}},{"value":"/ [`join`]: fn.join.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":1593,"byte_end":1619,"line_start":35,"line_end":35,"column_start":1,"column_end":27}},{"value":"/ [`scope`]: fn.scope.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":1620,"byte_end":1648,"line_start":36,"line_end":36,"column_start":1,"column_end":29}},{"value":"/ [`par_sort`]: slice/trait.ParallelSliceMut.html#method.par_sort","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":1649,"byte_end":1716,"line_start":37,"line_end":37,"column_start":1,"column_end":68}},{"value":"/ [`par_extend`]: iter/trait.ParallelExtend.html#tymethod.par_extend","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":1717,"byte_end":1787,"line_start":38,"line_end":38,"column_start":1,"column_end":71}},{"value":"/ [`ThreadPoolBuilder`]: struct.ThreadPoolBuilder.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":1788,"byte_end":1844,"line_start":39,"line_end":39,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":1845,"byte_end":1848,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ # Basic usage and the Rayon prelude","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":1849,"byte_end":1888,"line_start":41,"line_end":41,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":1889,"byte_end":1892,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ First, you will need to add `rayon` to your `Cargo.toml`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":1893,"byte_end":1954,"line_start":43,"line_end":43,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":1955,"byte_end":1958,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Next, to use parallel iterators or the other high-level methods,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":1959,"byte_end":2027,"line_start":45,"line_end":45,"column_start":1,"column_end":69}},{"value":"/ you need to import several traits. Those traits are bundled into","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":2028,"byte_end":2096,"line_start":46,"line_end":46,"column_start":1,"column_end":69}},{"value":"/ the module [`rayon::prelude`]. It is recommended that you import","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":2097,"byte_end":2165,"line_start":47,"line_end":47,"column_start":1,"column_end":69}},{"value":"/ all of these traits at once by adding `use rayon::prelude::*` at","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":2166,"byte_end":2234,"line_start":48,"line_end":48,"column_start":1,"column_end":69}},{"value":"/ the top of each module that uses Rayon methods.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":2235,"byte_end":2286,"line_start":49,"line_end":49,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":2287,"byte_end":2290,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ These traits give you access to the `par_iter` method which provides","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":2291,"byte_end":2363,"line_start":51,"line_end":51,"column_start":1,"column_end":73}},{"value":"/ parallel implementations of many iterative functions such as [`map`],","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":2364,"byte_end":2437,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/ [`for_each`], [`filter`], [`fold`], and [more].","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":2438,"byte_end":2489,"line_start":53,"line_end":53,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":2490,"byte_end":2493,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ [`rayon::prelude`]: prelude/index.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":2494,"byte_end":2536,"line_start":55,"line_end":55,"column_start":1,"column_end":43}},{"value":"/ [`map`]: iter/trait.ParallelIterator.html#method.map","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":2537,"byte_end":2593,"line_start":56,"line_end":56,"column_start":1,"column_end":57}},{"value":"/ [`for_each`]: iter/trait.ParallelIterator.html#method.for_each","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":2594,"byte_end":2660,"line_start":57,"line_end":57,"column_start":1,"column_end":67}},{"value":"/ [`filter`]: iter/trait.ParallelIterator.html#method.filter","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":2661,"byte_end":2723,"line_start":58,"line_end":58,"column_start":1,"column_end":63}},{"value":"/ [`fold`]: iter/trait.ParallelIterator.html#method.fold","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":2724,"byte_end":2782,"line_start":59,"line_end":59,"column_start":1,"column_end":59}},{"value":"/ [more]: iter/trait.ParallelIterator.html#provided-methods","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":2783,"byte_end":2844,"line_start":60,"line_end":60,"column_start":1,"column_end":62}},{"value":"/ [`ParallelIterator`]: iter/trait.ParallelIterator.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":2845,"byte_end":2903,"line_start":61,"line_end":61,"column_start":1,"column_end":59}},{"value":"/ [`IndexedParallelIterator`]: iter/trait.IndexedParallelIterator.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":2904,"byte_end":2976,"line_start":62,"line_end":62,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":2977,"byte_end":2980,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ # Crate Layout","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":2981,"byte_end":2999,"line_start":64,"line_end":64,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":3000,"byte_end":3003,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Rayon extends many of the types found in the standard library with","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":3004,"byte_end":3074,"line_start":66,"line_end":66,"column_start":1,"column_end":71}},{"value":"/ parallel iterator implementations. The modules in the `rayon`","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":3075,"byte_end":3140,"line_start":67,"line_end":67,"column_start":1,"column_end":66}},{"value":"/ crate mirror [`std`] itself: so, e.g., the `option` module in","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":3141,"byte_end":3206,"line_start":68,"line_end":68,"column_start":1,"column_end":66}},{"value":"/ Rayon contains parallel iterators for the `Option` type, which is","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":3207,"byte_end":3276,"line_start":69,"line_end":69,"column_start":1,"column_end":70}},{"value":"/ found in [the `option` module of `std`]. Similarly, the","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":3277,"byte_end":3336,"line_start":70,"line_end":70,"column_start":1,"column_end":60}},{"value":"/ `collections` module in Rayon offers parallel iterator types for","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":3337,"byte_end":3405,"line_start":71,"line_end":71,"column_start":1,"column_end":69}},{"value":"/ [the `collections` from `std`]. You will rarely need to access","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":3406,"byte_end":3472,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/ these submodules unless you need to name iterator types","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":3473,"byte_end":3532,"line_start":73,"line_end":73,"column_start":1,"column_end":60}},{"value":"/ explicitly.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":3533,"byte_end":3548,"line_start":74,"line_end":74,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":3549,"byte_end":3552,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ [the `option` module of `std`]: https://doc.rust-lang.org/std/option/index.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":3553,"byte_end":3636,"line_start":76,"line_end":76,"column_start":1,"column_end":84}},{"value":"/ [the `collections` from `std`]: https://doc.rust-lang.org/std/collections/index.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":3637,"byte_end":3725,"line_start":77,"line_end":77,"column_start":1,"column_end":89}},{"value":"/ [`std`]: https://doc.rust-lang.org/std/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":3726,"byte_end":3769,"line_start":78,"line_end":78,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":3770,"byte_end":3773,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ # Other questions?","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":3774,"byte_end":3796,"line_start":80,"line_end":80,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":3797,"byte_end":3800,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ See [the Rayon FAQ][faq].","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":3801,"byte_end":3830,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":3831,"byte_end":3834,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ [faq]: https://github.com/rayon-rs/rayon/blob/master/FAQ.md","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":3835,"byte_end":3898,"line_start":84,"line_end":84,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":7},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/private.rs","byte_start":7129,"byte_end":7142,"line_start":9,"line_end":9,"column_start":12,"column_end":25},"name":"PrivateMarker","qualname":"::private::PrivateMarker","value":"","parent":null,"children":[],"decl_id":null,"docs":" If this type is pub but not publicly reachable, third parties\n can't name it and can't implement traits using it.\n","sig":null,"attributes":[{"value":"/ If this type is pub but not publicly reachable, third parties","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/private.rs","byte_start":6957,"byte_end":7022,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"/ can't name it and can't implement traits using it.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/private.rs","byte_start":7023,"byte_end":7077,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/private.rs","byte_start":7078,"byte_end":7117,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Mod","id":{"krate":0,"index":50},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"collections","qualname":"::collections","value":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/mod.rs","parent":null,"children":[{"krate":0,"index":52},{"krate":0,"index":95},{"krate":0,"index":109},{"krate":0,"index":122},{"krate":0,"index":154},{"krate":0,"index":184},{"krate":0,"index":197},{"krate":0,"index":266},{"krate":0,"index":269}],"decl_id":null,"docs":" Parallel iterator types for [standard collections][std::collections]","sig":null,"attributes":[{"value":"/ Parallel iterator types for [standard collections][std::collections]","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/mod.rs","byte_start":11694,"byte_end":11766,"line_start":1,"line_end":1,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/mod.rs","byte_start":11767,"byte_end":11770,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to interact with this module directly unless you need","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/mod.rs","byte_start":11771,"byte_end":11849,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ to name one of the iterator types.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/mod.rs","byte_start":11850,"byte_end":11888,"line_start":4,"line_end":4,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/mod.rs","byte_start":11889,"byte_end":11892,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [std::collections]: https://doc.rust-lang.org/stable/std/collections/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/mod.rs","byte_start":11893,"byte_end":11966,"line_start":6,"line_end":6,"column_start":1,"column_end":74}}]},{"kind":"Mod","id":{"krate":0,"index":52},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/binary_heap.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"binary_heap","qualname":"::collections::binary_heap","value":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/binary_heap.rs","parent":null,"children":[{"krate":0,"index":53},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":6048},{"krate":0,"index":6054},{"krate":0,"index":6051},{"krate":0,"index":61},{"krate":0,"index":6064},{"krate":0,"index":6057},{"krate":0,"index":6070},{"krate":0,"index":6074},{"krate":0,"index":66},{"krate":0,"index":6078},{"krate":0,"index":6095},{"krate":0,"index":6087},{"krate":0,"index":6102},{"krate":0,"index":6106},{"krate":0,"index":70},{"krate":0,"index":76},{"krate":0,"index":83},{"krate":0,"index":91}],"decl_id":null,"docs":" This module contains the parallel iterator types for heaps\n (`BinaryHeap<T>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[{"value":"/ This module contains the parallel iterator types for heaps","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/binary_heap.rs","byte_start":14389,"byte_end":14451,"line_start":1,"line_end":1,"column_start":1,"column_end":63}},{"value":"/ (`BinaryHeap<T>`). You will rarely need to interact with it directly","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/binary_heap.rs","byte_start":14452,"byte_end":14524,"line_start":2,"line_end":2,"column_start":1,"column_end":73}},{"value":"/ unless you have need to name one of the iterator types.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/binary_heap.rs","byte_start":14525,"byte_end":14584,"line_start":3,"line_end":3,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":6048},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/binary_heap.rs","byte_start":14765,"byte_end":14773,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::binary_heap::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":6050}],"decl_id":null,"docs":" Parallel iterator over a binary heap\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a binary heap","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/binary_heap.rs","byte_start":14689,"byte_end":14729,"line_start":12,"line_end":12,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":6070},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/binary_heap.rs","byte_start":15239,"byte_end":15243,"line_start":36,"line_end":36,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::binary_heap::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":6073}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a binary heap\n","sig":null,"attributes":[{"value":"/ Parallel iterator over an immutable reference to a binary heap","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/binary_heap.rs","byte_start":15144,"byte_end":15210,"line_start":34,"line_end":34,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":6102},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/binary_heap.rs","byte_start":15805,"byte_end":15810,"line_start":63,"line_end":63,"column_start":12,"column_end":17},"name":"Drain","qualname":"::collections::binary_heap::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":6105}],"decl_id":null,"docs":" Draining parallel iterator that moves out of a binary heap,\n but keeps the total capacity.\n","sig":null,"attributes":[{"value":"/ Draining parallel iterator that moves out of a binary heap,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/binary_heap.rs","byte_start":15679,"byte_end":15742,"line_start":60,"line_end":60,"column_start":1,"column_end":64}},{"value":"/ but keeps the total capacity.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/binary_heap.rs","byte_start":15743,"byte_end":15776,"line_start":61,"line_end":61,"column_start":1,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":95},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/btree_map.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"btree_map","qualname":"::collections::btree_map","value":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/btree_map.rs","parent":null,"children":[{"krate":0,"index":96},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":6110},{"krate":0,"index":6114},{"krate":0,"index":6118},{"krate":0,"index":6127},{"krate":0,"index":6134},{"krate":0,"index":6139},{"krate":0,"index":104},{"krate":0,"index":6144},{"krate":0,"index":6154},{"krate":0,"index":6162},{"krate":0,"index":6167},{"krate":0,"index":6172},{"krate":0,"index":6182}],"decl_id":null,"docs":" This module contains the parallel iterator types for B-Tree maps\n (`BTreeMap<K, V>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[{"value":"/ This module contains the parallel iterator types for B-Tree maps","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/btree_map.rs","byte_start":17117,"byte_end":17185,"line_start":1,"line_end":1,"column_start":1,"column_end":69}},{"value":"/ (`BTreeMap<K, V>`). You will rarely need to interact with it directly","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/btree_map.rs","byte_start":17186,"byte_end":17259,"line_start":2,"line_end":2,"column_start":1,"column_end":74}},{"value":"/ unless you have need to name one of the iterator types.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/btree_map.rs","byte_start":17260,"byte_end":17319,"line_start":3,"line_end":3,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":6110},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/btree_map.rs","byte_start":17511,"byte_end":17519,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::btree_map::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":6113}],"decl_id":null,"docs":" Parallel iterator over a B-Tree map\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a B-Tree map","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/btree_map.rs","byte_start":17422,"byte_end":17461,"line_start":12,"line_end":12,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":6134},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/btree_map.rs","byte_start":17854,"byte_end":17858,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::btree_map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":6138}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a B-Tree map\n","sig":null,"attributes":[{"value":"/ Parallel iterator over an immutable reference to a B-Tree map","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/btree_map.rs","byte_start":17760,"byte_end":17825,"line_start":28,"line_end":28,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":6162},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/btree_map.rs","byte_start":18395,"byte_end":18402,"line_start":54,"line_end":54,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::collections::btree_map::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":6166}],"decl_id":null,"docs":" Parallel iterator over a mutable reference to a B-Tree map\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a mutable reference to a B-Tree map","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/btree_map.rs","byte_start":18304,"byte_end":18366,"line_start":52,"line_end":52,"column_start":1,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":109},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/btree_set.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"btree_set","qualname":"::collections::btree_set","value":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/btree_set.rs","parent":null,"children":[{"krate":0,"index":110},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":6190},{"krate":0,"index":6193},{"krate":0,"index":6196},{"krate":0,"index":6204},{"krate":0,"index":6210},{"krate":0,"index":6214},{"krate":0,"index":118},{"krate":0,"index":6218},{"krate":0,"index":6227}],"decl_id":null,"docs":" This module contains the parallel iterator types for B-Tree sets\n (`BTreeSet<T>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[{"value":"/ This module contains the parallel iterator types for B-Tree sets","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/btree_set.rs","byte_start":18703,"byte_end":18771,"line_start":1,"line_end":1,"column_start":1,"column_end":69}},{"value":"/ (`BTreeSet<T>`). You will rarely need to interact with it directly","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/btree_set.rs","byte_start":18772,"byte_end":18842,"line_start":2,"line_end":2,"column_start":1,"column_end":71}},{"value":"/ unless you have need to name one of the iterator types.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/btree_set.rs","byte_start":18843,"byte_end":18902,"line_start":3,"line_end":3,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":6190},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/btree_set.rs","byte_start":19094,"byte_end":19102,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::btree_set::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":6192}],"decl_id":null,"docs":" Parallel iterator over a B-Tree set\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a B-Tree set","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/btree_set.rs","byte_start":19005,"byte_end":19044,"line_start":12,"line_end":12,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":6210},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/btree_set.rs","byte_start":19391,"byte_end":19395,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::btree_set::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":6213}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a B-Tree set\n","sig":null,"attributes":[{"value":"/ Parallel iterator over an immutable reference to a B-Tree set","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/btree_set.rs","byte_start":19297,"byte_end":19362,"line_start":28,"line_end":28,"column_start":1,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":122},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/hash_map.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hash_map","qualname":"::collections::hash_map","value":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/hash_map.rs","parent":null,"children":[{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":6234},{"krate":0,"index":6238},{"krate":0,"index":6242},{"krate":0,"index":6252},{"krate":0,"index":6259},{"krate":0,"index":6264},{"krate":0,"index":141},{"krate":0,"index":6269},{"krate":0,"index":6280},{"krate":0,"index":6288},{"krate":0,"index":6293},{"krate":0,"index":6298},{"krate":0,"index":6309},{"krate":0,"index":6317},{"krate":0,"index":6323},{"krate":0,"index":146},{"krate":0,"index":6328}],"decl_id":null,"docs":" This module contains the parallel iterator types for hash maps\n (`HashMap<K, V>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[{"value":"/ This module contains the parallel iterator types for hash maps","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/hash_map.rs","byte_start":19824,"byte_end":19890,"line_start":1,"line_end":1,"column_start":1,"column_end":67}},{"value":"/ (`HashMap<K, V>`). You will rarely need to interact with it directly","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/hash_map.rs","byte_start":19891,"byte_end":19963,"line_start":2,"line_end":2,"column_start":1,"column_end":73}},{"value":"/ unless you have need to name one of the iterator types.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/hash_map.rs","byte_start":19964,"byte_end":20023,"line_start":3,"line_end":3,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":6234},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/hash_map.rs","byte_start":20278,"byte_end":20286,"line_start":16,"line_end":16,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::hash_map::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":6237}],"decl_id":null,"docs":" Parallel iterator over a hash map\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a hash map","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/hash_map.rs","byte_start":20191,"byte_end":20228,"line_start":14,"line_end":14,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":6259},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/hash_map.rs","byte_start":20655,"byte_end":20659,"line_start":32,"line_end":32,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::hash_map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":6263}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a hash map\n","sig":null,"attributes":[{"value":"/ Parallel iterator over an immutable reference to a hash map","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/hash_map.rs","byte_start":20563,"byte_end":20626,"line_start":30,"line_end":30,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":6288},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/hash_map.rs","byte_start":21236,"byte_end":21243,"line_start":56,"line_end":56,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::collections::hash_map::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":6292}],"decl_id":null,"docs":" Parallel iterator over a mutable reference to a hash map\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a mutable reference to a hash map","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/hash_map.rs","byte_start":21147,"byte_end":21207,"line_start":54,"line_end":54,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":6317},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/hash_map.rs","byte_start":21703,"byte_end":21708,"line_start":73,"line_end":73,"column_start":12,"column_end":17},"name":"Drain","qualname":"::collections::hash_map::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":6321},{"krate":0,"index":6322}],"decl_id":null,"docs":" Draining parallel iterator that moves out of a hash map,\n but keeps the total capacity.\n","sig":null,"attributes":[{"value":"/ Draining parallel iterator that moves out of a hash map,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/hash_map.rs","byte_start":21580,"byte_end":21640,"line_start":70,"line_end":70,"column_start":1,"column_end":61}},{"value":"/ but keeps the total capacity.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/hash_map.rs","byte_start":21641,"byte_end":21674,"line_start":71,"line_end":71,"column_start":1,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":154},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/hash_set.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hash_set","qualname":"::collections::hash_set","value":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/hash_set.rs","parent":null,"children":[{"krate":0,"index":155},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":6335},{"krate":0,"index":6338},{"krate":0,"index":6341},{"krate":0,"index":6350},{"krate":0,"index":6356},{"krate":0,"index":6360},{"krate":0,"index":173},{"krate":0,"index":6364},{"krate":0,"index":6374},{"krate":0,"index":6381},{"krate":0,"index":6386},{"krate":0,"index":177},{"krate":0,"index":6390}],"decl_id":null,"docs":" This module contains the parallel iterator types for hash sets\n (`HashSet<T>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[{"value":"/ This module contains the parallel iterator types for hash sets","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/hash_set.rs","byte_start":22287,"byte_end":22353,"line_start":1,"line_end":1,"column_start":1,"column_end":67}},{"value":"/ (`HashSet<T>`). You will rarely need to interact with it directly","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/hash_set.rs","byte_start":22354,"byte_end":22423,"line_start":2,"line_end":2,"column_start":1,"column_end":70}},{"value":"/ unless you have need to name one of the iterator types.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/hash_set.rs","byte_start":22424,"byte_end":22483,"line_start":3,"line_end":3,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":6335},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/hash_set.rs","byte_start":22738,"byte_end":22746,"line_start":16,"line_end":16,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::hash_set::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":6337}],"decl_id":null,"docs":" Parallel iterator over a hash set\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a hash set","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/hash_set.rs","byte_start":22651,"byte_end":22688,"line_start":14,"line_end":14,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":6356},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/hash_set.rs","byte_start":23069,"byte_end":23073,"line_start":32,"line_end":32,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::hash_set::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":6359}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a hash set\n","sig":null,"attributes":[{"value":"/ Parallel iterator over an immutable reference to a hash set","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/hash_set.rs","byte_start":22977,"byte_end":23040,"line_start":30,"line_end":30,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":6381},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/hash_set.rs","byte_start":23661,"byte_end":23666,"line_start":59,"line_end":59,"column_start":12,"column_end":17},"name":"Drain","qualname":"::collections::hash_set::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":6384},{"krate":0,"index":6385}],"decl_id":null,"docs":" Draining parallel iterator that moves out of a hash set,\n but keeps the total capacity.\n","sig":null,"attributes":[{"value":"/ Draining parallel iterator that moves out of a hash set,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/hash_set.rs","byte_start":23538,"byte_end":23598,"line_start":56,"line_end":56,"column_start":1,"column_end":61}},{"value":"/ but keeps the total capacity.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/hash_set.rs","byte_start":23599,"byte_end":23632,"line_start":57,"line_end":57,"column_start":1,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":184},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/linked_list.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"linked_list","qualname":"::collections::linked_list","value":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/linked_list.rs","parent":null,"children":[{"krate":0,"index":185},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":6396},{"krate":0,"index":6402},{"krate":0,"index":6399},{"krate":0,"index":6405},{"krate":0,"index":6413},{"krate":0,"index":6419},{"krate":0,"index":6423},{"krate":0,"index":193},{"krate":0,"index":6427},{"krate":0,"index":6436},{"krate":0,"index":6443},{"krate":0,"index":6447},{"krate":0,"index":6451},{"krate":0,"index":6460}],"decl_id":null,"docs":" This module contains the parallel iterator types for linked lists\n (`LinkedList<T>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[{"value":"/ This module contains the parallel iterator types for linked lists","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/linked_list.rs","byte_start":24187,"byte_end":24256,"line_start":1,"line_end":1,"column_start":1,"column_end":70}},{"value":"/ (`LinkedList<T>`). You will rarely need to interact with it directly","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/linked_list.rs","byte_start":24257,"byte_end":24329,"line_start":2,"line_end":2,"column_start":1,"column_end":73}},{"value":"/ unless you have need to name one of the iterator types.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/linked_list.rs","byte_start":24330,"byte_end":24389,"line_start":3,"line_end":3,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":6396},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/linked_list.rs","byte_start":24570,"byte_end":24578,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::linked_list::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":6398}],"decl_id":null,"docs":" Parallel iterator over a linked list\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a linked list","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/linked_list.rs","byte_start":24494,"byte_end":24534,"line_start":12,"line_end":12,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":6419},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/linked_list.rs","byte_start":24852,"byte_end":24856,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::linked_list::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":6422}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a linked list\n","sig":null,"attributes":[{"value":"/ Parallel iterator over an immutable reference to a linked list","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/linked_list.rs","byte_start":24757,"byte_end":24823,"line_start":28,"line_end":28,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":6443},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/linked_list.rs","byte_start":25301,"byte_end":25308,"line_start":54,"line_end":54,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::collections::linked_list::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":6446}],"decl_id":null,"docs":" Parallel iterator over a mutable reference to a linked list\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a mutable reference to a linked list","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/linked_list.rs","byte_start":25209,"byte_end":25272,"line_start":52,"line_end":52,"column_start":1,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":197},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/vec_deque.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"vec_deque","qualname":"::collections::vec_deque","value":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/vec_deque.rs","parent":null,"children":[{"krate":0,"index":198},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":205},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":213},{"krate":0,"index":216},{"krate":0,"index":6467},{"krate":0,"index":6473},{"krate":0,"index":6470},{"krate":0,"index":219},{"krate":0,"index":6483},{"krate":0,"index":6476},{"krate":0,"index":6489},{"krate":0,"index":6493},{"krate":0,"index":224},{"krate":0,"index":228},{"krate":0,"index":6505},{"krate":0,"index":6497},{"krate":0,"index":6512},{"krate":0,"index":6516},{"krate":0,"index":234},{"krate":0,"index":6528},{"krate":0,"index":6520},{"krate":0,"index":6535},{"krate":0,"index":6541},{"krate":0,"index":240},{"krate":0,"index":247},{"krate":0,"index":254},{"krate":0,"index":262}],"decl_id":null,"docs":" This module contains the parallel iterator types for double-ended queues\n (`VecDeque<T>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[{"value":"/ This module contains the parallel iterator types for double-ended queues","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/vec_deque.rs","byte_start":25534,"byte_end":25610,"line_start":1,"line_end":1,"column_start":1,"column_end":77}},{"value":"/ (`VecDeque<T>`). You will rarely need to interact with it directly","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/vec_deque.rs","byte_start":25611,"byte_end":25681,"line_start":2,"line_end":2,"column_start":1,"column_end":71}},{"value":"/ unless you have need to name one of the iterator types.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/vec_deque.rs","byte_start":25682,"byte_end":25741,"line_start":3,"line_end":3,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":6467},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/vec_deque.rs","byte_start":26014,"byte_end":26022,"line_start":17,"line_end":17,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::vec_deque::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":6469}],"decl_id":null,"docs":" Parallel iterator over a double-ended queue\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a double-ended queue","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/vec_deque.rs","byte_start":25931,"byte_end":25978,"line_start":15,"line_end":15,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":6489},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/vec_deque.rs","byte_start":26554,"byte_end":26558,"line_start":39,"line_end":39,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::vec_deque::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":6492}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a double-ended queue\n","sig":null,"attributes":[{"value":"/ Parallel iterator over an immutable reference to a double-ended queue","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/vec_deque.rs","byte_start":26452,"byte_end":26525,"line_start":37,"line_end":37,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6512},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/vec_deque.rs","byte_start":27241,"byte_end":27248,"line_start":70,"line_end":70,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::collections::vec_deque::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":6515}],"decl_id":null,"docs":" Parallel iterator over a mutable reference to a double-ended queue\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a mutable reference to a double-ended queue","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/vec_deque.rs","byte_start":27142,"byte_end":27212,"line_start":68,"line_end":68,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":6535},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/vec_deque.rs","byte_start":27859,"byte_end":27864,"line_start":94,"line_end":94,"column_start":12,"column_end":17},"name":"Drain","qualname":"::collections::vec_deque::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":6538},{"krate":0,"index":6539},{"krate":0,"index":6540}],"decl_id":null,"docs":" Draining parallel iterator that moves a range out of a double-ended queue,\n but keeps the total capacity.\n","sig":null,"attributes":[{"value":"/ Draining parallel iterator that moves a range out of a double-ended queue,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/vec_deque.rs","byte_start":27718,"byte_end":27796,"line_start":91,"line_end":91,"column_start":1,"column_end":79}},{"value":"/ but keeps the total capacity.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/vec_deque.rs","byte_start":27797,"byte_end":27830,"line_start":92,"line_end":92,"column_start":1,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":303},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"iter","qualname":"::iter","value":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":308},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":315},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":322},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":329},{"krate":0,"index":332},{"krate":0,"index":422},{"krate":0,"index":523},{"krate":0,"index":588},{"krate":0,"index":674},{"krate":0,"index":799},{"krate":0,"index":885},{"krate":0,"index":930},{"krate":0,"index":979},{"krate":0,"index":1160},{"krate":0,"index":1228},{"krate":0,"index":1300},{"krate":0,"index":1364},{"krate":0,"index":1435},{"krate":0,"index":1509},{"krate":0,"index":1583},{"krate":0,"index":1626},{"krate":0,"index":1669},{"krate":0,"index":1799},{"krate":0,"index":1839},{"krate":0,"index":1955},{"krate":0,"index":2067},{"krate":0,"index":2165},{"krate":0,"index":2187},{"krate":0,"index":2304},{"krate":0,"index":2390},{"krate":0,"index":2509},{"krate":0,"index":2790},{"krate":0,"index":2797},{"krate":0,"index":2825},{"krate":0,"index":2843},{"krate":0,"index":2973},{"krate":0,"index":3051},{"krate":0,"index":3113},{"krate":0,"index":3170},{"krate":0,"index":3235},{"krate":0,"index":3305},{"krate":0,"index":3349},{"krate":0,"index":3384},{"krate":0,"index":3422},{"krate":0,"index":3479},{"krate":0,"index":3511},{"krate":0,"index":3642},{"krate":0,"index":3717},{"krate":0,"index":3784},{"krate":0,"index":3980},{"krate":0,"index":4112},{"krate":0,"index":4171},{"krate":0,"index":4237},{"krate":0,"index":4259},{"krate":0,"index":4260},{"krate":0,"index":4263},{"krate":0,"index":4266},{"krate":0,"index":4269},{"krate":0,"index":4272},{"krate":0,"index":4273},{"krate":0,"index":4276},{"krate":0,"index":4279},{"krate":0,"index":4282},{"krate":0,"index":4285},{"krate":0,"index":4288},{"krate":0,"index":4291},{"krate":0,"index":4294},{"krate":0,"index":4297},{"krate":0,"index":4300},{"krate":0,"index":4301},{"krate":0,"index":4304},{"krate":0,"index":4307},{"krate":0,"index":4310},{"krate":0,"index":4313},{"krate":0,"index":4316},{"krate":0,"index":4319},{"krate":0,"index":4320},{"krate":0,"index":4323},{"krate":0,"index":4326},{"krate":0,"index":4329},{"krate":0,"index":4330},{"krate":0,"index":4333},{"krate":0,"index":4336},{"krate":0,"index":4339},{"krate":0,"index":4340},{"krate":0,"index":4343},{"krate":0,"index":4346},{"krate":0,"index":4349},{"krate":0,"index":4350},{"krate":0,"index":4353},{"krate":0,"index":4356},{"krate":0,"index":4359},{"krate":0,"index":4360},{"krate":0,"index":4363},{"krate":0,"index":4366},{"krate":0,"index":4369},{"krate":0,"index":4372},{"krate":0,"index":4375},{"krate":0,"index":4378},{"krate":0,"index":4379},{"krate":0,"index":4382},{"krate":0,"index":4385},{"krate":0,"index":4388},{"krate":0,"index":4389},{"krate":0,"index":4392},{"krate":0,"index":4395},{"krate":0,"index":4398},{"krate":0,"index":4401},{"krate":0,"index":4404},{"krate":0,"index":4407},{"krate":0,"index":4462},{"krate":0,"index":4465},{"krate":0,"index":4469},{"krate":0,"index":4474},{"krate":0,"index":4480},{"krate":0,"index":4485},{"krate":0,"index":4491},{"krate":0,"index":4694},{"krate":0,"index":4699},{"krate":0,"index":4764},{"krate":0,"index":4768},{"krate":0,"index":4772},{"krate":0,"index":4776},{"krate":0,"index":4782}],"decl_id":null,"docs":" Traits for writing parallel programs using an iterator-style interface","sig":null,"attributes":[{"value":"/ Traits for writing parallel programs using an iterator-style interface","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":29540,"byte_end":29614,"line_start":1,"line_end":1,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":29615,"byte_end":29618,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to interact with this module directly unless you have","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":29619,"byte_end":29697,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ need to name one of the iterator types.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":29698,"byte_end":29741,"line_start":4,"line_end":4,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":29742,"byte_end":29745,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Parallel iterators make it easy to write iterator-like chains that","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":29746,"byte_end":29816,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ execute in parallel: typically all you have to do is convert the","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":29817,"byte_end":29885,"line_start":7,"line_end":7,"column_start":1,"column_end":69}},{"value":"/ first `.iter()` (or `iter_mut()`, `into_iter()`, etc) method into","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":29886,"byte_end":29955,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/ `par_iter()` (or `par_iter_mut()`, `into_par_iter()`, etc). For","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":29956,"byte_end":30023,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"/ example, to compute the sum of the squares of a sequence of","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":30024,"byte_end":30087,"line_start":10,"line_end":10,"column_start":1,"column_end":64}},{"value":"/ integers, one might write:","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":30088,"byte_end":30118,"line_start":11,"line_end":11,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":30119,"byte_end":30122,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":30123,"byte_end":30134,"line_start":13,"line_end":13,"column_start":1,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":30135,"byte_end":30161,"line_start":14,"line_end":14,"column_start":1,"column_end":27}},{"value":"/ fn sum_of_squares(input: &[i32]) -> i32 {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":30162,"byte_end":30207,"line_start":15,"line_end":15,"column_start":1,"column_end":46}},{"value":"/     input.par_iter()","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":30208,"byte_end":30232,"line_start":16,"line_end":16,"column_start":1,"column_end":25}},{"value":"/          .map(|i| i * i)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":30233,"byte_end":30261,"line_start":17,"line_end":17,"column_start":1,"column_end":29}},{"value":"/          .sum()","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":30262,"byte_end":30281,"line_start":18,"line_end":18,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":30282,"byte_end":30287,"line_start":19,"line_end":19,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":30288,"byte_end":30295,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":30296,"byte_end":30299,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Or, to increment all the integers in a slice, you could write:","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":30300,"byte_end":30366,"line_start":22,"line_end":22,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":30367,"byte_end":30370,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":30371,"byte_end":30382,"line_start":24,"line_end":24,"column_start":1,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":30383,"byte_end":30409,"line_start":25,"line_end":25,"column_start":1,"column_end":27}},{"value":"/ fn increment_all(input: &mut [i32]) {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":30410,"byte_end":30451,"line_start":26,"line_end":26,"column_start":1,"column_end":42}},{"value":"/     input.par_iter_mut()","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":30452,"byte_end":30480,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/          .for_each(|p| *p += 1);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":30481,"byte_end":30517,"line_start":28,"line_end":28,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":30518,"byte_end":30523,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":30524,"byte_end":30531,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":30532,"byte_end":30535,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ To use parallel iterators, first import the traits by adding","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":30536,"byte_end":30600,"line_start":32,"line_end":32,"column_start":1,"column_end":65}},{"value":"/ something like `use rayon::prelude::*` to your module. You can","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":30601,"byte_end":30667,"line_start":33,"line_end":33,"column_start":1,"column_end":67}},{"value":"/ then call `par_iter`, `par_iter_mut`, or `into_par_iter` to get a","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":30668,"byte_end":30737,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"/ parallel iterator. Like a [regular iterator][], parallel","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":30738,"byte_end":30798,"line_start":35,"line_end":35,"column_start":1,"column_end":61}},{"value":"/ iterators work by first constructing a computation and then","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":30799,"byte_end":30862,"line_start":36,"line_end":36,"column_start":1,"column_end":64}},{"value":"/ executing it.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":30863,"byte_end":30880,"line_start":37,"line_end":37,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":30881,"byte_end":30884,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ In addition to `par_iter()` and friends, some types offer other","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":30885,"byte_end":30952,"line_start":39,"line_end":39,"column_start":1,"column_end":68}},{"value":"/ ways to create (or consume) parallel iterators:","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":30953,"byte_end":31004,"line_start":40,"line_end":40,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":31005,"byte_end":31008,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ - Slices (`&[T]`, `&mut [T]`) offer methods like `par_split` and","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":31009,"byte_end":31077,"line_start":42,"line_end":42,"column_start":1,"column_end":69}},{"value":"/   `par_windows`, as well as various parallel sorting","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":31078,"byte_end":31134,"line_start":43,"line_end":43,"column_start":1,"column_end":57}},{"value":"/   operations. See [the `ParallelSlice` trait] for the full list.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":31135,"byte_end":31203,"line_start":44,"line_end":44,"column_start":1,"column_end":69}},{"value":"/ - Strings (`&str`) offer methods like `par_split` and `par_lines`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":31204,"byte_end":31274,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"/   See [the `ParallelString` trait] for the full list.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":31275,"byte_end":31332,"line_start":46,"line_end":46,"column_start":1,"column_end":58}},{"value":"/ - Various collections offer [`par_extend`], which grows a","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":31333,"byte_end":31394,"line_start":47,"line_end":47,"column_start":1,"column_end":62}},{"value":"/   collection given a parallel iterator. (If you don't have a","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":31395,"byte_end":31459,"line_start":48,"line_end":48,"column_start":1,"column_end":65}},{"value":"/   collection to extend, you can use [`collect()`] to create a new","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":31460,"byte_end":31529,"line_start":49,"line_end":49,"column_start":1,"column_end":70}},{"value":"/   one from scratch.)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":31530,"byte_end":31554,"line_start":50,"line_end":50,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":31555,"byte_end":31558,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ [the `ParallelSlice` trait]: ../slice/trait.ParallelSlice.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":31559,"byte_end":31625,"line_start":52,"line_end":52,"column_start":1,"column_end":67}},{"value":"/ [the `ParallelString` trait]: ../str/trait.ParallelString.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":31626,"byte_end":31692,"line_start":53,"line_end":53,"column_start":1,"column_end":67}},{"value":"/ [`par_extend`]: trait.ParallelExtend.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":31693,"byte_end":31738,"line_start":54,"line_end":54,"column_start":1,"column_end":46}},{"value":"/ [`collect()`]: trait.ParallelIterator.html#method.collect","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":31739,"byte_end":31800,"line_start":55,"line_end":55,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":31801,"byte_end":31804,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ To see the full range of methods available on parallel iterators,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":31805,"byte_end":31874,"line_start":57,"line_end":57,"column_start":1,"column_end":70}},{"value":"/ check out the [`ParallelIterator`] and [`IndexedParallelIterator`]","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":31875,"byte_end":31945,"line_start":58,"line_end":58,"column_start":1,"column_end":71}},{"value":"/ traits.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":31946,"byte_end":31957,"line_start":59,"line_end":59,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":31958,"byte_end":31961,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ If you'd like to build a custom parallel iterator, or to write your own","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":31962,"byte_end":32037,"line_start":61,"line_end":61,"column_start":1,"column_end":76}},{"value":"/ combinator, then check out the [split] function and the [plumbing] module.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":32038,"byte_end":32116,"line_start":62,"line_end":62,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":32117,"byte_end":32120,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ [regular iterator]: http://doc.rust-lang.org/std/iter/trait.Iterator.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":32121,"byte_end":32198,"line_start":64,"line_end":64,"column_start":1,"column_end":78}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":32199,"byte_end":32252,"line_start":65,"line_end":65,"column_start":1,"column_end":54}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":32253,"byte_end":32320,"line_start":66,"line_end":66,"column_start":1,"column_end":68}},{"value":"/ [split]: fn.split.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":32321,"byte_end":32347,"line_start":67,"line_end":67,"column_start":1,"column_end":27}},{"value":"/ [plumbing]: plumbing/index.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":32348,"byte_end":32383,"line_start":68,"line_end":68,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":32384,"byte_end":32387,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ Note: Several of the `ParallelIterator` methods rely on a `Try` trait which","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":32388,"byte_end":32467,"line_start":70,"line_end":70,"column_start":1,"column_end":80}},{"value":"/ has been deliberately obscured from the public API.  This trait is intended","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":32468,"byte_end":32547,"line_start":71,"line_end":71,"column_start":1,"column_end":80}},{"value":"/ to mirror the unstable `std::ops::Try` with implementations for `Option` and","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":32548,"byte_end":32628,"line_start":72,"line_end":72,"column_start":1,"column_end":81}},{"value":"/ `Result`, where `Some`/`Ok` values will let those iterators continue, but","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":32629,"byte_end":32706,"line_start":73,"line_end":73,"column_start":1,"column_end":78}},{"value":"/ `None`/`Err` values will exit early.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":32707,"byte_end":32747,"line_start":74,"line_end":74,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":32748,"byte_end":32751,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ A note about object safety: It is currently _not_ possible to wrap","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":32752,"byte_end":32822,"line_start":76,"line_end":76,"column_start":1,"column_end":71}},{"value":"/ a `ParallelIterator` (or any trait that depends on it) using a","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":32823,"byte_end":32889,"line_start":77,"line_end":77,"column_start":1,"column_end":67}},{"value":"/ `Box<dyn ParallelIterator>` or other kind of dynamic allocation,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":32890,"byte_end":32958,"line_start":78,"line_end":78,"column_start":1,"column_end":69}},{"value":"/ because `ParallelIterator` is **not object-safe**.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":32959,"byte_end":33013,"line_start":79,"line_end":79,"column_start":1,"column_end":55}},{"value":"/ (This keeps the implementation simpler and allows extra optimizations.)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":33014,"byte_end":33089,"line_start":80,"line_end":80,"column_start":1,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":332},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"plumbing","qualname":"::iter::plumbing","value":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","parent":null,"children":[{"krate":0,"index":333},{"krate":0,"index":336},{"krate":0,"index":339},{"krate":0,"index":342},{"krate":0,"index":345},{"krate":0,"index":350},{"krate":0,"index":359},{"krate":0,"index":367},{"krate":0,"index":375},{"krate":0,"index":378},{"krate":0,"index":382},{"krate":0,"index":6545},{"krate":0,"index":6548},{"krate":0,"index":6547},{"krate":0,"index":387},{"krate":0,"index":6550},{"krate":0,"index":6554},{"krate":0,"index":6553},{"krate":0,"index":390},{"krate":0,"index":393},{"krate":0,"index":406},{"krate":0,"index":414},{"krate":0,"index":417}],"decl_id":null,"docs":" Traits and functions used to implement parallel iteration.  These are\n low-level details -- users of parallel iterators should not need to\n interact with them directly.  See [the `plumbing` README][r] for a general overview.","sig":null,"attributes":[{"value":"/ Traits and functions used to implement parallel iteration.  These are","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":132536,"byte_end":132609,"line_start":1,"line_end":1,"column_start":1,"column_end":74}},{"value":"/ low-level details -- users of parallel iterators should not need to","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":132610,"byte_end":132681,"line_start":2,"line_end":2,"column_start":1,"column_end":72}},{"value":"/ interact with them directly.  See [the `plumbing` README][r] for a general overview.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":132682,"byte_end":132770,"line_start":3,"line_end":3,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":132771,"byte_end":132774,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [r]: https://github.com/rayon-rs/rayon/blob/master/src/iter/plumbing/README.md","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":132775,"byte_end":132857,"line_start":5,"line_end":5,"column_start":1,"column_end":83}}]},{"kind":"Trait","id":{"krate":0,"index":345},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":133314,"byte_end":133330,"line_start":20,"line_end":20,"column_start":11,"column_end":27},"name":"ProducerCallback","qualname":"::iter::plumbing::ProducerCallback","value":"ProducerCallback<T>","parent":null,"children":[{"krate":0,"index":347},{"krate":0,"index":348}],"decl_id":null,"docs":" The `ProducerCallback` trait is a kind of generic closure,\n [analogous to `FnOnce`][FnOnce]. See [the corresponding section in\n the plumbing README][r] for more details.","sig":null,"attributes":[{"value":"/ The `ProducerCallback` trait is a kind of generic closure,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":132953,"byte_end":133015,"line_start":14,"line_end":14,"column_start":1,"column_end":63}},{"value":"/ [analogous to `FnOnce`][FnOnce]. See [the corresponding section in","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":133016,"byte_end":133086,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ the plumbing README][r] for more details.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":133087,"byte_end":133132,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":133133,"byte_end":133136,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [r]: https://github.com/rayon-rs/rayon/blob/master/src/iter/plumbing/README.md#producer-callback","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":133137,"byte_end":133237,"line_start":18,"line_end":18,"column_start":1,"column_end":101}},{"value":"/ [FnOnce]: https://doc.rust-lang.org/std/ops/trait.FnOnce.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":133238,"byte_end":133303,"line_start":19,"line_end":19,"column_start":1,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":347},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":133563,"byte_end":133569,"line_start":25,"line_end":25,"column_start":10,"column_end":16},"name":"Output","qualname":"::iter::plumbing::ProducerCallback::Output","value":"type Output;","parent":{"krate":0,"index":345},"children":[],"decl_id":null,"docs":" The type of value returned by this callback. Analogous to\n [`Output` from the `FnOnce` trait][Output].","sig":null,"attributes":[{"value":"/ The type of value returned by this callback. Analogous to","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":133340,"byte_end":133401,"line_start":21,"line_end":21,"column_start":5,"column_end":66}},{"value":"/ [`Output` from the `FnOnce` trait][Output].","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":133406,"byte_end":133453,"line_start":22,"line_end":22,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":133458,"byte_end":133461,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ [Output]: https://doc.rust-lang.org/std/ops/trait.FnOnce.html#associatedtype.Output","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":133466,"byte_end":133553,"line_start":24,"line_end":24,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":133787,"byte_end":133795,"line_start":30,"line_end":30,"column_start":8,"column_end":16},"name":"callback","qualname":"::iter::plumbing::ProducerCallback::callback","value":"pub fn callback<P>(Self, P) -> Self::Output where P: Producer<Item = T>","parent":{"krate":0,"index":345},"children":[],"decl_id":null,"docs":" Invokes the callback with the given producer as argument. The\n key point of this trait is that this method is generic over\n `P`, and hence implementors must be defined for any producer.\n","sig":null,"attributes":[{"value":"/ Invokes the callback with the given producer as argument. The","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":133576,"byte_end":133641,"line_start":27,"line_end":27,"column_start":5,"column_end":70}},{"value":"/ key point of this trait is that this method is generic over","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":133646,"byte_end":133709,"line_start":28,"line_end":28,"column_start":5,"column_end":68}},{"value":"/ `P`, and hence implementors must be defined for any producer.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":133714,"byte_end":133779,"line_start":29,"line_end":29,"column_start":5,"column_end":70}}]},{"kind":"Trait","id":{"krate":0,"index":350},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":135269,"byte_end":135277,"line_start":59,"line_end":59,"column_start":11,"column_end":19},"name":"Producer","qualname":"::iter::plumbing::Producer","value":"Producer: Send + Sized","parent":null,"children":[{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357}],"decl_id":null,"docs":" A `Producer` is effectively a \"splittable `IntoIterator`\". That\n is, a producer is a value which can be converted into an iterator\n at any time: at that point, it simply produces items on demand,\n like any iterator. But what makes a `Producer` special is that,\n *before* we convert to an iterator, we can also **split** it at a\n particular point using the `split_at` method. This will yield up\n two producers, one producing the items before that point, and one\n producing the items after that point (these two producers can then\n independently be split further, or be converted into iterators).\n In Rayon, this splitting is used to divide between threads.\n See [the `plumbing` README][r] for further details.","sig":null,"attributes":[{"value":"/ A `Producer` is effectively a \"splittable `IntoIterator`\". That","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":133878,"byte_end":133945,"line_start":35,"line_end":35,"column_start":1,"column_end":68}},{"value":"/ is, a producer is a value which can be converted into an iterator","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":133946,"byte_end":134015,"line_start":36,"line_end":36,"column_start":1,"column_end":70}},{"value":"/ at any time: at that point, it simply produces items on demand,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":134016,"byte_end":134083,"line_start":37,"line_end":37,"column_start":1,"column_end":68}},{"value":"/ like any iterator. But what makes a `Producer` special is that,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":134084,"byte_end":134151,"line_start":38,"line_end":38,"column_start":1,"column_end":68}},{"value":"/ *before* we convert to an iterator, we can also **split** it at a","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":134152,"byte_end":134221,"line_start":39,"line_end":39,"column_start":1,"column_end":70}},{"value":"/ particular point using the `split_at` method. This will yield up","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":134222,"byte_end":134290,"line_start":40,"line_end":40,"column_start":1,"column_end":69}},{"value":"/ two producers, one producing the items before that point, and one","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":134291,"byte_end":134360,"line_start":41,"line_end":41,"column_start":1,"column_end":70}},{"value":"/ producing the items after that point (these two producers can then","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":134361,"byte_end":134431,"line_start":42,"line_end":42,"column_start":1,"column_end":71}},{"value":"/ independently be split further, or be converted into iterators).","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":134432,"byte_end":134500,"line_start":43,"line_end":43,"column_start":1,"column_end":69}},{"value":"/ In Rayon, this splitting is used to divide between threads.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":134501,"byte_end":134564,"line_start":44,"line_end":44,"column_start":1,"column_end":64}},{"value":"/ See [the `plumbing` README][r] for further details.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":134565,"byte_end":134620,"line_start":45,"line_end":45,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":134621,"byte_end":134624,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Note that each producer will always produce a fixed number of","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":134625,"byte_end":134690,"line_start":47,"line_end":47,"column_start":1,"column_end":66}},{"value":"/ items N. However, this number N is not queryable through the API;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":134691,"byte_end":134760,"line_start":48,"line_end":48,"column_start":1,"column_end":70}},{"value":"/ the consumer is expected to track it.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":134761,"byte_end":134802,"line_start":49,"line_end":49,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":134803,"byte_end":134806,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ NB. You might expect `Producer` to extend the `IntoIterator`","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":134807,"byte_end":134871,"line_start":51,"line_end":51,"column_start":1,"column_end":65}},{"value":"/ trait.  However, [rust-lang/rust#20671][20671] prevents us from","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":134872,"byte_end":134939,"line_start":52,"line_end":52,"column_start":1,"column_end":68}},{"value":"/ declaring the DoubleEndedIterator and ExactSizeIterator","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":134940,"byte_end":134999,"line_start":53,"line_end":53,"column_start":1,"column_end":60}},{"value":"/ constraints on a required IntoIterator trait, so we inline","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":135000,"byte_end":135062,"line_start":54,"line_end":54,"column_start":1,"column_end":63}},{"value":"/ IntoIterator here until that issue is fixed.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":135063,"byte_end":135111,"line_start":55,"line_end":55,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":135112,"byte_end":135115,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [r]: https://github.com/rayon-rs/rayon/blob/master/src/iter/plumbing/README.md","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":135116,"byte_end":135198,"line_start":57,"line_end":57,"column_start":1,"column_end":83}},{"value":"/ [20671]: https://github.com/rust-lang/rust/issues/20671","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":135199,"byte_end":135258,"line_start":58,"line_end":58,"column_start":1,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":351},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":135414,"byte_end":135418,"line_start":62,"line_end":62,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::plumbing::Producer::Item","value":"type Item;","parent":{"krate":0,"index":350},"children":[],"decl_id":null,"docs":" The type of item that will be produced by this producer once\n it is converted into an iterator.\n","sig":null,"attributes":[{"value":"/ The type of item that will be produced by this producer once","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":135298,"byte_end":135362,"line_start":60,"line_end":60,"column_start":5,"column_end":69}},{"value":"/ it is converted into an iterator.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":135367,"byte_end":135404,"line_start":61,"line_end":61,"column_start":5,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":352},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":135475,"byte_end":135483,"line_start":65,"line_end":65,"column_start":10,"column_end":18},"name":"IntoIter","qualname":"::iter::plumbing::Producer::IntoIter","value":"type IntoIter: Iterator<Item = Self::Item> + DoubleEndedIterator + ExactSizeIterator;","parent":{"krate":0,"index":350},"children":[],"decl_id":null,"docs":" The type of iterator we will become.\n","sig":null,"attributes":[{"value":"/ The type of iterator we will become.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":135425,"byte_end":135465,"line_start":64,"line_end":64,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":135666,"byte_end":135675,"line_start":69,"line_end":69,"column_start":8,"column_end":17},"name":"into_iter","qualname":"::iter::plumbing::Producer::into_iter","value":"pub fn into_iter(Self) -> Self::IntoIter","parent":{"krate":0,"index":350},"children":[],"decl_id":null,"docs":" Convert `self` into an iterator; at this point, no more parallel splits\n are possible.\n","sig":null,"attributes":[{"value":"/ Convert `self` into an iterator; at this point, no more parallel splits","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":135561,"byte_end":135636,"line_start":67,"line_end":67,"column_start":5,"column_end":80}},{"value":"/ are possible.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":135641,"byte_end":135658,"line_start":68,"line_end":68,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":136278,"byte_end":136285,"line_start":81,"line_end":81,"column_start":8,"column_end":15},"name":"min_len","qualname":"::iter::plumbing::Producer::min_len","value":"pub fn min_len(&Self) -> usize","parent":{"krate":0,"index":350},"children":[],"decl_id":null,"docs":" The minimum number of items that we will process\n sequentially. Defaults to 1, which means that we will split\n all the way down to a single item. This can be raised higher\n using the [`with_min_len`] method, which will force us to\n create sequential tasks at a larger granularity. Note that\n Rayon automatically normally attempts to adjust the size of\n parallel splits to reduce overhead, so this should not be\n needed.","sig":null,"attributes":[{"value":"/ The minimum number of items that we will process","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":135706,"byte_end":135758,"line_start":71,"line_end":71,"column_start":5,"column_end":57}},{"value":"/ sequentially. Defaults to 1, which means that we will split","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":135763,"byte_end":135826,"line_start":72,"line_end":72,"column_start":5,"column_end":68}},{"value":"/ all the way down to a single item. This can be raised higher","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":135831,"byte_end":135895,"line_start":73,"line_end":73,"column_start":5,"column_end":69}},{"value":"/ using the [`with_min_len`] method, which will force us to","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":135900,"byte_end":135961,"line_start":74,"line_end":74,"column_start":5,"column_end":66}},{"value":"/ create sequential tasks at a larger granularity. Note that","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":135966,"byte_end":136028,"line_start":75,"line_end":75,"column_start":5,"column_end":67}},{"value":"/ Rayon automatically normally attempts to adjust the size of","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":136033,"byte_end":136096,"line_start":76,"line_end":76,"column_start":5,"column_end":68}},{"value":"/ parallel splits to reduce overhead, so this should not be","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":136101,"byte_end":136162,"line_start":77,"line_end":77,"column_start":5,"column_end":66}},{"value":"/ needed.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":136167,"byte_end":136178,"line_start":78,"line_end":78,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":136183,"byte_end":136186,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ [`with_min_len`]: ../trait.IndexedParallelIterator.html#method.with_min_len","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":136191,"byte_end":136270,"line_start":80,"line_end":80,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":136850,"byte_end":136857,"line_start":94,"line_end":94,"column_start":8,"column_end":15},"name":"max_len","qualname":"::iter::plumbing::Producer::max_len","value":"pub fn max_len(&Self) -> usize","parent":{"krate":0,"index":350},"children":[],"decl_id":null,"docs":" The maximum number of items that we will process\n sequentially. Defaults to MAX, which means that we can choose\n not to split at all. This can be lowered using the\n [`with_max_len`] method, which will force us to create more\n parallel tasks. Note that Rayon automatically normally\n attempts to adjust the size of parallel splits to reduce\n overhead, so this should not be needed.","sig":null,"attributes":[{"value":"/ The maximum number of items that we will process","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":136325,"byte_end":136377,"line_start":85,"line_end":85,"column_start":5,"column_end":57}},{"value":"/ sequentially. Defaults to MAX, which means that we can choose","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":136382,"byte_end":136447,"line_start":86,"line_end":86,"column_start":5,"column_end":70}},{"value":"/ not to split at all. This can be lowered using the","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":136452,"byte_end":136506,"line_start":87,"line_end":87,"column_start":5,"column_end":59}},{"value":"/ [`with_max_len`] method, which will force us to create more","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":136511,"byte_end":136574,"line_start":88,"line_end":88,"column_start":5,"column_end":68}},{"value":"/ parallel tasks. Note that Rayon automatically normally","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":136579,"byte_end":136637,"line_start":89,"line_end":89,"column_start":5,"column_end":63}},{"value":"/ attempts to adjust the size of parallel splits to reduce","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":136642,"byte_end":136702,"line_start":90,"line_end":90,"column_start":5,"column_end":65}},{"value":"/ overhead, so this should not be needed.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":136707,"byte_end":136750,"line_start":91,"line_end":91,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":136755,"byte_end":136758,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ [`with_max_len`]: ../trait.IndexedParallelIterator.html#method.with_max_len","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":136763,"byte_end":136842,"line_start":93,"line_end":93,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":137045,"byte_end":137053,"line_start":100,"line_end":100,"column_start":8,"column_end":16},"name":"split_at","qualname":"::iter::plumbing::Producer::split_at","value":"pub fn split_at(Self, usize) -> (Self, Self)","parent":{"krate":0,"index":350},"children":[],"decl_id":null,"docs":" Split into two producers; one produces items `0..index`, the\n other `index..N`. Index must be less than or equal to `N`.\n","sig":null,"attributes":[{"value":"/ Split into two producers; one produces items `0..index`, the","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":136906,"byte_end":136970,"line_start":98,"line_end":98,"column_start":5,"column_end":69}},{"value":"/ other `index..N`. Index must be less than or equal to `N`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":136975,"byte_end":137037,"line_start":99,"line_end":99,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":137320,"byte_end":137329,"line_start":106,"line_end":106,"column_start":8,"column_end":17},"name":"fold_with","qualname":"::iter::plumbing::Producer::fold_with","value":"pub fn fold_with<F>(Self, F) -> F where F: Folder<Self::Item>","parent":{"krate":0,"index":350},"children":[],"decl_id":null,"docs":" Iterate the producer, feeding each element to `folder`, and\n stop when the folder is full (or all elements have been consumed).","sig":null,"attributes":[{"value":"/ Iterate the producer, feeding each element to `folder`, and","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":137096,"byte_end":137159,"line_start":102,"line_end":102,"column_start":5,"column_end":68}},{"value":"/ stop when the folder is full (or all elements have been consumed).","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":137164,"byte_end":137234,"line_start":103,"line_end":103,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":137239,"byte_end":137242,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ The provided implementation is sufficient for most iterables.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":137247,"byte_end":137312,"line_start":105,"line_end":105,"column_start":5,"column_end":70}}]},{"kind":"Trait","id":{"krate":0,"index":359},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":138277,"byte_end":138285,"line_start":128,"line_end":128,"column_start":11,"column_end":19},"name":"Consumer","qualname":"::iter::plumbing::Consumer","value":"Consumer<Item>: Send + Sized","parent":null,"children":[{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366}],"decl_id":null,"docs":" A consumer is effectively a [generalized \"fold\" operation][fold],\n and in fact each consumer will eventually be converted into a\n [`Folder`]. What makes a consumer special is that, like a\n [`Producer`], it can be **split** into multiple consumers using\n the `split_at` method. When a consumer is split, it produces two\n consumers, as well as a **reducer**. The two consumers can be fed\n items independently, and when they are done the reducer is used to\n combine their two results into one. See [the `plumbing`\n README][r] for further details.","sig":null,"attributes":[{"value":"/ A consumer is effectively a [generalized \"fold\" operation][fold],","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":137457,"byte_end":137526,"line_start":114,"line_end":114,"column_start":1,"column_end":70}},{"value":"/ and in fact each consumer will eventually be converted into a","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":137527,"byte_end":137592,"line_start":115,"line_end":115,"column_start":1,"column_end":66}},{"value":"/ [`Folder`]. What makes a consumer special is that, like a","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":137593,"byte_end":137654,"line_start":116,"line_end":116,"column_start":1,"column_end":62}},{"value":"/ [`Producer`], it can be **split** into multiple consumers using","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":137655,"byte_end":137722,"line_start":117,"line_end":117,"column_start":1,"column_end":68}},{"value":"/ the `split_at` method. When a consumer is split, it produces two","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":137723,"byte_end":137791,"line_start":118,"line_end":118,"column_start":1,"column_end":69}},{"value":"/ consumers, as well as a **reducer**. The two consumers can be fed","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":137792,"byte_end":137861,"line_start":119,"line_end":119,"column_start":1,"column_end":70}},{"value":"/ items independently, and when they are done the reducer is used to","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":137862,"byte_end":137932,"line_start":120,"line_end":120,"column_start":1,"column_end":71}},{"value":"/ combine their two results into one. See [the `plumbing`","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":137933,"byte_end":137992,"line_start":121,"line_end":121,"column_start":1,"column_end":60}},{"value":"/ README][r] for further details.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":137993,"byte_end":138028,"line_start":122,"line_end":122,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":138029,"byte_end":138032,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ [r]: https://github.com/rayon-rs/rayon/blob/master/src/iter/plumbing/README.md","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":138033,"byte_end":138115,"line_start":124,"line_end":124,"column_start":1,"column_end":83}},{"value":"/ [fold]: https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.fold","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":138116,"byte_end":138194,"line_start":125,"line_end":125,"column_start":1,"column_end":79}},{"value":"/ [`Folder`]: trait.Folder.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":138195,"byte_end":138228,"line_start":126,"line_end":126,"column_start":1,"column_end":34}},{"value":"/ [`Producer`]: trait.Producer.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":138229,"byte_end":138266,"line_start":127,"line_end":127,"column_start":1,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":361},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":138386,"byte_end":138392,"line_start":130,"line_end":130,"column_start":10,"column_end":16},"name":"Folder","qualname":"::iter::plumbing::Consumer::Folder","value":"type Folder: Folder<Item, Result = Self::Result>;","parent":{"krate":0,"index":359},"children":[],"decl_id":null,"docs":" The type of folder that this consumer can be converted into.\n","sig":null,"attributes":[{"value":"/ The type of folder that this consumer can be converted into.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":138312,"byte_end":138376,"line_start":129,"line_end":129,"column_start":5,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":362},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":138513,"byte_end":138520,"line_start":133,"line_end":133,"column_start":10,"column_end":17},"name":"Reducer","qualname":"::iter::plumbing::Consumer::Reducer","value":"type Reducer: Reducer<Self::Result>;","parent":{"krate":0,"index":359},"children":[],"decl_id":null,"docs":" The type of reducer that is produced if this consumer is split.\n","sig":null,"attributes":[{"value":"/ The type of reducer that is produced if this consumer is split.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":138436,"byte_end":138503,"line_start":132,"line_end":132,"column_start":5,"column_end":72}}]},{"kind":"Type","id":{"krate":0,"index":363},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":138626,"byte_end":138632,"line_start":136,"line_end":136,"column_start":10,"column_end":16},"name":"Result","qualname":"::iter::plumbing::Consumer::Result","value":"type Result: Send;","parent":{"krate":0,"index":359},"children":[],"decl_id":null,"docs":" The type of result that this consumer will ultimately produce.\n","sig":null,"attributes":[{"value":"/ The type of result that this consumer will ultimately produce.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":138550,"byte_end":138616,"line_start":135,"line_end":135,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":138868,"byte_end":138876,"line_start":142,"line_end":142,"column_start":8,"column_end":16},"name":"split_at","qualname":"::iter::plumbing::Consumer::split_at","value":"pub fn split_at(Self, usize) -> (Self, Self, Self::Reducer)","parent":{"krate":0,"index":359},"children":[],"decl_id":null,"docs":" Divide the consumer into two consumers, one processing items\n `0..index` and one processing items from `index..`. Also\n produces a reducer that can be used to reduce the results at\n the end.\n","sig":null,"attributes":[{"value":"/ Divide the consumer into two consumers, one processing items","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":138645,"byte_end":138709,"line_start":138,"line_end":138,"column_start":5,"column_end":69}},{"value":"/ `0..index` and one processing items from `index..`. Also","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":138714,"byte_end":138774,"line_start":139,"line_end":139,"column_start":5,"column_end":65}},{"value":"/ produces a reducer that can be used to reduce the results at","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":138779,"byte_end":138843,"line_start":140,"line_end":140,"column_start":5,"column_end":69}},{"value":"/ the end.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":138848,"byte_end":138860,"line_start":141,"line_end":141,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":139062,"byte_end":139073,"line_start":146,"line_end":146,"column_start":8,"column_end":19},"name":"into_folder","qualname":"::iter::plumbing::Consumer::into_folder","value":"pub fn into_folder(Self) -> Self::Folder","parent":{"krate":0,"index":359},"children":[],"decl_id":null,"docs":" Convert the consumer into a folder that can consume items\n sequentially, eventually producing a final result.\n","sig":null,"attributes":[{"value":"/ Convert the consumer into a folder that can consume items","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":138934,"byte_end":138995,"line_start":144,"line_end":144,"column_start":5,"column_end":66}},{"value":"/ sequentially, eventually producing a final result.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":139000,"byte_end":139054,"line_start":145,"line_end":145,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":139232,"byte_end":139236,"line_start":150,"line_end":150,"column_start":8,"column_end":12},"name":"full","qualname":"::iter::plumbing::Consumer::full","value":"pub fn full(&Self) -> bool","parent":{"krate":0,"index":359},"children":[],"decl_id":null,"docs":" Hint whether this `Consumer` would like to stop processing\n further items, e.g. if a search has been completed.\n","sig":null,"attributes":[{"value":"/ Hint whether this `Consumer` would like to stop processing","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":139102,"byte_end":139164,"line_start":148,"line_end":148,"column_start":5,"column_end":67}},{"value":"/ further items, e.g. if a search has been completed.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":139169,"byte_end":139224,"line_start":149,"line_end":149,"column_start":5,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":367},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":139599,"byte_end":139605,"line_start":159,"line_end":159,"column_start":11,"column_end":17},"name":"Folder","qualname":"::iter::plumbing::Folder","value":"Folder<Item>: Sized","parent":null,"children":[{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":373},{"krate":0,"index":374}],"decl_id":null,"docs":" The `Folder` trait encapsulates [the standard fold\n operation][fold].  It can be fed many items using the `consume`\n method. At the end, once all items have been consumed, it can then\n be converted (using `complete`) into a final value.","sig":null,"attributes":[{"value":"/ The `Folder` trait encapsulates [the standard fold","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":139256,"byte_end":139310,"line_start":153,"line_end":153,"column_start":1,"column_end":55}},{"value":"/ operation][fold].  It can be fed many items using the `consume`","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":139311,"byte_end":139378,"line_start":154,"line_end":154,"column_start":1,"column_end":68}},{"value":"/ method. At the end, once all items have been consumed, it can then","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":139379,"byte_end":139449,"line_start":155,"line_end":155,"column_start":1,"column_end":71}},{"value":"/ be converted (using `complete`) into a final value.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":139450,"byte_end":139505,"line_start":156,"line_end":156,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":139506,"byte_end":139509,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ [fold]: https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.fold","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":139510,"byte_end":139588,"line_start":158,"line_end":158,"column_start":1,"column_end":79}}]},{"kind":"Type","id":{"krate":0,"index":369},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":139705,"byte_end":139711,"line_start":161,"line_end":161,"column_start":10,"column_end":16},"name":"Result","qualname":"::iter::plumbing::Folder::Result","value":"type Result;","parent":{"krate":0,"index":367},"children":[],"decl_id":null,"docs":" The type of result that will ultimately be produced by the folder.\n","sig":null,"attributes":[{"value":"/ The type of result that will ultimately be produced by the folder.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":139625,"byte_end":139695,"line_start":160,"line_end":160,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":139780,"byte_end":139787,"line_start":164,"line_end":164,"column_start":8,"column_end":15},"name":"consume","qualname":"::iter::plumbing::Folder::consume","value":"pub fn consume(Self, Item) -> Self","parent":{"krate":0,"index":367},"children":[],"decl_id":null,"docs":" Consume next item and return new sequential state.\n","sig":null,"attributes":[{"value":"/ Consume next item and return new sequential state.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":139718,"byte_end":139772,"line_start":163,"line_end":163,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":140216,"byte_end":140228,"line_start":174,"line_end":174,"column_start":8,"column_end":20},"name":"consume_iter","qualname":"::iter::plumbing::Folder::consume_iter","value":"pub fn consume_iter<I>(Self, I) -> Self where I: IntoIterator<Item = Item>","parent":{"krate":0,"index":367},"children":[],"decl_id":null,"docs":" Consume items from the iterator until full, and return new sequential state.","sig":null,"attributes":[{"value":"/ Consume items from the iterator until full, and return new sequential state.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":139820,"byte_end":139900,"line_start":166,"line_end":166,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":139905,"byte_end":139908,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ This method is **optional**. The default simply iterates over","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":139913,"byte_end":139978,"line_start":168,"line_end":168,"column_start":5,"column_end":70}},{"value":"/ `iter`, invoking `consume` and checking after each iteration","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":139983,"byte_end":140047,"line_start":169,"line_end":169,"column_start":5,"column_end":69}},{"value":"/ whether `full` returns false.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":140052,"byte_end":140085,"line_start":170,"line_end":170,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":140090,"byte_end":140093,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ The main reason to override it is if you can provide a more","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":140098,"byte_end":140161,"line_start":172,"line_end":172,"column_start":5,"column_end":68}},{"value":"/ specialized, efficient implementation.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":140166,"byte_end":140208,"line_start":173,"line_end":173,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":140536,"byte_end":140544,"line_start":188,"line_end":188,"column_start":8,"column_end":16},"name":"complete","qualname":"::iter::plumbing::Folder::complete","value":"pub fn complete(Self) -> Self::Result","parent":{"krate":0,"index":367},"children":[],"decl_id":null,"docs":" Finish consuming items, produce final result.\n","sig":null,"attributes":[{"value":"/ Finish consuming items, produce final result.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":140479,"byte_end":140528,"line_start":187,"line_end":187,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":140701,"byte_end":140705,"line_start":192,"line_end":192,"column_start":8,"column_end":12},"name":"full","qualname":"::iter::plumbing::Folder::full","value":"pub fn full(&Self) -> bool","parent":{"krate":0,"index":367},"children":[],"decl_id":null,"docs":" Hint whether this `Folder` would like to stop processing\n further items, e.g. if a search has been completed.\n","sig":null,"attributes":[{"value":"/ Hint whether this `Folder` would like to stop processing","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":140573,"byte_end":140633,"line_start":190,"line_end":190,"column_start":5,"column_end":65}},{"value":"/ further items, e.g. if a search has been completed.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":140638,"byte_end":140693,"line_start":191,"line_end":191,"column_start":5,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":375},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":141135,"byte_end":141142,"line_start":202,"line_end":202,"column_start":11,"column_end":18},"name":"Reducer","qualname":"::iter::plumbing::Reducer","value":"Reducer<Result>","parent":null,"children":[{"krate":0,"index":377}],"decl_id":null,"docs":" The reducer is the final step of a `Consumer` -- after a consumer\n has been split into two parts, and each of those parts has been\n fully processed, we are left with two results. The reducer is then\n used to combine those two results into one. See [the `plumbing`\n README][r] for further details.","sig":null,"attributes":[{"value":"/ The reducer is the final step of a `Consumer` -- after a consumer","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":140725,"byte_end":140794,"line_start":195,"line_end":195,"column_start":1,"column_end":70}},{"value":"/ has been split into two parts, and each of those parts has been","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":140795,"byte_end":140862,"line_start":196,"line_end":196,"column_start":1,"column_end":68}},{"value":"/ fully processed, we are left with two results. The reducer is then","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":140863,"byte_end":140933,"line_start":197,"line_end":197,"column_start":1,"column_end":71}},{"value":"/ used to combine those two results into one. See [the `plumbing`","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":140934,"byte_end":141001,"line_start":198,"line_end":198,"column_start":1,"column_end":68}},{"value":"/ README][r] for further details.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":141002,"byte_end":141037,"line_start":199,"line_end":199,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":141038,"byte_end":141041,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ [r]: https://github.com/rayon-rs/rayon/blob/master/src/iter/plumbing/README.md","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":141042,"byte_end":141124,"line_start":201,"line_end":201,"column_start":1,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":141243,"byte_end":141249,"line_start":205,"line_end":205,"column_start":8,"column_end":14},"name":"reduce","qualname":"::iter::plumbing::Reducer::reduce","value":"pub fn reduce(Self, Result, Result) -> Result","parent":{"krate":0,"index":375},"children":[],"decl_id":null,"docs":" Reduce two final results into one; this is executed after a\n split.\n","sig":null,"attributes":[{"value":"/ Reduce two final results into one; this is executed after a","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":141157,"byte_end":141220,"line_start":203,"line_end":203,"column_start":5,"column_end":68}},{"value":"/ split.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":141225,"byte_end":141235,"line_start":204,"line_end":204,"column_start":5,"column_end":15}}]},{"kind":"Trait","id":{"krate":0,"index":378},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":141611,"byte_end":141628,"line_start":213,"line_end":213,"column_start":11,"column_end":28},"name":"UnindexedConsumer","qualname":"::iter::plumbing::UnindexedConsumer","value":"UnindexedConsumer<I>: Consumer<I>","parent":null,"children":[{"krate":0,"index":380},{"krate":0,"index":381}],"decl_id":null,"docs":" A stateless consumer can be freely copied. These consumers can be\n used like regular consumers, but they also support a\n `split_off_left` method that does not take an index to split, but\n simply splits at some arbitrary point (`for_each`, for example,\n produces an unindexed consumer).\n","sig":null,"attributes":[{"value":"/ A stateless consumer can be freely copied. These consumers can be","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":141299,"byte_end":141368,"line_start":208,"line_end":208,"column_start":1,"column_end":70}},{"value":"/ used like regular consumers, but they also support a","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":141369,"byte_end":141425,"line_start":209,"line_end":209,"column_start":1,"column_end":57}},{"value":"/ `split_off_left` method that does not take an index to split, but","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":141426,"byte_end":141495,"line_start":210,"line_end":210,"column_start":1,"column_end":70}},{"value":"/ simply splits at some arbitrary point (`for_each`, for example,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":141496,"byte_end":141563,"line_start":211,"line_end":211,"column_start":1,"column_end":68}},{"value":"/ produces an unindexed consumer).","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":141564,"byte_end":141600,"line_start":212,"line_end":212,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":142104,"byte_end":142118,"line_start":221,"line_end":221,"column_start":8,"column_end":22},"name":"split_off_left","qualname":"::iter::plumbing::UnindexedConsumer::split_off_left","value":"pub fn split_off_left(&Self) -> Self","parent":{"krate":0,"index":378},"children":[],"decl_id":null,"docs":" Splits off a \"left\" consumer and returns it. The `self`\n consumer should then be used to consume the \"right\" portion of\n the data. (The ordering matters for methods like find_first --\n values produced by the returned value are given precedence\n over values produced by `self`.) Once the left and right\n halves have been fully consumed, you should reduce the results\n with the result of `to_reducer`.\n","sig":null,"attributes":[{"value":"/ Splits off a \"left\" consumer and returns it. The `self`","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":141651,"byte_end":141710,"line_start":214,"line_end":214,"column_start":5,"column_end":64}},{"value":"/ consumer should then be used to consume the \"right\" portion of","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":141715,"byte_end":141781,"line_start":215,"line_end":215,"column_start":5,"column_end":71}},{"value":"/ the data. (The ordering matters for methods like find_first --","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":141786,"byte_end":141852,"line_start":216,"line_end":216,"column_start":5,"column_end":71}},{"value":"/ values produced by the returned value are given precedence","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":141857,"byte_end":141919,"line_start":217,"line_end":217,"column_start":5,"column_end":67}},{"value":"/ over values produced by `self`.) Once the left and right","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":141924,"byte_end":141984,"line_start":218,"line_end":218,"column_start":5,"column_end":65}},{"value":"/ halves have been fully consumed, you should reduce the results","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":141989,"byte_end":142055,"line_start":219,"line_end":219,"column_start":5,"column_end":71}},{"value":"/ with the result of `to_reducer`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":142060,"byte_end":142096,"line_start":220,"line_end":220,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":142240,"byte_end":142250,"line_start":225,"line_end":225,"column_start":8,"column_end":18},"name":"to_reducer","qualname":"::iter::plumbing::UnindexedConsumer::to_reducer","value":"pub fn to_reducer(&Self) -> Self::Reducer","parent":{"krate":0,"index":378},"children":[],"decl_id":null,"docs":" Creates a reducer that can be used to combine the results from\n a split consumer.\n","sig":null,"attributes":[{"value":"/ Creates a reducer that can be used to combine the results from","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":142140,"byte_end":142206,"line_start":223,"line_end":223,"column_start":5,"column_end":71}},{"value":"/ a split consumer.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":142211,"byte_end":142232,"line_start":224,"line_end":224,"column_start":5,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":382},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":142727,"byte_end":142744,"line_start":236,"line_end":236,"column_start":11,"column_end":28},"name":"UnindexedProducer","qualname":"::iter::plumbing::UnindexedProducer","value":"UnindexedProducer: Send + Sized","parent":null,"children":[{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385}],"decl_id":null,"docs":" A variant on `Producer` which does not know its exact length or\n cannot represent it in a `usize`. These producers act like\n ordinary producers except that they cannot be told to split at a\n particular point. Instead, you just ask them to split 'somewhere'.","sig":null,"attributes":[{"value":"/ A variant on `Producer` which does not know its exact length or","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":142279,"byte_end":142346,"line_start":228,"line_end":228,"column_start":1,"column_end":68}},{"value":"/ cannot represent it in a `usize`. These producers act like","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":142347,"byte_end":142409,"line_start":229,"line_end":229,"column_start":1,"column_end":63}},{"value":"/ ordinary producers except that they cannot be told to split at a","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":142410,"byte_end":142478,"line_start":230,"line_end":230,"column_start":1,"column_end":69}},{"value":"/ particular point. Instead, you just ask them to split 'somewhere'.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":142479,"byte_end":142549,"line_start":231,"line_end":231,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":142550,"byte_end":142553,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ (In principle, `Producer` could extend this trait; however, it","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":142554,"byte_end":142620,"line_start":233,"line_end":233,"column_start":1,"column_end":67}},{"value":"/ does not because to do so would require producers to carry their","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":142621,"byte_end":142689,"line_start":234,"line_end":234,"column_start":1,"column_end":69}},{"value":"/ own length with them.)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":142690,"byte_end":142716,"line_start":235,"line_end":235,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":383},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":142822,"byte_end":142826,"line_start":238,"line_end":238,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::plumbing::UnindexedProducer::Item","value":"type Item;","parent":{"krate":0,"index":382},"children":[],"decl_id":null,"docs":" The type of item returned by this producer.\n","sig":null,"attributes":[{"value":"/ The type of item returned by this producer.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":142765,"byte_end":142812,"line_start":237,"line_end":237,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":142915,"byte_end":142920,"line_start":241,"line_end":241,"column_start":8,"column_end":13},"name":"split","qualname":"::iter::plumbing::UnindexedProducer::split","value":"pub fn split(Self) -> (Self, Option<Self>)","parent":{"krate":0,"index":382},"children":[],"decl_id":null,"docs":" Split midway into a new producer if possible, otherwise return `None`.\n","sig":null,"attributes":[{"value":"/ Split midway into a new producer if possible, otherwise return `None`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":142833,"byte_end":142907,"line_start":240,"line_end":240,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":143103,"byte_end":143112,"line_start":245,"line_end":245,"column_start":8,"column_end":17},"name":"fold_with","qualname":"::iter::plumbing::UnindexedProducer::fold_with","value":"pub fn fold_with<F>(Self, F) -> F where F: Folder<Self::Item>","parent":{"krate":0,"index":382},"children":[],"decl_id":null,"docs":" Iterate the producer, feeding each element to `folder`, and\n stop when the folder is full (or all elements have been consumed).\n","sig":null,"attributes":[{"value":"/ Iterate the producer, feeding each element to `folder`, and","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":142957,"byte_end":143020,"line_start":243,"line_end":243,"column_start":5,"column_end":68}},{"value":"/ stop when the folder is full (or all elements have been consumed).","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":143025,"byte_end":143095,"line_start":244,"line_end":244,"column_start":5,"column_end":75}}]},{"kind":"Function","id":{"krate":0,"index":393},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":146932,"byte_end":146938,"line_start":351,"line_end":351,"column_start":8,"column_end":14},"name":"bridge","qualname":"::iter::plumbing::bridge","value":"pub fn bridge<I, C>(I, C) -> C::Result where I: IndexedParallelIterator,\nC: Consumer<I::Item>","parent":null,"children":[],"decl_id":null,"docs":" This helper function is used to \"connect\" a parallel iterator to a\n consumer. It will convert the `par_iter` into a producer P and\n then pull items from P and feed them to `consumer`, splitting and\n creating parallel threads as needed.","sig":null,"attributes":[{"value":"/ This helper function is used to \"connect\" a parallel iterator to a","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":146353,"byte_end":146423,"line_start":340,"line_end":340,"column_start":1,"column_end":71}},{"value":"/ consumer. It will convert the `par_iter` into a producer P and","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":146424,"byte_end":146490,"line_start":341,"line_end":341,"column_start":1,"column_end":67}},{"value":"/ then pull items from P and feed them to `consumer`, splitting and","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":146491,"byte_end":146560,"line_start":342,"line_end":342,"column_start":1,"column_end":70}},{"value":"/ creating parallel threads as needed.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":146561,"byte_end":146601,"line_start":343,"line_end":343,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":146602,"byte_end":146605,"line_start":344,"line_end":344,"column_start":1,"column_end":4}},{"value":"/ This is useful when you are implementing your own parallel","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":146606,"byte_end":146668,"line_start":345,"line_end":345,"column_start":1,"column_end":63}},{"value":"/ iterators: it is often used as the definition of the","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":146669,"byte_end":146725,"line_start":346,"line_end":346,"column_start":1,"column_end":57}},{"value":"/ [`drive_unindexed`] or [`drive`] methods.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":146726,"byte_end":146771,"line_start":347,"line_end":347,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":146772,"byte_end":146775,"line_start":348,"line_end":348,"column_start":1,"column_end":4}},{"value":"/ [`drive_unindexed`]: ../trait.ParallelIterator.html#tymethod.drive_unindexed","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":146776,"byte_end":146856,"line_start":349,"line_end":349,"column_start":1,"column_end":81}},{"value":"/ [`drive`]: ../trait.IndexedParallelIterator.html#tymethod.drive","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":146857,"byte_end":146924,"line_start":350,"line_end":350,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":406},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":148184,"byte_end":148208,"line_start":391,"line_end":391,"column_start":8,"column_end":32},"name":"bridge_producer_consumer","qualname":"::iter::plumbing::bridge_producer_consumer","value":"pub fn bridge_producer_consumer<P, C>(usize, P, C) -> C::Result where\nP: Producer, C: Consumer<P::Item>","parent":null,"children":[],"decl_id":null,"docs":" This helper function is used to \"connect\" a producer and a\n consumer. You may prefer to call [`bridge`], which wraps this\n function. This function will draw items from `producer` and feed\n them to `consumer`, splitting and creating parallel tasks when\n needed.","sig":null,"attributes":[{"value":"/ This helper function is used to \"connect\" a producer and a","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":147546,"byte_end":147608,"line_start":378,"line_end":378,"column_start":1,"column_end":63}},{"value":"/ consumer. You may prefer to call [`bridge`], which wraps this","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":147609,"byte_end":147674,"line_start":379,"line_end":379,"column_start":1,"column_end":66}},{"value":"/ function. This function will draw items from `producer` and feed","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":147675,"byte_end":147743,"line_start":380,"line_end":380,"column_start":1,"column_end":69}},{"value":"/ them to `consumer`, splitting and creating parallel tasks when","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":147744,"byte_end":147810,"line_start":381,"line_end":381,"column_start":1,"column_end":67}},{"value":"/ needed.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":147811,"byte_end":147822,"line_start":382,"line_end":382,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":147823,"byte_end":147826,"line_start":383,"line_end":383,"column_start":1,"column_end":4}},{"value":"/ This is useful when you are implementing your own parallel","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":147827,"byte_end":147889,"line_start":384,"line_end":384,"column_start":1,"column_end":63}},{"value":"/ iterators: it is often used as the definition of the","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":147890,"byte_end":147946,"line_start":385,"line_end":385,"column_start":1,"column_end":57}},{"value":"/ [`drive_unindexed`] or [`drive`] methods.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":147947,"byte_end":147992,"line_start":386,"line_end":386,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":147993,"byte_end":147996,"line_start":387,"line_end":387,"column_start":1,"column_end":4}},{"value":"/ [`bridge`]: fn.bridge.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":147997,"byte_end":148027,"line_start":388,"line_end":388,"column_start":1,"column_end":31}},{"value":"/ [`drive_unindexed`]: ../trait.ParallelIterator.html#tymethod.drive_unindexed","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":148028,"byte_end":148108,"line_start":389,"line_end":389,"column_start":1,"column_end":81}},{"value":"/ [`drive`]: ../trait.IndexedParallelIterator.html#tymethod.drive","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":148109,"byte_end":148176,"line_start":390,"line_end":390,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":414},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":149984,"byte_end":150000,"line_start":446,"line_end":446,"column_start":8,"column_end":24},"name":"bridge_unindexed","qualname":"::iter::plumbing::bridge_unindexed","value":"pub fn bridge_unindexed<P, C>(P, C) -> C::Result where P: UnindexedProducer,\nC: UnindexedConsumer<P::Item>","parent":null,"children":[],"decl_id":null,"docs":" A variant of [`bridge_producer_consumer`] where the producer is an unindexed producer.","sig":null,"attributes":[{"value":"/ A variant of [`bridge_producer_consumer`] where the producer is an unindexed producer.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":149815,"byte_end":149905,"line_start":443,"line_end":443,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":149906,"byte_end":149909,"line_start":444,"line_end":444,"column_start":1,"column_end":4}},{"value":"/ [`bridge_producer_consumer`]: fn.bridge_producer_consumer.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":149910,"byte_end":149976,"line_start":445,"line_end":445,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":6556},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chain.rs","byte_start":151857,"byte_end":151862,"line_start":14,"line_end":14,"column_start":12,"column_end":17},"name":"Chain","qualname":"::iter::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":6559},{"krate":0,"index":6560}],"decl_id":null,"docs":" `Chain` is an iterator that joins `b` after `a` in one continuous iterator.\n This struct is created by the [`chain()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"/ `Chain` is an iterator that joins `b` after `a` in one continuous iterator.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chain.rs","byte_start":151475,"byte_end":151554,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ This struct is created by the [`chain()`] method on [`ParallelIterator`]","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chain.rs","byte_start":151555,"byte_end":151631,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chain.rs","byte_start":151632,"byte_end":151635,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`chain()`]: trait.ParallelIterator.html#method.chain","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chain.rs","byte_start":151636,"byte_end":151693,"line_start":10,"line_end":10,"column_start":1,"column_end":58}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chain.rs","byte_start":151694,"byte_end":151747,"line_start":11,"line_end":11,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chain.rs","byte_start":151748,"byte_end":151821,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6569},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chunks.rs","byte_start":158790,"byte_end":158796,"line_start":15,"line_end":15,"column_start":12,"column_end":18},"name":"Chunks","qualname":"::iter::chunks::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":6571},{"krate":0,"index":6572}],"decl_id":null,"docs":" `Chunks` is an iterator that groups elements of an underlying iterator.","sig":null,"attributes":[{"value":"/ `Chunks` is an iterator that groups elements of an underlying iterator.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chunks.rs","byte_start":158377,"byte_end":158452,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chunks.rs","byte_start":158453,"byte_end":158456,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`chunks()`] method on [`IndexedParallelIterator`]","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chunks.rs","byte_start":158457,"byte_end":158541,"line_start":9,"line_end":9,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chunks.rs","byte_start":158542,"byte_end":158545,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`chunks()`]: trait.IndexedParallelIterator.html#method.chunks","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chunks.rs","byte_start":158546,"byte_end":158612,"line_start":11,"line_end":11,"column_start":1,"column_end":67}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chunks.rs","byte_start":158613,"byte_end":158680,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chunks.rs","byte_start":158681,"byte_end":158754,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6579},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/cloned.rs","byte_start":163780,"byte_end":163786,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Cloned","qualname":"::iter::cloned::Cloned","value":"Cloned {  }","parent":null,"children":[{"krate":0,"index":6581}],"decl_id":null,"docs":" `Cloned` is an iterator that clones the elements of an underlying iterator.","sig":null,"attributes":[{"value":"/ `Cloned` is an iterator that clones the elements of an underlying iterator.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/cloned.rs","byte_start":163391,"byte_end":163470,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/cloned.rs","byte_start":163471,"byte_end":163474,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`cloned()`] method on [`ParallelIterator`]","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/cloned.rs","byte_start":163475,"byte_end":163552,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/cloned.rs","byte_start":163553,"byte_end":163556,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`cloned()`]: trait.ParallelIterator.html#method.cloned","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/cloned.rs","byte_start":163557,"byte_end":163616,"line_start":10,"line_end":10,"column_start":1,"column_end":60}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/cloned.rs","byte_start":163617,"byte_end":163670,"line_start":11,"line_end":11,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/cloned.rs","byte_start":163671,"byte_end":163744,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6588},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/copied.rs","byte_start":193966,"byte_end":193972,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Copied","qualname":"::iter::copied::Copied","value":"Copied {  }","parent":null,"children":[{"krate":0,"index":6590}],"decl_id":null,"docs":" `Copied` is an iterator that copies the elements of an underlying iterator.","sig":null,"attributes":[{"value":"/ `Copied` is an iterator that copies the elements of an underlying iterator.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/copied.rs","byte_start":193577,"byte_end":193656,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/copied.rs","byte_start":193657,"byte_end":193660,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`copied()`] method on [`ParallelIterator`]","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/copied.rs","byte_start":193661,"byte_end":193738,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/copied.rs","byte_start":193739,"byte_end":193742,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`copied()`]: trait.ParallelIterator.html#method.copied","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/copied.rs","byte_start":193743,"byte_end":193802,"line_start":10,"line_end":10,"column_start":1,"column_end":60}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/copied.rs","byte_start":193803,"byte_end":193856,"line_start":11,"line_end":11,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/copied.rs","byte_start":193857,"byte_end":193930,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":894},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/empty.rs","byte_start":198974,"byte_end":198979,"line_start":24,"line_end":24,"column_start":8,"column_end":13},"name":"empty","qualname":"::iter::empty::empty","value":"pub fn empty<T: Send>() -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a parallel iterator that produces nothing.","sig":null,"attributes":[{"value":"/ Creates a parallel iterator that produces nothing.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/empty.rs","byte_start":198556,"byte_end":198610,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/empty.rs","byte_start":198611,"byte_end":198614,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This admits no parallelism on its own, but it could be used for code that","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/empty.rs","byte_start":198615,"byte_end":198692,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/ deals with generic parallel iterators.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/empty.rs","byte_start":198693,"byte_end":198735,"line_start":10,"line_end":10,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/empty.rs","byte_start":198736,"byte_end":198739,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/empty.rs","byte_start":198740,"byte_end":198754,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/empty.rs","byte_start":198755,"byte_end":198758,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/empty.rs","byte_start":198759,"byte_end":198766,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/empty.rs","byte_start":198767,"byte_end":198793,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"/ use rayon::iter::empty;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/empty.rs","byte_start":198794,"byte_end":198821,"line_start":16,"line_end":16,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/empty.rs","byte_start":198822,"byte_end":198825,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ let pi = (0..1234).into_par_iter()","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/empty.rs","byte_start":198826,"byte_end":198864,"line_start":18,"line_end":18,"column_start":1,"column_end":39}},{"value":"/     .chain(empty())","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/empty.rs","byte_start":198865,"byte_end":198888,"line_start":19,"line_end":19,"column_start":1,"column_end":24}},{"value":"/     .chain(1234..10_000);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/empty.rs","byte_start":198889,"byte_end":198918,"line_start":20,"line_end":20,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/empty.rs","byte_start":198919,"byte_end":198922,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pi.count(), 10_000);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/empty.rs","byte_start":198923,"byte_end":198958,"line_start":22,"line_end":22,"column_start":1,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/empty.rs","byte_start":198959,"byte_end":198966,"line_start":23,"line_end":23,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":896},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/empty.rs","byte_start":199132,"byte_end":199137,"line_start":31,"line_end":31,"column_start":12,"column_end":17},"name":"Empty","qualname":"::iter::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":898}],"decl_id":null,"docs":" Iterator adaptor for [the `empty()` function](fn.empty.html).\n","sig":null,"attributes":[{"value":"/ Iterator adaptor for [the `empty()` function](fn.empty.html).","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/empty.rs","byte_start":199055,"byte_end":199120,"line_start":30,"line_end":30,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":6597},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/enumerate.rs","byte_start":201145,"byte_end":201154,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"Enumerate","qualname":"::iter::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":6599}],"decl_id":null,"docs":" `Enumerate` is an iterator that returns the current count along with the element.\n This struct is created by the [`enumerate()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"/ `Enumerate` is an iterator that returns the current count along with the element.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/enumerate.rs","byte_start":200717,"byte_end":200802,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/ This struct is created by the [`enumerate()`] method on [`IndexedParallelIterator`]","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/enumerate.rs","byte_start":200803,"byte_end":200890,"line_start":8,"line_end":8,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/enumerate.rs","byte_start":200891,"byte_end":200894,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`enumerate()`]: trait.IndexedParallelIterator.html#method.enumerate","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/enumerate.rs","byte_start":200895,"byte_end":200967,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/enumerate.rs","byte_start":200968,"byte_end":201035,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/enumerate.rs","byte_start":201036,"byte_end":201109,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6606},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/filter.rs","byte_start":214369,"byte_end":214375,"line_start":13,"line_end":13,"column_start":12,"column_end":18},"name":"Filter","qualname":"::iter::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":6609},{"krate":0,"index":6610}],"decl_id":null,"docs":" `Filter` takes a predicate `filter_op` and filters out elements that match.\n This struct is created by the [`filter()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"/ `Filter` takes a predicate `filter_op` and filters out elements that match.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/filter.rs","byte_start":213991,"byte_end":214070,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/ This struct is created by the [`filter()`] method on [`ParallelIterator`]","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/filter.rs","byte_start":214071,"byte_end":214148,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/filter.rs","byte_start":214149,"byte_end":214152,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`filter()`]: trait.ParallelIterator.html#method.filter","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/filter.rs","byte_start":214153,"byte_end":214212,"line_start":9,"line_end":9,"column_start":1,"column_end":60}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/filter.rs","byte_start":214213,"byte_end":214266,"line_start":10,"line_end":10,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/filter.rs","byte_start":214267,"byte_end":214340,"line_start":11,"line_end":11,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6615},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/filter_map.rs","byte_start":217908,"byte_end":217917,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"FilterMap","qualname":"::iter::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":6618},{"krate":0,"index":6619}],"decl_id":null,"docs":" `FilterMap` creates an iterator that uses `filter_op` to both filter and map elements.\n This struct is created by the [`filter_map()`] method on [`ParallelIterator`].","sig":null,"attributes":[{"value":"/ `FilterMap` creates an iterator that uses `filter_op` to both filter and map elements.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/filter_map.rs","byte_start":217506,"byte_end":217596,"line_start":6,"line_end":6,"column_start":1,"column_end":91}},{"value":"/ This struct is created by the [`filter_map()`] method on [`ParallelIterator`].","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/filter_map.rs","byte_start":217597,"byte_end":217679,"line_start":7,"line_end":7,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/filter_map.rs","byte_start":217680,"byte_end":217683,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`filter_map()`]: trait.ParallelIterator.html#method.filter_map","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/filter_map.rs","byte_start":217684,"byte_end":217751,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/filter_map.rs","byte_start":217752,"byte_end":217805,"line_start":10,"line_end":10,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/filter_map.rs","byte_start":217806,"byte_end":217879,"line_start":11,"line_end":11,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6632},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flat_map.rs","byte_start":231940,"byte_end":231947,"line_start":13,"line_end":13,"column_start":12,"column_end":19},"name":"FlatMap","qualname":"::iter::flat_map::FlatMap","value":"FlatMap {  }","parent":null,"children":[{"krate":0,"index":6635},{"krate":0,"index":6636}],"decl_id":null,"docs":" `FlatMap` maps each element to a parallel iterator, then flattens these iterators together.\n This struct is created by the [`flat_map()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"/ `FlatMap` maps each element to a parallel iterator, then flattens these iterators together.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flat_map.rs","byte_start":231540,"byte_end":231635,"line_start":6,"line_end":6,"column_start":1,"column_end":96}},{"value":"/ This struct is created by the [`flat_map()`] method on [`ParallelIterator`]","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flat_map.rs","byte_start":231636,"byte_end":231715,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flat_map.rs","byte_start":231716,"byte_end":231719,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`flat_map()`]: trait.ParallelIterator.html#method.flat_map","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flat_map.rs","byte_start":231720,"byte_end":231783,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flat_map.rs","byte_start":231784,"byte_end":231837,"line_start":10,"line_end":10,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flat_map.rs","byte_start":231838,"byte_end":231911,"line_start":11,"line_end":11,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6641},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flat_map_iter.rs","byte_start":235910,"byte_end":235921,"line_start":13,"line_end":13,"column_start":12,"column_end":23},"name":"FlatMapIter","qualname":"::iter::flat_map_iter::FlatMapIter","value":"FlatMapIter {  }","parent":null,"children":[{"krate":0,"index":6644},{"krate":0,"index":6645}],"decl_id":null,"docs":" `FlatMapIter` maps each element to a serial iterator, then flattens these iterators together.\n This struct is created by the [`flat_map_iter()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"/ `FlatMapIter` maps each element to a serial iterator, then flattens these iterators together.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flat_map_iter.rs","byte_start":235493,"byte_end":235590,"line_start":6,"line_end":6,"column_start":1,"column_end":98}},{"value":"/ This struct is created by the [`flat_map_iter()`] method on [`ParallelIterator`]","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flat_map_iter.rs","byte_start":235591,"byte_end":235675,"line_start":7,"line_end":7,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flat_map_iter.rs","byte_start":235676,"byte_end":235679,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`flat_map_iter()`]: trait.ParallelIterator.html#method.flat_map_iter","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flat_map_iter.rs","byte_start":235680,"byte_end":235753,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flat_map_iter.rs","byte_start":235754,"byte_end":235807,"line_start":10,"line_end":10,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flat_map_iter.rs","byte_start":235808,"byte_end":235881,"line_start":11,"line_end":11,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6650},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flatten.rs","byte_start":239623,"byte_end":239630,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"Flatten","qualname":"::iter::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":6652}],"decl_id":null,"docs":" `Flatten` turns each element to a parallel iterator, then flattens these iterators\n together. This struct is created by the [`flatten()`] method on [`ParallelIterator`].","sig":null,"attributes":[{"value":"/ `Flatten` turns each element to a parallel iterator, then flattens these iterators","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flatten.rs","byte_start":239217,"byte_end":239303,"line_start":4,"line_end":4,"column_start":1,"column_end":87}},{"value":"/ together. This struct is created by the [`flatten()`] method on [`ParallelIterator`].","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flatten.rs","byte_start":239304,"byte_end":239393,"line_start":5,"line_end":5,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flatten.rs","byte_start":239394,"byte_end":239397,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`flatten()`]: trait.ParallelIterator.html#method.flatten","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flatten.rs","byte_start":239398,"byte_end":239459,"line_start":7,"line_end":7,"column_start":1,"column_end":62}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flatten.rs","byte_start":239460,"byte_end":239513,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flatten.rs","byte_start":239514,"byte_end":239587,"line_start":9,"line_end":9,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6659},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flatten_iter.rs","byte_start":242983,"byte_end":242994,"line_start":11,"line_end":11,"column_start":12,"column_end":23},"name":"FlattenIter","qualname":"::iter::flatten_iter::FlattenIter","value":"FlattenIter {  }","parent":null,"children":[{"krate":0,"index":6661}],"decl_id":null,"docs":" `FlattenIter` turns each element to a serial iterator, then flattens these iterators\n together. This struct is created by the [`flatten_iter()`] method on [`ParallelIterator`].","sig":null,"attributes":[{"value":"/ `FlattenIter` turns each element to a serial iterator, then flattens these iterators","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flatten_iter.rs","byte_start":242560,"byte_end":242648,"line_start":4,"line_end":4,"column_start":1,"column_end":89}},{"value":"/ together. This struct is created by the [`flatten_iter()`] method on [`ParallelIterator`].","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flatten_iter.rs","byte_start":242649,"byte_end":242743,"line_start":5,"line_end":5,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flatten_iter.rs","byte_start":242744,"byte_end":242747,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`flatten_iter()`]: trait.ParallelIterator.html#method.flatten_iter","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flatten_iter.rs","byte_start":242748,"byte_end":242819,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flatten_iter.rs","byte_start":242820,"byte_end":242873,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flatten_iter.rs","byte_start":242874,"byte_end":242947,"line_start":9,"line_end":9,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6668},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/fold.rs","byte_start":246421,"byte_end":246425,"line_start":29,"line_end":29,"column_start":12,"column_end":16},"name":"Fold","qualname":"::iter::fold::Fold","value":"Fold {  }","parent":null,"children":[{"krate":0,"index":6672},{"krate":0,"index":6673},{"krate":0,"index":6674}],"decl_id":null,"docs":" `Fold` is an iterator that applies a function over an iterator producing a single value.\n This struct is created by the [`fold()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"/ `Fold` is an iterator that applies a function over an iterator producing a single value.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/fold.rs","byte_start":246036,"byte_end":246128,"line_start":22,"line_end":22,"column_start":1,"column_end":93}},{"value":"/ This struct is created by the [`fold()`] method on [`ParallelIterator`]","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/fold.rs","byte_start":246129,"byte_end":246204,"line_start":23,"line_end":23,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/fold.rs","byte_start":246205,"byte_end":246208,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`fold()`]: trait.ParallelIterator.html#method.fold","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/fold.rs","byte_start":246209,"byte_end":246264,"line_start":25,"line_end":25,"column_start":1,"column_end":56}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/fold.rs","byte_start":246265,"byte_end":246318,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/fold.rs","byte_start":246319,"byte_end":246392,"line_start":27,"line_end":27,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6680},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/fold.rs","byte_start":250540,"byte_end":250548,"line_start":204,"line_end":204,"column_start":12,"column_end":20},"name":"FoldWith","qualname":"::iter::fold::FoldWith","value":"FoldWith {  }","parent":null,"children":[{"krate":0,"index":6684},{"krate":0,"index":6685},{"krate":0,"index":6686}],"decl_id":null,"docs":" `FoldWith` is an iterator that applies a function over an iterator producing a single value.\n This struct is created by the [`fold_with()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"/ `FoldWith` is an iterator that applies a function over an iterator producing a single value.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/fold.rs","byte_start":250136,"byte_end":250232,"line_start":197,"line_end":197,"column_start":1,"column_end":97}},{"value":"/ This struct is created by the [`fold_with()`] method on [`ParallelIterator`]","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/fold.rs","byte_start":250233,"byte_end":250313,"line_start":198,"line_end":198,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/fold.rs","byte_start":250314,"byte_end":250317,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ [`fold_with()`]: trait.ParallelIterator.html#method.fold_with","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/fold.rs","byte_start":250318,"byte_end":250383,"line_start":200,"line_end":200,"column_start":1,"column_end":66}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/fold.rs","byte_start":250384,"byte_end":250437,"line_start":201,"line_end":201,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/fold.rs","byte_start":250438,"byte_end":250511,"line_start":202,"line_end":202,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6692},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/inspect.rs","byte_start":260789,"byte_end":260796,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"name":"Inspect","qualname":"::iter::inspect::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":6695},{"krate":0,"index":6696}],"decl_id":null,"docs":" `Inspect` is an iterator that calls a function with a reference to each\n element before yielding it.","sig":null,"attributes":[{"value":"/ `Inspect` is an iterator that calls a function with a reference to each","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/inspect.rs","byte_start":260376,"byte_end":260451,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ element before yielding it.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/inspect.rs","byte_start":260452,"byte_end":260483,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/inspect.rs","byte_start":260484,"byte_end":260487,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`inspect()`] method on [`ParallelIterator`]","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/inspect.rs","byte_start":260488,"byte_end":260566,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/inspect.rs","byte_start":260567,"byte_end":260570,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`inspect()`]: trait.ParallelIterator.html#method.inspect","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/inspect.rs","byte_start":260571,"byte_end":260632,"line_start":12,"line_end":12,"column_start":1,"column_end":62}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/inspect.rs","byte_start":260633,"byte_end":260686,"line_start":13,"line_end":13,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/inspect.rs","byte_start":260687,"byte_end":260760,"line_start":14,"line_end":14,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6701},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/interleave.rs","byte_start":266931,"byte_end":266941,"line_start":14,"line_end":14,"column_start":12,"column_end":22},"name":"Interleave","qualname":"::iter::interleave::Interleave","value":"Interleave {  }","parent":null,"children":[{"krate":0,"index":6704},{"krate":0,"index":6705}],"decl_id":null,"docs":" `Interleave` is an iterator that interleaves elements of iterators\n `i` and `j` in one continuous iterator. This struct is created by\n the [`interleave()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"/ `Interleave` is an iterator that interleaves elements of iterators","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/interleave.rs","byte_start":266471,"byte_end":266541,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ `i` and `j` in one continuous iterator. This struct is created by","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/interleave.rs","byte_start":266542,"byte_end":266611,"line_start":7,"line_end":7,"column_start":1,"column_end":70}},{"value":"/ the [`interleave()`] method on [`IndexedParallelIterator`]","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/interleave.rs","byte_start":266612,"byte_end":266674,"line_start":8,"line_end":8,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/interleave.rs","byte_start":266675,"byte_end":266678,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`interleave()`]: trait.IndexedParallelIterator.html#method.interleave","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/interleave.rs","byte_start":266679,"byte_end":266753,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/interleave.rs","byte_start":266754,"byte_end":266821,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/interleave.rs","byte_start":266822,"byte_end":266895,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6714},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/interleave_shortest.rs","byte_start":275942,"byte_end":275960,"line_start":15,"line_end":15,"column_start":12,"column_end":30},"name":"InterleaveShortest","qualname":"::iter::interleave_shortest::InterleaveShortest","value":"InterleaveShortest {  }","parent":null,"children":[{"krate":0,"index":6717}],"decl_id":null,"docs":" `InterleaveShortest` is an iterator that works similarly to\n `Interleave`, but this version stops returning elements once one\n of the iterators run out.","sig":null,"attributes":[{"value":"/ `InterleaveShortest` is an iterator that works similarly to","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/interleave_shortest.rs","byte_start":275398,"byte_end":275461,"line_start":4,"line_end":4,"column_start":1,"column_end":64}},{"value":"/ `Interleave`, but this version stops returning elements once one","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/interleave_shortest.rs","byte_start":275462,"byte_end":275530,"line_start":5,"line_end":5,"column_start":1,"column_end":69}},{"value":"/ of the iterators run out.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/interleave_shortest.rs","byte_start":275531,"byte_end":275560,"line_start":6,"line_end":6,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/interleave_shortest.rs","byte_start":275561,"byte_end":275564,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`interleave_shortest()`] method on","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/interleave_shortest.rs","byte_start":275565,"byte_end":275634,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/ [`IndexedParallelIterator`].","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/interleave_shortest.rs","byte_start":275635,"byte_end":275667,"line_start":9,"line_end":9,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/interleave_shortest.rs","byte_start":275668,"byte_end":275671,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`interleave_shortest()`]: trait.IndexedParallelIterator.html#method.interleave_shortest","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/interleave_shortest.rs","byte_start":275672,"byte_end":275764,"line_start":11,"line_end":11,"column_start":1,"column_end":93}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/interleave_shortest.rs","byte_start":275765,"byte_end":275832,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/interleave_shortest.rs","byte_start":275833,"byte_end":275906,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6726},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/intersperse.rs","byte_start":278179,"byte_end":278190,"line_start":14,"line_end":14,"column_start":12,"column_end":23},"name":"Intersperse","qualname":"::iter::intersperse::Intersperse","value":"Intersperse {  }","parent":null,"children":[{"krate":0,"index":6728},{"krate":0,"index":6729}],"decl_id":null,"docs":" `Intersperse` is an iterator that inserts a particular item between each\n item of the adapted iterator.  This struct is created by the\n [`intersperse()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"/ `Intersperse` is an iterator that inserts a particular item between each","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/intersperse.rs","byte_start":277747,"byte_end":277823,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"/ item of the adapted iterator.  This struct is created by the","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/intersperse.rs","byte_start":277824,"byte_end":277888,"line_start":7,"line_end":7,"column_start":1,"column_end":65}},{"value":"/ [`intersperse()`] method on [`ParallelIterator`]","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/intersperse.rs","byte_start":277889,"byte_end":277941,"line_start":8,"line_end":8,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/intersperse.rs","byte_start":277942,"byte_end":277945,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`intersperse()`]: trait.ParallelIterator.html#method.intersperse","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/intersperse.rs","byte_start":277946,"byte_end":278015,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/intersperse.rs","byte_start":278016,"byte_end":278069,"line_start":11,"line_end":11,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/intersperse.rs","byte_start":278070,"byte_end":278143,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6736},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/len.rs","byte_start":288396,"byte_end":288402,"line_start":12,"line_end":12,"column_start":12,"column_end":18},"name":"MinLen","qualname":"::iter::len::MinLen","value":"MinLen {  }","parent":null,"children":[{"krate":0,"index":6738},{"krate":0,"index":6739}],"decl_id":null,"docs":" `MinLen` is an iterator that imposes a minimum length on iterator splits.\n This struct is created by the [`min_len()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"/ `MinLen` is an iterator that imposes a minimum length on iterator splits.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/len.rs","byte_start":287982,"byte_end":288059,"line_start":5,"line_end":5,"column_start":1,"column_end":78}},{"value":"/ This struct is created by the [`min_len()`] method on [`IndexedParallelIterator`]","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/len.rs","byte_start":288060,"byte_end":288145,"line_start":6,"line_end":6,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/len.rs","byte_start":288146,"byte_end":288149,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [`min_len()`]: trait.IndexedParallelIterator.html#method.min_len","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/len.rs","byte_start":288150,"byte_end":288218,"line_start":8,"line_end":8,"column_start":1,"column_end":69}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/len.rs","byte_start":288219,"byte_end":288286,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/len.rs","byte_start":288287,"byte_end":288360,"line_start":10,"line_end":10,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6746},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/len.rs","byte_start":291481,"byte_end":291487,"line_start":146,"line_end":146,"column_start":12,"column_end":18},"name":"MaxLen","qualname":"::iter::len::MaxLen","value":"MaxLen {  }","parent":null,"children":[{"krate":0,"index":6748},{"krate":0,"index":6749}],"decl_id":null,"docs":" `MaxLen` is an iterator that imposes a maximum length on iterator splits.\n This struct is created by the [`max_len()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"/ `MaxLen` is an iterator that imposes a maximum length on iterator splits.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/len.rs","byte_start":291067,"byte_end":291144,"line_start":139,"line_end":139,"column_start":1,"column_end":78}},{"value":"/ This struct is created by the [`max_len()`] method on [`IndexedParallelIterator`]","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/len.rs","byte_start":291145,"byte_end":291230,"line_start":140,"line_end":140,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/len.rs","byte_start":291231,"byte_end":291234,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ [`max_len()`]: trait.IndexedParallelIterator.html#method.max_len","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/len.rs","byte_start":291235,"byte_end":291303,"line_start":142,"line_end":142,"column_start":1,"column_end":69}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/len.rs","byte_start":291304,"byte_end":291371,"line_start":143,"line_end":143,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/len.rs","byte_start":291372,"byte_end":291445,"line_start":144,"line_end":144,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6756},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map.rs","byte_start":294610,"byte_end":294613,"line_start":15,"line_end":15,"column_start":12,"column_end":15},"name":"Map","qualname":"::iter::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":6759},{"krate":0,"index":6760}],"decl_id":null,"docs":" `Map` is an iterator that transforms the elements of an underlying iterator.","sig":null,"attributes":[{"value":"/ `Map` is an iterator that transforms the elements of an underlying iterator.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map.rs","byte_start":294236,"byte_end":294316,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map.rs","byte_start":294317,"byte_end":294320,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`map()`] method on [`ParallelIterator`]","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map.rs","byte_start":294321,"byte_end":294395,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map.rs","byte_start":294396,"byte_end":294399,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`map()`]: trait.ParallelIterator.html#method.map","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map.rs","byte_start":294400,"byte_end":294453,"line_start":11,"line_end":11,"column_start":1,"column_end":54}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map.rs","byte_start":294454,"byte_end":294507,"line_start":12,"line_end":12,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map.rs","byte_start":294508,"byte_end":294581,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6765},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map_with.rs","byte_start":300588,"byte_end":300595,"line_start":14,"line_end":14,"column_start":12,"column_end":19},"name":"MapWith","qualname":"::iter::map_with::MapWith","value":"MapWith {  }","parent":null,"children":[{"krate":0,"index":6769},{"krate":0,"index":6770},{"krate":0,"index":6771}],"decl_id":null,"docs":" `MapWith` is an iterator that transforms the elements of an underlying iterator.","sig":null,"attributes":[{"value":"/ `MapWith` is an iterator that transforms the elements of an underlying iterator.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map_with.rs","byte_start":300195,"byte_end":300279,"line_start":6,"line_end":6,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map_with.rs","byte_start":300280,"byte_end":300283,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`map_with()`] method on [`ParallelIterator`]","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map_with.rs","byte_start":300284,"byte_end":300363,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map_with.rs","byte_start":300364,"byte_end":300367,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`map_with()`]: trait.ParallelIterator.html#method.map_with","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map_with.rs","byte_start":300368,"byte_end":300431,"line_start":10,"line_end":10,"column_start":1,"column_end":64}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map_with.rs","byte_start":300432,"byte_end":300485,"line_start":11,"line_end":11,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map_with.rs","byte_start":300486,"byte_end":300559,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6777},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map_with.rs","byte_start":308656,"byte_end":308663,"line_start":346,"line_end":346,"column_start":12,"column_end":19},"name":"MapInit","qualname":"::iter::map_with::MapInit","value":"MapInit {  }","parent":null,"children":[{"krate":0,"index":6781},{"krate":0,"index":6782},{"krate":0,"index":6783}],"decl_id":null,"docs":" `MapInit` is an iterator that transforms the elements of an underlying iterator.","sig":null,"attributes":[{"value":"/ `MapInit` is an iterator that transforms the elements of an underlying iterator.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map_with.rs","byte_start":308263,"byte_end":308347,"line_start":338,"line_end":338,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map_with.rs","byte_start":308348,"byte_end":308351,"line_start":339,"line_end":339,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`map_init()`] method on [`ParallelIterator`]","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map_with.rs","byte_start":308352,"byte_end":308431,"line_start":340,"line_end":340,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map_with.rs","byte_start":308432,"byte_end":308435,"line_start":341,"line_end":341,"column_start":1,"column_end":4}},{"value":"/ [`map_init()`]: trait.ParallelIterator.html#method.map_init","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map_with.rs","byte_start":308436,"byte_end":308499,"line_start":342,"line_end":342,"column_start":1,"column_end":64}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map_with.rs","byte_start":308500,"byte_end":308553,"line_start":343,"line_end":343,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map_with.rs","byte_start":308554,"byte_end":308627,"line_start":344,"line_end":344,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6789},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":316817,"byte_end":316825,"line_start":79,"line_end":79,"column_start":12,"column_end":20},"name":"MultiZip","qualname":"::iter::multizip::MultiZip","value":"MultiZip {  }","parent":null,"children":[{"krate":0,"index":6791}],"decl_id":null,"docs":" `MultiZip` is an iterator that zips up a tuple of parallel iterators to\n produce tuples of their items.","sig":null,"attributes":[{"value":"/ `MultiZip` is an iterator that zips up a tuple of parallel iterators to","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":314401,"byte_end":314476,"line_start":4,"line_end":4,"column_start":1,"column_end":76}},{"value":"/ produce tuples of their items.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":314477,"byte_end":314511,"line_start":5,"line_end":5,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":314512,"byte_end":314515,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ It is created by calling `into_par_iter()` on a tuple of types that","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":314516,"byte_end":314587,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"/ implement `IntoParallelIterator`, or `par_iter()`/`par_iter_mut()` with","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":314588,"byte_end":314663,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ types that are iterable by reference.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":314664,"byte_end":314705,"line_start":9,"line_end":9,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":314706,"byte_end":314709,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The implementation currently support tuples up to length 12.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":314710,"byte_end":314774,"line_start":11,"line_end":11,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":314775,"byte_end":314778,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":314779,"byte_end":314793,"line_start":13,"line_end":13,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":314794,"byte_end":314797,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":314798,"byte_end":314805,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":314806,"byte_end":314832,"line_start":16,"line_end":16,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":314833,"byte_end":314836,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ // This will iterate `r` by mutable reference, like `par_iter_mut()`, while","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":314837,"byte_end":314916,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ // ranges are all iterated by value like `into_par_iter()`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":314917,"byte_end":314980,"line_start":19,"line_end":19,"column_start":1,"column_end":64}},{"value":"/ // Note that the zipped iterator is only as long as the shortest input.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":314981,"byte_end":315056,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/ let mut r = vec![0; 3];","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":315057,"byte_end":315084,"line_start":21,"line_end":21,"column_start":1,"column_end":28}},{"value":"/ (&mut r, 1..10, 10..100, 100..1000).into_par_iter()","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":315085,"byte_end":315140,"line_start":22,"line_end":22,"column_start":1,"column_end":56}},{"value":"/     .for_each(|(r, x, y, z)| *r = x * y + z);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":315141,"byte_end":315190,"line_start":23,"line_end":23,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":315191,"byte_end":315194,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(&r, &[1 * 10 + 100, 2 * 11 + 101, 3 * 12 + 102]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":315195,"byte_end":315259,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":315260,"byte_end":315267,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":315268,"byte_end":315271,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ For a group that should all be iterated by reference, you can use a tuple reference.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":315272,"byte_end":315360,"line_start":28,"line_end":28,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":315361,"byte_end":315364,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":315365,"byte_end":315372,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":315373,"byte_end":315399,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":315400,"byte_end":315403,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let xs: Vec<_> = (1..10).collect();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":315404,"byte_end":315443,"line_start":33,"line_end":33,"column_start":1,"column_end":40}},{"value":"/ let ys: Vec<_> = (10..100).collect();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":315444,"byte_end":315485,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"/ let zs: Vec<_> = (100..1000).collect();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":315486,"byte_end":315529,"line_start":35,"line_end":35,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":315530,"byte_end":315533,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ // Reference each input separately with `IntoParallelIterator`:","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":315534,"byte_end":315601,"line_start":37,"line_end":37,"column_start":1,"column_end":68}},{"value":"/ let r1: Vec<_> = (&xs, &ys, &zs).into_par_iter()","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":315602,"byte_end":315654,"line_start":38,"line_end":38,"column_start":1,"column_end":53}},{"value":"/     .map(|(x, y, z)| x * y + z)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":315655,"byte_end":315690,"line_start":39,"line_end":39,"column_start":1,"column_end":36}},{"value":"/     .collect();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":315691,"byte_end":315710,"line_start":40,"line_end":40,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":315711,"byte_end":315714,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // Reference them all together with `IntoParallelRefIterator`:","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":315715,"byte_end":315781,"line_start":42,"line_end":42,"column_start":1,"column_end":67}},{"value":"/ let r2: Vec<_> = (xs, ys, zs).par_iter()","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":315782,"byte_end":315826,"line_start":43,"line_end":43,"column_start":1,"column_end":45}},{"value":"/     .map(|(x, y, z)| x * y + z)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":315827,"byte_end":315862,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/     .collect();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":315863,"byte_end":315882,"line_start":45,"line_end":45,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":315883,"byte_end":315886,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(r1, r2);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":315887,"byte_end":315910,"line_start":47,"line_end":47,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":315911,"byte_end":315918,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":315919,"byte_end":315922,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ Mutable references to a tuple will work similarly.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":315923,"byte_end":315977,"line_start":50,"line_end":50,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":315978,"byte_end":315981,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":315982,"byte_end":315989,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":315990,"byte_end":316016,"line_start":53,"line_end":53,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":316017,"byte_end":316020,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ let mut xs: Vec<_> = (1..4).collect();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":316021,"byte_end":316063,"line_start":55,"line_end":55,"column_start":1,"column_end":43}},{"value":"/ let mut ys: Vec<_> = (-4..-1).collect();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":316064,"byte_end":316108,"line_start":56,"line_end":56,"column_start":1,"column_end":45}},{"value":"/ let mut zs = vec![0; 3];","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":316109,"byte_end":316137,"line_start":57,"line_end":57,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":316138,"byte_end":316141,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ // Mutably reference each input separately with `IntoParallelIterator`:","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":316142,"byte_end":316217,"line_start":59,"line_end":59,"column_start":1,"column_end":76}},{"value":"/ (&mut xs, &mut ys, &mut zs).into_par_iter().for_each(|(x, y, z)| {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":316218,"byte_end":316288,"line_start":60,"line_end":60,"column_start":1,"column_end":71}},{"value":"/     *z += *x + *y;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":316289,"byte_end":316311,"line_start":61,"line_end":61,"column_start":1,"column_end":23}},{"value":"/     std::mem::swap(x, y);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":316312,"byte_end":316341,"line_start":62,"line_end":62,"column_start":1,"column_end":30}},{"value":"/ });","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":316342,"byte_end":316349,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":316350,"byte_end":316353,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(xs, (vec![-4, -3, -2]));","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":316354,"byte_end":316393,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(ys, (vec![1, 2, 3]));","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":316394,"byte_end":316430,"line_start":66,"line_end":66,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(zs, (vec![-3, -1, 1]));","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":316431,"byte_end":316469,"line_start":67,"line_end":67,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":316470,"byte_end":316473,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ // Mutably reference them all together with `IntoParallelRefMutIterator`:","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":316474,"byte_end":316551,"line_start":69,"line_end":69,"column_start":1,"column_end":78}},{"value":"/ let mut tuple = (xs, ys, zs);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":316552,"byte_end":316585,"line_start":70,"line_end":70,"column_start":1,"column_end":34}},{"value":"/ tuple.par_iter_mut().for_each(|(x, y, z)| {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":316586,"byte_end":316633,"line_start":71,"line_end":71,"column_start":1,"column_end":48}},{"value":"/     *z += *x + *y;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":316634,"byte_end":316656,"line_start":72,"line_end":72,"column_start":1,"column_end":23}},{"value":"/     std::mem::swap(x, y);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":316657,"byte_end":316686,"line_start":73,"line_end":73,"column_start":1,"column_end":30}},{"value":"/ });","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":316687,"byte_end":316694,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":316695,"byte_end":316698,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple, (vec![1, 2, 3], vec![-4, -3, -2], vec![-6, -2, 2]));","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":316699,"byte_end":316773,"line_start":76,"line_end":76,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/multizip.rs","byte_start":316774,"byte_end":316781,"line_start":77,"line_end":77,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2828},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/once.rs","byte_start":325086,"byte_end":325090,"line_start":24,"line_end":24,"column_start":8,"column_end":12},"name":"once","qualname":"::iter::once::once","value":"pub fn once<T: Send>(T) -> Once<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a parallel iterator that produces an element exactly once.","sig":null,"attributes":[{"value":"/ Creates a parallel iterator that produces an element exactly once.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/once.rs","byte_start":324444,"byte_end":324514,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/once.rs","byte_start":324515,"byte_end":324518,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This admits no parallelism on its own, but it could be chained to existing","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/once.rs","byte_start":324519,"byte_end":324597,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ parallel iterators to extend their contents, or otherwise used for any code","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/once.rs","byte_start":324598,"byte_end":324677,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ that deals with generic parallel iterators.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/once.rs","byte_start":324678,"byte_end":324725,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/once.rs","byte_start":324726,"byte_end":324729,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/once.rs","byte_start":324730,"byte_end":324744,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/once.rs","byte_start":324745,"byte_end":324748,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/once.rs","byte_start":324749,"byte_end":324756,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/once.rs","byte_start":324757,"byte_end":324783,"line_start":13,"line_end":13,"column_start":1,"column_end":27}},{"value":"/ use rayon::iter::once;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/once.rs","byte_start":324784,"byte_end":324810,"line_start":14,"line_end":14,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/once.rs","byte_start":324811,"byte_end":324814,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ let pi = (0..1234).into_par_iter()","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/once.rs","byte_start":324815,"byte_end":324853,"line_start":16,"line_end":16,"column_start":1,"column_end":39}},{"value":"/     .chain(once(-1))","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/once.rs","byte_start":324854,"byte_end":324878,"line_start":17,"line_end":17,"column_start":1,"column_end":25}},{"value":"/     .chain(1234..10_000);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/once.rs","byte_start":324879,"byte_end":324908,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/once.rs","byte_start":324909,"byte_end":324912,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pi.clone().count(), 10_001);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/once.rs","byte_start":324913,"byte_end":324956,"line_start":20,"line_end":20,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(pi.clone().filter(|&x| x < 0).count(), 1);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/once.rs","byte_start":324957,"byte_end":325014,"line_start":21,"line_end":21,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(pi.position_any(|x| x < 0), Some(1234));","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/once.rs","byte_start":325015,"byte_end":325070,"line_start":22,"line_end":22,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/once.rs","byte_start":325071,"byte_end":325078,"line_start":23,"line_end":23,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7668},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/once.rs","byte_start":325242,"byte_end":325246,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"Once","qualname":"::iter::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":7670}],"decl_id":null,"docs":" Iterator adaptor for [the `once()` function](fn.once.html).\n","sig":null,"attributes":[{"value":"/ Iterator adaptor for [the `once()` function](fn.once.html).","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/once.rs","byte_start":325143,"byte_end":325206,"line_start":28,"line_end":28,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":7677},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/panic_fuse.rs","byte_start":326606,"byte_end":326615,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"name":"PanicFuse","qualname":"::iter::panic_fuse::PanicFuse","value":"PanicFuse {  }","parent":null,"children":[{"krate":0,"index":7679}],"decl_id":null,"docs":" `PanicFuse` is an adaptor that wraps an iterator with a fuse in case\n of panics, to halt all threads as soon as possible.","sig":null,"attributes":[{"value":"/ `PanicFuse` is an adaptor that wraps an iterator with a fuse in case","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/panic_fuse.rs","byte_start":326156,"byte_end":326228,"line_start":6,"line_end":6,"column_start":1,"column_end":73}},{"value":"/ of panics, to halt all threads as soon as possible.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/panic_fuse.rs","byte_start":326229,"byte_end":326284,"line_start":7,"line_end":7,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/panic_fuse.rs","byte_start":326285,"byte_end":326288,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`panic_fuse()`] method on [`ParallelIterator`]","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/panic_fuse.rs","byte_start":326289,"byte_end":326370,"line_start":9,"line_end":9,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/panic_fuse.rs","byte_start":326371,"byte_end":326374,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`panic_fuse()`]: trait.ParallelIterator.html#method.panic_fuse","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/panic_fuse.rs","byte_start":326375,"byte_end":326442,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/panic_fuse.rs","byte_start":326443,"byte_end":326496,"line_start":12,"line_end":12,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/panic_fuse.rs","byte_start":326497,"byte_end":326570,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":3023},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/par_bridge.rs","byte_start":335357,"byte_end":335371,"line_start":46,"line_end":46,"column_start":11,"column_end":25},"name":"ParallelBridge","qualname":"::iter::par_bridge::ParallelBridge","value":"ParallelBridge: Sized","parent":null,"children":[{"krate":0,"index":3024}],"decl_id":null,"docs":" Conversion trait to convert an `Iterator` to a `ParallelIterator`.","sig":null,"attributes":[{"value":"/ Conversion trait to convert an `Iterator` to a `ParallelIterator`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/par_bridge.rs","byte_start":334093,"byte_end":334163,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/par_bridge.rs","byte_start":334164,"byte_end":334167,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This creates a \"bridge\" from a sequential iterator to a parallel one, by distributing its items","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/par_bridge.rs","byte_start":334168,"byte_end":334267,"line_start":13,"line_end":13,"column_start":1,"column_end":100}},{"value":"/ across the Rayon thread pool. This has the advantage of being able to parallelize just about","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/par_bridge.rs","byte_start":334268,"byte_end":334364,"line_start":14,"line_end":14,"column_start":1,"column_end":97}},{"value":"/ anything, but the resulting `ParallelIterator` can be less efficient than if you started with","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/par_bridge.rs","byte_start":334365,"byte_end":334462,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"/ `par_iter` instead. However, it can still be useful for iterators that are difficult to","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/par_bridge.rs","byte_start":334463,"byte_end":334554,"line_start":16,"line_end":16,"column_start":1,"column_end":92}},{"value":"/ parallelize by other means, like channels or file or network I/O.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/par_bridge.rs","byte_start":334555,"byte_end":334624,"line_start":17,"line_end":17,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/par_bridge.rs","byte_start":334625,"byte_end":334628,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The resulting iterator is not guaranteed to keep the order of the original iterator.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/par_bridge.rs","byte_start":334629,"byte_end":334717,"line_start":19,"line_end":19,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/par_bridge.rs","byte_start":334718,"byte_end":334721,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/par_bridge.rs","byte_start":334722,"byte_end":334736,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/par_bridge.rs","byte_start":334737,"byte_end":334740,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ To use this trait, take an existing `Iterator` and call `par_bridge` on it. After that, you can","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/par_bridge.rs","byte_start":334741,"byte_end":334840,"line_start":23,"line_end":23,"column_start":1,"column_end":100}},{"value":"/ use any of the `ParallelIterator` methods:","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/par_bridge.rs","byte_start":334841,"byte_end":334887,"line_start":24,"line_end":24,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/par_bridge.rs","byte_start":334888,"byte_end":334891,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/par_bridge.rs","byte_start":334892,"byte_end":334899,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ use rayon::iter::ParallelBridge;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/par_bridge.rs","byte_start":334900,"byte_end":334936,"line_start":27,"line_end":27,"column_start":1,"column_end":37}},{"value":"/ use rayon::prelude::ParallelIterator;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/par_bridge.rs","byte_start":334937,"byte_end":334978,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/ use std::sync::mpsc::channel;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/par_bridge.rs","byte_start":334979,"byte_end":335012,"line_start":29,"line_end":29,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/par_bridge.rs","byte_start":335013,"byte_end":335016,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let rx = {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/par_bridge.rs","byte_start":335017,"byte_end":335031,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/     let (tx, rx) = channel();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/par_bridge.rs","byte_start":335032,"byte_end":335065,"line_start":32,"line_end":32,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/par_bridge.rs","byte_start":335066,"byte_end":335069,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/     tx.send(\"one!\");","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/par_bridge.rs","byte_start":335070,"byte_end":335094,"line_start":34,"line_end":34,"column_start":1,"column_end":25}},{"value":"/     tx.send(\"two!\");","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/par_bridge.rs","byte_start":335095,"byte_end":335119,"line_start":35,"line_end":35,"column_start":1,"column_end":25}},{"value":"/     tx.send(\"three!\");","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/par_bridge.rs","byte_start":335120,"byte_end":335146,"line_start":36,"line_end":36,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/par_bridge.rs","byte_start":335147,"byte_end":335150,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/     rx","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/par_bridge.rs","byte_start":335151,"byte_end":335161,"line_start":38,"line_end":38,"column_start":1,"column_end":11}},{"value":"/ };","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/par_bridge.rs","byte_start":335162,"byte_end":335168,"line_start":39,"line_end":39,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/par_bridge.rs","byte_start":335169,"byte_end":335172,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let mut output: Vec<&'static str> = rx.into_iter().par_bridge().collect();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/par_bridge.rs","byte_start":335173,"byte_end":335251,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/ output.sort_unstable();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/par_bridge.rs","byte_start":335252,"byte_end":335279,"line_start":42,"line_end":42,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/par_bridge.rs","byte_start":335280,"byte_end":335283,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(&*output, &[\"one!\", \"three!\", \"two!\"]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/par_bridge.rs","byte_start":335284,"byte_end":335338,"line_start":44,"line_end":44,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/par_bridge.rs","byte_start":335339,"byte_end":335346,"line_start":45,"line_end":45,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3024},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/par_bridge.rs","byte_start":335453,"byte_end":335463,"line_start":48,"line_end":48,"column_start":8,"column_end":18},"name":"par_bridge","qualname":"::iter::par_bridge::ParallelBridge::par_bridge","value":"pub fn par_bridge(Self) -> IterBridge<Self>","parent":{"krate":0,"index":3023},"children":[],"decl_id":null,"docs":" Creates a bridge from this type to a `ParallelIterator`.\n","sig":null,"attributes":[{"value":"/ Creates a bridge from this type to a `ParallelIterator`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/par_bridge.rs","byte_start":335385,"byte_end":335445,"line_start":47,"line_end":47,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":7693},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/par_bridge.rs","byte_start":335962,"byte_end":335972,"line_start":67,"line_end":67,"column_start":12,"column_end":22},"name":"IterBridge","qualname":"::iter::par_bridge::IterBridge","value":"IterBridge {  }","parent":null,"children":[{"krate":0,"index":7695}],"decl_id":null,"docs":" `IterBridge` is a parallel iterator that wraps a sequential iterator.","sig":null,"attributes":[{"value":"/ `IterBridge` is a parallel iterator that wraps a sequential iterator.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/par_bridge.rs","byte_start":335656,"byte_end":335729,"line_start":60,"line_end":60,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/par_bridge.rs","byte_start":335730,"byte_end":335733,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ This type is created when using the `par_bridge` method on `ParallelBridge`. See the","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/par_bridge.rs","byte_start":335734,"byte_end":335822,"line_start":62,"line_end":62,"column_start":1,"column_end":89}},{"value":"/ [`ParallelBridge`] documentation for details.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/par_bridge.rs","byte_start":335823,"byte_end":335872,"line_start":63,"line_end":63,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/par_bridge.rs","byte_start":335873,"byte_end":335876,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ [`ParallelBridge`]: trait.ParallelBridge.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/par_bridge.rs","byte_start":335877,"byte_end":335926,"line_start":65,"line_end":65,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":7702},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/positions.rs","byte_start":341223,"byte_end":341232,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"name":"Positions","qualname":"::iter::positions::Positions","value":"Positions {  }","parent":null,"children":[{"krate":0,"index":7705},{"krate":0,"index":7706}],"decl_id":null,"docs":" `Positions` takes a predicate `predicate` and filters out elements that match,\n yielding their indices.","sig":null,"attributes":[{"value":"/ `Positions` takes a predicate `predicate` and filters out elements that match,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/positions.rs","byte_start":340773,"byte_end":340855,"line_start":6,"line_end":6,"column_start":1,"column_end":83}},{"value":"/ yielding their indices.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/positions.rs","byte_start":340856,"byte_end":340883,"line_start":7,"line_end":7,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/positions.rs","byte_start":340884,"byte_end":340887,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`positions()`] method on [`IndexedParallelIterator`]","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/positions.rs","byte_start":340888,"byte_end":340975,"line_start":9,"line_end":9,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/positions.rs","byte_start":340976,"byte_end":340979,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`positions()`]: trait.IndexedParallelIterator.html#method.positions","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/positions.rs","byte_start":340980,"byte_end":341052,"line_start":11,"line_end":11,"column_start":1,"column_end":73}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/positions.rs","byte_start":341053,"byte_end":341120,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/positions.rs","byte_start":341121,"byte_end":341194,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":7711},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/repeat.rs","byte_start":348912,"byte_end":348918,"line_start":8,"line_end":8,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::iter::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":7713}],"decl_id":null,"docs":" Iterator adaptor for [the `repeat()` function](fn.repeat.html).\n","sig":null,"attributes":[{"value":"/ Iterator adaptor for [the `repeat()` function](fn.repeat.html).","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/repeat.rs","byte_start":348809,"byte_end":348876,"line_start":6,"line_end":6,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":3244},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/repeat.rs","byte_start":349470,"byte_end":349476,"line_start":26,"line_end":26,"column_start":8,"column_end":14},"name":"repeat","qualname":"::iter::repeat::repeat","value":"pub fn repeat<T: Clone + Send>(T) -> Repeat<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a parallel iterator that endlessly repeats `elt` (by\n cloning it). Note that this iterator has \"infinite\" length, so\n typically you would want to use `zip` or `take` or some other\n means to shorten it, or consider using\n [the `repeatn()` function](fn.repeatn.html) instead.","sig":null,"attributes":[{"value":"/ Creates a parallel iterator that endlessly repeats `elt` (by","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/repeat.rs","byte_start":348957,"byte_end":349021,"line_start":12,"line_end":12,"column_start":1,"column_end":65}},{"value":"/ cloning it). Note that this iterator has \"infinite\" length, so","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/repeat.rs","byte_start":349022,"byte_end":349088,"line_start":13,"line_end":13,"column_start":1,"column_end":67}},{"value":"/ typically you would want to use `zip` or `take` or some other","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/repeat.rs","byte_start":349089,"byte_end":349154,"line_start":14,"line_end":14,"column_start":1,"column_end":66}},{"value":"/ means to shorten it, or consider using","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/repeat.rs","byte_start":349155,"byte_end":349197,"line_start":15,"line_end":15,"column_start":1,"column_end":43}},{"value":"/ [the `repeatn()` function](fn.repeatn.html) instead.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/repeat.rs","byte_start":349198,"byte_end":349254,"line_start":16,"line_end":16,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/repeat.rs","byte_start":349255,"byte_end":349258,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/repeat.rs","byte_start":349259,"byte_end":349273,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/repeat.rs","byte_start":349274,"byte_end":349277,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/repeat.rs","byte_start":349278,"byte_end":349285,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/repeat.rs","byte_start":349286,"byte_end":349312,"line_start":21,"line_end":21,"column_start":1,"column_end":27}},{"value":"/ use rayon::iter::repeat;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/repeat.rs","byte_start":349313,"byte_end":349341,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ let x: Vec<(i32, i32)> = repeat(22).zip(0..3).collect();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/repeat.rs","byte_start":349342,"byte_end":349402,"line_start":23,"line_end":23,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(x, vec![(22, 0), (22, 1), (22, 2)]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/repeat.rs","byte_start":349403,"byte_end":349454,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/repeat.rs","byte_start":349455,"byte_end":349462,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3248},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/repeat.rs","byte_start":349874,"byte_end":349878,"line_start":39,"line_end":39,"column_start":12,"column_end":16},"name":"take","qualname":"<Repeat<T>>::take","value":"pub fn take(Self, usize) -> RepeatN<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes only `n` repeats of the element, similar to the general\n [`take()`](trait.IndexedParallelIterator.html#method.take).","sig":null,"attributes":[{"value":"/ Takes only `n` repeats of the element, similar to the general","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/repeat.rs","byte_start":349599,"byte_end":349664,"line_start":34,"line_end":34,"column_start":5,"column_end":70}},{"value":"/ [`take()`](trait.IndexedParallelIterator.html#method.take).","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/repeat.rs","byte_start":349669,"byte_end":349732,"line_start":35,"line_end":35,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/repeat.rs","byte_start":349737,"byte_end":349740,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ The resulting `RepeatN` is an `IndexedParallelIterator`, allowing","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/repeat.rs","byte_start":349745,"byte_end":349814,"line_start":37,"line_end":37,"column_start":5,"column_end":74}},{"value":"/ more functionality than `Repeat` alone.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/repeat.rs","byte_start":349819,"byte_end":349862,"line_start":38,"line_end":38,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3249},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/repeat.rs","byte_start":350140,"byte_end":350143,"line_start":46,"line_end":46,"column_start":12,"column_end":15},"name":"zip","qualname":"<Repeat<T>>::zip","value":"pub fn zip<Z>(Self, Z) -> Zip<RepeatN<T>, Z::Iter> where\nZ: IntoParallelIterator, Z::Iter: IndexedParallelIterator","parent":null,"children":[],"decl_id":null,"docs":" Iterates tuples, repeating the element with items from another\n iterator, similar to the general\n [`zip()`](trait.IndexedParallelIterator.html#method.zip).\n","sig":null,"attributes":[{"value":"/ Iterates tuples, repeating the element with items from another","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/repeat.rs","byte_start":349955,"byte_end":350021,"line_start":43,"line_end":43,"column_start":5,"column_end":71}},{"value":"/ iterator, similar to the general","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/repeat.rs","byte_start":350026,"byte_end":350062,"line_start":44,"line_end":44,"column_start":5,"column_end":41}},{"value":"/ [`zip()`](trait.IndexedParallelIterator.html#method.zip).","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/repeat.rs","byte_start":350067,"byte_end":350128,"line_start":45,"line_end":45,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":7720},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/repeat.rs","byte_start":351412,"byte_end":351419,"line_start":103,"line_end":103,"column_start":12,"column_end":19},"name":"RepeatN","qualname":"::iter::repeat::RepeatN","value":"RepeatN {  }","parent":null,"children":[{"krate":0,"index":7722},{"krate":0,"index":7723}],"decl_id":null,"docs":" Iterator adaptor for [the `repeatn()` function](fn.repeatn.html).\n","sig":null,"attributes":[{"value":"/ Iterator adaptor for [the `repeatn()` function](fn.repeatn.html).","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/repeat.rs","byte_start":351307,"byte_end":351376,"line_start":101,"line_end":101,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":3265},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/repeat.rs","byte_start":351784,"byte_end":351791,"line_start":119,"line_end":119,"column_start":8,"column_end":15},"name":"repeatn","qualname":"::iter::repeat::repeatn","value":"pub fn repeatn<T: Clone + Send>(T, usize) -> RepeatN<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a parallel iterator that produces `n` repeats of `elt`\n (by cloning it).","sig":null,"attributes":[{"value":"/ Creates a parallel iterator that produces `n` repeats of `elt`","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/repeat.rs","byte_start":351476,"byte_end":351542,"line_start":108,"line_end":108,"column_start":1,"column_end":67}},{"value":"/ (by cloning it).","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/repeat.rs","byte_start":351543,"byte_end":351563,"line_start":109,"line_end":109,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/repeat.rs","byte_start":351564,"byte_end":351567,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/repeat.rs","byte_start":351568,"byte_end":351582,"line_start":111,"line_end":111,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/repeat.rs","byte_start":351583,"byte_end":351586,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/repeat.rs","byte_start":351587,"byte_end":351594,"line_start":113,"line_end":113,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/repeat.rs","byte_start":351595,"byte_end":351621,"line_start":114,"line_end":114,"column_start":1,"column_end":27}},{"value":"/ use rayon::iter::repeatn;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/repeat.rs","byte_start":351622,"byte_end":351651,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"/ let x: Vec<(i32, i32)> = repeatn(22, 3).zip(0..3).collect();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/repeat.rs","byte_start":351652,"byte_end":351716,"line_start":116,"line_end":116,"column_start":1,"column_end":65}},{"value":"/ assert_eq!(x, vec![(22, 0), (22, 1), (22, 2)]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/repeat.rs","byte_start":351717,"byte_end":351768,"line_start":117,"line_end":117,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/repeat.rs","byte_start":351769,"byte_end":351776,"line_start":118,"line_end":118,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7730},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/rev.rs","byte_start":354731,"byte_end":354734,"line_start":12,"line_end":12,"column_start":12,"column_end":15},"name":"Rev","qualname":"::iter::rev::Rev","value":"Rev {  }","parent":null,"children":[{"krate":0,"index":7732}],"decl_id":null,"docs":" `Rev` is an iterator that produces elements in reverse order. This struct\n is created by the [`rev()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"/ `Rev` is an iterator that produces elements in reverse order. This struct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/rev.rs","byte_start":354341,"byte_end":354418,"line_start":5,"line_end":5,"column_start":1,"column_end":78}},{"value":"/ is created by the [`rev()`] method on [`IndexedParallelIterator`]","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/rev.rs","byte_start":354419,"byte_end":354488,"line_start":6,"line_end":6,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/rev.rs","byte_start":354489,"byte_end":354492,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [`rev()`]: trait.IndexedParallelIterator.html#method.rev","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/rev.rs","byte_start":354493,"byte_end":354553,"line_start":8,"line_end":8,"column_start":1,"column_end":61}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/rev.rs","byte_start":354554,"byte_end":354621,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/rev.rs","byte_start":354622,"byte_end":354695,"line_start":10,"line_end":10,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":7739},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/skip.rs","byte_start":357576,"byte_end":357580,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"Skip","qualname":"::iter::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":7741},{"krate":0,"index":7742}],"decl_id":null,"docs":" `Skip` is an iterator that skips over the first `n` elements.\n This struct is created by the [`skip()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"/ `Skip` is an iterator that skips over the first `n` elements.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/skip.rs","byte_start":357183,"byte_end":357248,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"/ This struct is created by the [`skip()`] method on [`IndexedParallelIterator`]","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/skip.rs","byte_start":357249,"byte_end":357331,"line_start":7,"line_end":7,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/skip.rs","byte_start":357332,"byte_end":357335,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`skip()`]: trait.IndexedParallelIterator.html#method.skip","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/skip.rs","byte_start":357336,"byte_end":357398,"line_start":9,"line_end":9,"column_start":1,"column_end":63}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/skip.rs","byte_start":357399,"byte_end":357466,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/skip.rs","byte_start":357467,"byte_end":357540,"line_start":11,"line_end":11,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":3394},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":363209,"byte_end":363214,"line_start":106,"line_end":106,"column_start":8,"column_end":13},"name":"split","qualname":"::iter::splitter::split","value":"pub fn split<D, S>(D, S) -> Split<D, S> where D: Send, S: Fn(D) ->\n(D, Option<D>) + Sync","parent":null,"children":[],"decl_id":null,"docs":" The `split` function takes arbitrary data and a closure that knows how to\n split it, and turns this into a `ParallelIterator`.","sig":null,"attributes":[{"value":"/ The `split` function takes arbitrary data and a closure that knows how to","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":359325,"byte_end":359402,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ split it, and turns this into a `ParallelIterator`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":359403,"byte_end":359458,"line_start":7,"line_end":7,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":359459,"byte_end":359462,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":359463,"byte_end":359477,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":359478,"byte_end":359481,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ As a simple example, Rayon can recursively split ranges of indices","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":359482,"byte_end":359552,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":359553,"byte_end":359556,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":359557,"byte_end":359564,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/ use rayon::iter;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":359565,"byte_end":359585,"line_start":14,"line_end":14,"column_start":1,"column_end":21}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":359586,"byte_end":359612,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"/ use std::ops::Range;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":359613,"byte_end":359637,"line_start":16,"line_end":16,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":359638,"byte_end":359641,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":359642,"byte_end":359645,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ // We define a range of indices as follows","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":359646,"byte_end":359692,"line_start":19,"line_end":19,"column_start":1,"column_end":47}},{"value":"/ type Range1D = Range<usize>;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":359693,"byte_end":359725,"line_start":20,"line_end":20,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":359726,"byte_end":359729,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ // Splitting it in two can be done like this","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":359730,"byte_end":359778,"line_start":22,"line_end":22,"column_start":1,"column_end":49}},{"value":"/ fn split_range1(r: Range1D) -> (Range1D, Option<Range1D>) {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":359779,"byte_end":359842,"line_start":23,"line_end":23,"column_start":1,"column_end":64}},{"value":"/     // We are mathematically unable to split the range if there is only","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":359843,"byte_end":359918,"line_start":24,"line_end":24,"column_start":1,"column_end":76}},{"value":"/     // one point inside of it, but we could stop splitting before that.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":359919,"byte_end":359994,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/     if r.end - r.start <= 1 { return (r, None); }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":359995,"byte_end":360048,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":360049,"byte_end":360052,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/     // Here, our range is considered large enough to be splittable","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":360053,"byte_end":360123,"line_start":28,"line_end":28,"column_start":1,"column_end":71}},{"value":"/     let midpoint = r.start + (r.end - r.start) / 2;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":360124,"byte_end":360179,"line_start":29,"line_end":29,"column_start":1,"column_end":56}},{"value":"/     (r.start..midpoint, Some(midpoint..r.end))","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":360180,"byte_end":360230,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":360231,"byte_end":360236,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":360237,"byte_end":360240,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ // By using iter::split, Rayon will split the range until it has enough work","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":360241,"byte_end":360321,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ // to feed the CPU cores, then give us the resulting sub-ranges","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":360322,"byte_end":360389,"line_start":34,"line_end":34,"column_start":1,"column_end":68}},{"value":"/ iter::split(0..4096, split_range1).for_each(|sub_range| {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":360390,"byte_end":360451,"line_start":35,"line_end":35,"column_start":1,"column_end":62}},{"value":"/     // As our initial range had a power-of-two size, the final sub-ranges","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":360452,"byte_end":360529,"line_start":36,"line_end":36,"column_start":1,"column_end":78}},{"value":"/     // should have power-of-two sizes too","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":360530,"byte_end":360575,"line_start":37,"line_end":37,"column_start":1,"column_end":46}},{"value":"/     assert!((sub_range.end - sub_range.start).is_power_of_two());","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":360576,"byte_end":360645,"line_start":38,"line_end":38,"column_start":1,"column_end":70}},{"value":"/ });","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":360646,"byte_end":360653,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":360654,"byte_end":360661,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":360662,"byte_end":360665,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ This recursive splitting can be extended to two or three dimensions,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":360666,"byte_end":360738,"line_start":42,"line_end":42,"column_start":1,"column_end":73}},{"value":"/ to reproduce a classic \"block-wise\" parallelization scheme of graphics and","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":360739,"byte_end":360817,"line_start":43,"line_end":43,"column_start":1,"column_end":79}},{"value":"/ numerical simulations:","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":360818,"byte_end":360844,"line_start":44,"line_end":44,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":360845,"byte_end":360848,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":360849,"byte_end":360856,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/ # use rayon::iter;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":360857,"byte_end":360879,"line_start":47,"line_end":47,"column_start":1,"column_end":23}},{"value":"/ # use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":360880,"byte_end":360908,"line_start":48,"line_end":48,"column_start":1,"column_end":29}},{"value":"/ # use std::ops::Range;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":360909,"byte_end":360935,"line_start":49,"line_end":49,"column_start":1,"column_end":27}},{"value":"/ # type Range1D = Range<usize>;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":360936,"byte_end":360970,"line_start":50,"line_end":50,"column_start":1,"column_end":35}},{"value":"/ # fn split_range1(r: Range1D) -> (Range1D, Option<Range1D>) {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":360971,"byte_end":361036,"line_start":51,"line_end":51,"column_start":1,"column_end":66}},{"value":"/ #     if r.end - r.start <= 1 { return (r, None); }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":361037,"byte_end":361092,"line_start":52,"line_end":52,"column_start":1,"column_end":56}},{"value":"/ #     let midpoint = r.start + (r.end - r.start) / 2;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":361093,"byte_end":361150,"line_start":53,"line_end":53,"column_start":1,"column_end":58}},{"value":"/ #     (r.start..midpoint, Some(midpoint..r.end))","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":361151,"byte_end":361203,"line_start":54,"line_end":54,"column_start":1,"column_end":53}},{"value":"/ # }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":361204,"byte_end":361211,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":361212,"byte_end":361217,"line_start":56,"line_end":56,"column_start":1,"column_end":6}},{"value":"/ // A two-dimensional range of indices can be built out of two 1D ones","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":361218,"byte_end":361291,"line_start":57,"line_end":57,"column_start":1,"column_end":74}},{"value":"/ struct Range2D {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":361292,"byte_end":361312,"line_start":58,"line_end":58,"column_start":1,"column_end":21}},{"value":"/     // Range of horizontal indices","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":361313,"byte_end":361351,"line_start":59,"line_end":59,"column_start":1,"column_end":39}},{"value":"/     pub rx: Range1D,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":361352,"byte_end":361376,"line_start":60,"line_end":60,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":361377,"byte_end":361380,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     // Range of vertical indices","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":361381,"byte_end":361417,"line_start":62,"line_end":62,"column_start":1,"column_end":37}},{"value":"/     pub ry: Range1D,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":361418,"byte_end":361442,"line_start":63,"line_end":63,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":361443,"byte_end":361448,"line_start":64,"line_end":64,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":361449,"byte_end":361452,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ // We want to recursively split them by the largest dimension until we have","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":361453,"byte_end":361532,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/ // enough sub-ranges to feed our mighty multi-core CPU. This function","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":361533,"byte_end":361606,"line_start":67,"line_end":67,"column_start":1,"column_end":74}},{"value":"/ // carries out one such split.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":361607,"byte_end":361641,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"/ fn split_range2(r2: Range2D) -> (Range2D, Option<Range2D>) {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":361642,"byte_end":361706,"line_start":69,"line_end":69,"column_start":1,"column_end":65}},{"value":"/     // Decide on which axis (horizontal/vertical) the range should be split","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":361707,"byte_end":361786,"line_start":70,"line_end":70,"column_start":1,"column_end":80}},{"value":"/     let width = r2.rx.end - r2.rx.start;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":361787,"byte_end":361831,"line_start":71,"line_end":71,"column_start":1,"column_end":45}},{"value":"/     let height = r2.ry.end - r2.ry.start;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":361832,"byte_end":361877,"line_start":72,"line_end":72,"column_start":1,"column_end":46}},{"value":"/     if width >= height {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":361878,"byte_end":361906,"line_start":73,"line_end":73,"column_start":1,"column_end":29}},{"value":"/         // This is a wide range, split it on the horizontal axis","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":361907,"byte_end":361975,"line_start":74,"line_end":74,"column_start":1,"column_end":69}},{"value":"/         let (split_rx, ry) = (split_range1(r2.rx), r2.ry);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":361976,"byte_end":362038,"line_start":75,"line_end":75,"column_start":1,"column_end":63}},{"value":"/         let out1 = Range2D {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":362039,"byte_end":362071,"line_start":76,"line_end":76,"column_start":1,"column_end":33}},{"value":"/             rx: split_rx.0,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":362072,"byte_end":362103,"line_start":77,"line_end":77,"column_start":1,"column_end":32}},{"value":"/             ry: ry.clone(),","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":362104,"byte_end":362135,"line_start":78,"line_end":78,"column_start":1,"column_end":32}},{"value":"/         };","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":362136,"byte_end":362150,"line_start":79,"line_end":79,"column_start":1,"column_end":15}},{"value":"/         let out2 = split_rx.1.map(|rx| Range2D { rx, ry });","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":362151,"byte_end":362214,"line_start":80,"line_end":80,"column_start":1,"column_end":64}},{"value":"/         (out1, out2)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":362215,"byte_end":362239,"line_start":81,"line_end":81,"column_start":1,"column_end":25}},{"value":"/     } else {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":362240,"byte_end":362256,"line_start":82,"line_end":82,"column_start":1,"column_end":17}},{"value":"/         // This is a tall range, split it on the vertical axis","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":362257,"byte_end":362323,"line_start":83,"line_end":83,"column_start":1,"column_end":67}},{"value":"/         let (rx, split_ry) = (r2.rx, split_range1(r2.ry));","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":362324,"byte_end":362386,"line_start":84,"line_end":84,"column_start":1,"column_end":63}},{"value":"/         let out1 = Range2D {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":362387,"byte_end":362419,"line_start":85,"line_end":85,"column_start":1,"column_end":33}},{"value":"/             rx: rx.clone(),","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":362420,"byte_end":362451,"line_start":86,"line_end":86,"column_start":1,"column_end":32}},{"value":"/             ry: split_ry.0,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":362452,"byte_end":362483,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/         };","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":362484,"byte_end":362498,"line_start":88,"line_end":88,"column_start":1,"column_end":15}},{"value":"/         let out2 = split_ry.1.map(|ry| Range2D { rx, ry, });","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":362499,"byte_end":362563,"line_start":89,"line_end":89,"column_start":1,"column_end":65}},{"value":"/         (out1, out2)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":362564,"byte_end":362588,"line_start":90,"line_end":90,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":362589,"byte_end":362598,"line_start":91,"line_end":91,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":362599,"byte_end":362604,"line_start":92,"line_end":92,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":362605,"byte_end":362608,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ // Again, rayon can handle the recursive splitting for us","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":362609,"byte_end":362670,"line_start":94,"line_end":94,"column_start":1,"column_end":62}},{"value":"/ let range = Range2D { rx: 0..800, ry: 0..600 };","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":362671,"byte_end":362722,"line_start":95,"line_end":95,"column_start":1,"column_end":52}},{"value":"/ iter::split(range, split_range2).for_each(|sub_range| {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":362723,"byte_end":362782,"line_start":96,"line_end":96,"column_start":1,"column_end":60}},{"value":"/     // If the sub-ranges were indeed split by the largest dimension, then","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":362783,"byte_end":362860,"line_start":97,"line_end":97,"column_start":1,"column_end":78}},{"value":"/     // if no dimension was twice larger than the other initially, this","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":362861,"byte_end":362935,"line_start":98,"line_end":98,"column_start":1,"column_end":75}},{"value":"/     // property will remain true in the final sub-ranges.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":362936,"byte_end":362997,"line_start":99,"line_end":99,"column_start":1,"column_end":62}},{"value":"/     let width = sub_range.rx.end - sub_range.rx.start;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":362998,"byte_end":363056,"line_start":100,"line_end":100,"column_start":1,"column_end":59}},{"value":"/     let height = sub_range.ry.end - sub_range.ry.start;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":363057,"byte_end":363116,"line_start":101,"line_end":101,"column_start":1,"column_end":60}},{"value":"/     assert!((width / 2 <= height) && (height / 2 <= width));","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":363117,"byte_end":363181,"line_start":102,"line_end":102,"column_start":1,"column_end":65}},{"value":"/ });","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":363182,"byte_end":363189,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":363190,"byte_end":363197,"line_start":104,"line_end":104,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":363198,"byte_end":363201,"line_start":105,"line_end":105,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":7749},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":363551,"byte_end":363556,"line_start":119,"line_end":119,"column_start":12,"column_end":17},"name":"Split","qualname":"::iter::splitter::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":7752},{"krate":0,"index":7753}],"decl_id":null,"docs":" `Split` is a parallel iterator using arbitrary data and a splitting function.\n This struct is created by the [`split()`] function.","sig":null,"attributes":[{"value":"/ `Split` is a parallel iterator using arbitrary data and a splitting function.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":363350,"byte_end":363431,"line_start":114,"line_end":114,"column_start":1,"column_end":82}},{"value":"/ This struct is created by the [`split()`] function.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":363432,"byte_end":363487,"line_start":115,"line_end":115,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":363488,"byte_end":363491,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ [`split()`]: fn.split.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":363492,"byte_end":363522,"line_start":117,"line_end":117,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7758},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/take.rs","byte_start":367257,"byte_end":367261,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Take","qualname":"::iter::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":7760},{"krate":0,"index":7761}],"decl_id":null,"docs":" `Take` is an iterator that iterates over the first `n` elements.\n This struct is created by the [`take()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"/ `Take` is an iterator that iterates over the first `n` elements.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/take.rs","byte_start":366861,"byte_end":366929,"line_start":5,"line_end":5,"column_start":1,"column_end":69}},{"value":"/ This struct is created by the [`take()`] method on [`IndexedParallelIterator`]","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/take.rs","byte_start":366930,"byte_end":367012,"line_start":6,"line_end":6,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/take.rs","byte_start":367013,"byte_end":367016,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [`take()`]: trait.IndexedParallelIterator.html#method.take","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/take.rs","byte_start":367017,"byte_end":367079,"line_start":8,"line_end":8,"column_start":1,"column_end":63}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/take.rs","byte_start":367080,"byte_end":367147,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/take.rs","byte_start":367148,"byte_end":367221,"line_start":10,"line_end":10,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":7768},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/try_fold.rs","byte_start":369724,"byte_end":369731,"line_start":32,"line_end":32,"column_start":12,"column_end":19},"name":"TryFold","qualname":"::iter::try_fold::TryFold","value":"TryFold {  }","parent":null,"children":[{"krate":0,"index":7773},{"krate":0,"index":7774},{"krate":0,"index":7775},{"krate":0,"index":7776}],"decl_id":null,"docs":" `TryFold` is an iterator that applies a function over an iterator producing a single value.\n This struct is created by the [`try_fold()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"/ `TryFold` is an iterator that applies a function over an iterator producing a single value.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/try_fold.rs","byte_start":369324,"byte_end":369419,"line_start":25,"line_end":25,"column_start":1,"column_end":96}},{"value":"/ This struct is created by the [`try_fold()`] method on [`ParallelIterator`]","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/try_fold.rs","byte_start":369420,"byte_end":369499,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/try_fold.rs","byte_start":369500,"byte_end":369503,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [`try_fold()`]: trait.ParallelIterator.html#method.try_fold","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/try_fold.rs","byte_start":369504,"byte_end":369567,"line_start":28,"line_end":28,"column_start":1,"column_end":64}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/try_fold.rs","byte_start":369568,"byte_end":369621,"line_start":29,"line_end":29,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/try_fold.rs","byte_start":369622,"byte_end":369695,"line_start":30,"line_end":30,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":7783},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/try_fold.rs","byte_start":373685,"byte_end":373696,"line_start":190,"line_end":190,"column_start":12,"column_end":23},"name":"TryFoldWith","qualname":"::iter::try_fold::TryFoldWith","value":"TryFoldWith {  }","parent":null,"children":[{"krate":0,"index":7787},{"krate":0,"index":7788},{"krate":0,"index":7789}],"decl_id":null,"docs":" `TryFoldWith` is an iterator that applies a function over an iterator producing a single value.\n This struct is created by the [`try_fold_with()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"/ `TryFoldWith` is an iterator that applies a function over an iterator producing a single value.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/try_fold.rs","byte_start":373266,"byte_end":373365,"line_start":183,"line_end":183,"column_start":1,"column_end":100}},{"value":"/ This struct is created by the [`try_fold_with()`] method on [`ParallelIterator`]","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/try_fold.rs","byte_start":373366,"byte_end":373450,"line_start":184,"line_end":184,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/try_fold.rs","byte_start":373451,"byte_end":373454,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ [`try_fold_with()`]: trait.ParallelIterator.html#method.try_fold_with","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/try_fold.rs","byte_start":373455,"byte_end":373528,"line_start":186,"line_end":186,"column_start":1,"column_end":74}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/try_fold.rs","byte_start":373529,"byte_end":373582,"line_start":187,"line_end":187,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/try_fold.rs","byte_start":373583,"byte_end":373656,"line_start":188,"line_end":188,"column_start":1,"column_end":74}}]},{"kind":"Type","id":{"krate":0,"index":3789},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/unzip.rs","byte_start":382758,"byte_end":382762,"line_start":9,"line_end":9,"column_start":10,"column_end":14},"name":"Left","qualname":"::iter::unzip::UnzipOp::Left","value":"type Left: Send;","parent":{"krate":0,"index":3787},"children":[],"decl_id":null,"docs":" The type of item expected by the left consumer.\n","sig":null,"attributes":[{"value":"/ The type of item expected by the left consumer.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/unzip.rs","byte_start":382697,"byte_end":382748,"line_start":8,"line_end":8,"column_start":5,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":3790},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/unzip.rs","byte_start":382837,"byte_end":382842,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"name":"Right","qualname":"::iter::unzip::UnzipOp::Right","value":"type Right: Send;","parent":{"krate":0,"index":3787},"children":[],"decl_id":null,"docs":" The type of item expected by the right consumer.\n","sig":null,"attributes":[{"value":"/ The type of item expected by the right consumer.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/unzip.rs","byte_start":382775,"byte_end":382827,"line_start":11,"line_end":11,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":7795},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/update.rs","byte_start":394968,"byte_end":394974,"line_start":15,"line_end":15,"column_start":12,"column_end":18},"name":"Update","qualname":"::iter::update::Update","value":"Update {  }","parent":null,"children":[{"krate":0,"index":7798},{"krate":0,"index":7799}],"decl_id":null,"docs":" `Update` is an iterator that mutates the elements of an\n underlying iterator before they are yielded.","sig":null,"attributes":[{"value":"/ `Update` is an iterator that mutates the elements of an","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/update.rs","byte_start":394557,"byte_end":394616,"line_start":6,"line_end":6,"column_start":1,"column_end":60}},{"value":"/ underlying iterator before they are yielded.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/update.rs","byte_start":394617,"byte_end":394665,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/update.rs","byte_start":394666,"byte_end":394669,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`update()`] method on [`ParallelIterator`]","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/update.rs","byte_start":394670,"byte_end":394747,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/update.rs","byte_start":394748,"byte_end":394751,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`update()`]: trait.ParallelIterator.html#method.update","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/update.rs","byte_start":394752,"byte_end":394811,"line_start":11,"line_end":11,"column_start":1,"column_end":60}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/update.rs","byte_start":394812,"byte_end":394865,"line_start":12,"line_end":12,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/update.rs","byte_start":394866,"byte_end":394939,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":7817},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/while_some.rs","byte_start":402691,"byte_end":402700,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"WhileSome","qualname":"::iter::while_some::WhileSome","value":"WhileSome {  }","parent":null,"children":[{"krate":0,"index":7819}],"decl_id":null,"docs":" `WhileSome` is an iterator that yields the `Some` elements of an iterator,\n halting as soon as any `None` is produced.","sig":null,"attributes":[{"value":"/ `WhileSome` is an iterator that yields the `Some` elements of an iterator,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/while_some.rs","byte_start":402244,"byte_end":402322,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ halting as soon as any `None` is produced.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/while_some.rs","byte_start":402323,"byte_end":402369,"line_start":6,"line_end":6,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/while_some.rs","byte_start":402370,"byte_end":402373,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`while_some()`] method on [`ParallelIterator`]","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/while_some.rs","byte_start":402374,"byte_end":402455,"line_start":8,"line_end":8,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/while_some.rs","byte_start":402456,"byte_end":402459,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`while_some()`]: trait.ParallelIterator.html#method.while_some","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/while_some.rs","byte_start":402460,"byte_end":402527,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/while_some.rs","byte_start":402528,"byte_end":402581,"line_start":11,"line_end":11,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/while_some.rs","byte_start":402582,"byte_end":402655,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":7826},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/zip.rs","byte_start":406396,"byte_end":406399,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"Zip","qualname":"::iter::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":7829},{"krate":0,"index":7830}],"decl_id":null,"docs":" `Zip` is an iterator that zips up `a` and `b` into a single iterator\n of pairs. This struct is created by the [`zip()`] method on\n [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"/ `Zip` is an iterator that zips up `a` and `b` into a single iterator","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/zip.rs","byte_start":405985,"byte_end":406057,"line_start":6,"line_end":6,"column_start":1,"column_end":73}},{"value":"/ of pairs. This struct is created by the [`zip()`] method on","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/zip.rs","byte_start":406058,"byte_end":406121,"line_start":7,"line_end":7,"column_start":1,"column_end":64}},{"value":"/ [`IndexedParallelIterator`]","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/zip.rs","byte_start":406122,"byte_end":406153,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/zip.rs","byte_start":406154,"byte_end":406157,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`zip()`]: trait.IndexedParallelIterator.html#method.zip","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/zip.rs","byte_start":406158,"byte_end":406218,"line_start":10,"line_end":10,"column_start":1,"column_end":61}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/zip.rs","byte_start":406219,"byte_end":406286,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/zip.rs","byte_start":406287,"byte_end":406360,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":7839},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/zip_eq.rs","byte_start":410386,"byte_end":410391,"line_start":14,"line_end":14,"column_start":12,"column_end":17},"name":"ZipEq","qualname":"::iter::zip_eq::ZipEq","value":"ZipEq {  }","parent":null,"children":[{"krate":0,"index":7842}],"decl_id":null,"docs":" An [`IndexedParallelIterator`] that iterates over two parallel iterators of equal\n length simultaneously.","sig":null,"attributes":[{"value":"/ An [`IndexedParallelIterator`] that iterates over two parallel iterators of equal","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/zip_eq.rs","byte_start":409891,"byte_end":409976,"line_start":4,"line_end":4,"column_start":1,"column_end":86}},{"value":"/ length simultaneously.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/zip_eq.rs","byte_start":409977,"byte_end":410003,"line_start":5,"line_end":5,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/zip_eq.rs","byte_start":410004,"byte_end":410007,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`zip_eq`] method on [`IndexedParallelIterator`],","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/zip_eq.rs","byte_start":410008,"byte_end":410091,"line_start":7,"line_end":7,"column_start":1,"column_end":84}},{"value":"/ see its documentation for more information.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/zip_eq.rs","byte_start":410092,"byte_end":410139,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/zip_eq.rs","byte_start":410140,"byte_end":410143,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`zip_eq`]: trait.IndexedParallelIterator.html#method.zip_eq","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/zip_eq.rs","byte_start":410144,"byte_end":410208,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/zip_eq.rs","byte_start":410209,"byte_end":410276,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/zip_eq.rs","byte_start":410277,"byte_end":410350,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":7851},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/step_by.rs","byte_start":412180,"byte_end":412186,"line_start":17,"line_end":17,"column_start":12,"column_end":18},"name":"StepBy","qualname":"::iter::step_by::StepBy","value":"StepBy {  }","parent":null,"children":[{"krate":0,"index":7853},{"krate":0,"index":7854}],"decl_id":null,"docs":" `StepBy` is an iterator that skips `n` elements between each yield, where `n` is the given step.\n This struct is created by the [`step_by()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"/ `StepBy` is an iterator that skips `n` elements between each yield, where `n` is the given step.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/step_by.rs","byte_start":411743,"byte_end":411843,"line_start":10,"line_end":10,"column_start":1,"column_end":101}},{"value":"/ This struct is created by the [`step_by()`] method on [`IndexedParallelIterator`]","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/step_by.rs","byte_start":411844,"byte_end":411929,"line_start":11,"line_end":11,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/step_by.rs","byte_start":411930,"byte_end":411933,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`step_by()`]: trait.IndexedParallelIterator.html#method.step_by","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/step_by.rs","byte_start":411934,"byte_end":412002,"line_start":13,"line_end":13,"column_start":1,"column_end":69}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/step_by.rs","byte_start":412003,"byte_end":412070,"line_start":14,"line_end":14,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/step_by.rs","byte_start":412071,"byte_end":412144,"line_start":15,"line_end":15,"column_start":1,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":4465},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":35969,"byte_end":35989,"line_start":204,"line_end":204,"column_start":11,"column_end":31},"name":"IntoParallelIterator","qualname":"::iter::IntoParallelIterator","value":"IntoParallelIterator","parent":null,"children":[{"krate":0,"index":4466},{"krate":0,"index":4467},{"krate":0,"index":4468}],"decl_id":null,"docs":" `IntoParallelIterator` implements the conversion to a [`ParallelIterator`].","sig":null,"attributes":[{"value":"/ `IntoParallelIterator` implements the conversion to a [`ParallelIterator`].","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":35521,"byte_end":35600,"line_start":196,"line_end":196,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":35601,"byte_end":35604,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ By implementing `IntoParallelIterator` for a type, you define how it will","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":35605,"byte_end":35682,"line_start":198,"line_end":198,"column_start":1,"column_end":78}},{"value":"/ transformed into an iterator. This is a parallel version of the standard","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":35683,"byte_end":35759,"line_start":199,"line_end":199,"column_start":1,"column_end":77}},{"value":"/ library's [`std::iter::IntoIterator`] trait.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":35760,"byte_end":35808,"line_start":200,"line_end":200,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":35809,"byte_end":35812,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":35813,"byte_end":35866,"line_start":202,"line_end":202,"column_start":1,"column_end":54}},{"value":"/ [`std::iter::IntoIterator`]: https://doc.rust-lang.org/std/iter/trait.IntoIterator.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":35867,"byte_end":35958,"line_start":203,"line_end":203,"column_start":1,"column_end":92}}]},{"kind":"Type","id":{"krate":0,"index":4466},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":36058,"byte_end":36062,"line_start":206,"line_end":206,"column_start":10,"column_end":14},"name":"Iter","qualname":"::iter::IntoParallelIterator::Iter","value":"type Iter: ParallelIterator<Item = Self::Item>;","parent":{"krate":0,"index":4465},"children":[],"decl_id":null,"docs":" The parallel iterator type that will be created.\n","sig":null,"attributes":[{"value":"/ The parallel iterator type that will be created.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":35996,"byte_end":36048,"line_start":205,"line_end":205,"column_start":5,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":4467},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":36177,"byte_end":36181,"line_start":209,"line_end":209,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::IntoParallelIterator::Item","value":"type Item: Send;","parent":{"krate":0,"index":4465},"children":[],"decl_id":null,"docs":" The type of item that the parallel iterator will produce.\n","sig":null,"attributes":[{"value":"/ The type of item that the parallel iterator will produce.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":36106,"byte_end":36167,"line_start":208,"line_end":208,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":4468},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":36832,"byte_end":36845,"line_start":233,"line_end":233,"column_start":8,"column_end":21},"name":"into_par_iter","qualname":"::iter::IntoParallelIterator::into_par_iter","value":"pub fn into_par_iter(Self) -> Self::Iter","parent":{"krate":0,"index":4465},"children":[],"decl_id":null,"docs":" Converts `self` into a parallel iterator.","sig":null,"attributes":[{"value":"/ Converts `self` into a parallel iterator.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":36194,"byte_end":36239,"line_start":211,"line_end":211,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":36244,"byte_end":36247,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":36252,"byte_end":36266,"line_start":213,"line_end":213,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":36271,"byte_end":36274,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":36279,"byte_end":36286,"line_start":215,"line_end":215,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":36291,"byte_end":36317,"line_start":216,"line_end":216,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":36322,"byte_end":36325,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ println!(\"counting in parallel:\");","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":36330,"byte_end":36368,"line_start":218,"line_end":218,"column_start":5,"column_end":43}},{"value":"/ (0..100).into_par_iter()","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":36373,"byte_end":36401,"line_start":219,"line_end":219,"column_start":5,"column_end":33}},{"value":"/     .for_each(|i| println!(\"{}\", i));","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":36406,"byte_end":36447,"line_start":220,"line_end":220,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":36452,"byte_end":36459,"line_start":221,"line_end":221,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":36464,"byte_end":36467,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ This conversion is often implicit for arguments to methods like [`zip`].","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":36472,"byte_end":36548,"line_start":223,"line_end":223,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":36553,"byte_end":36556,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":36561,"byte_end":36568,"line_start":225,"line_end":225,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":36573,"byte_end":36599,"line_start":226,"line_end":226,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":36604,"byte_end":36607,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ let v: Vec<_> = (0..5).into_par_iter().zip(5..10).collect();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":36612,"byte_end":36676,"line_start":228,"line_end":228,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(v, [(0, 5), (1, 6), (2, 7), (3, 8), (4, 9)]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":36681,"byte_end":36741,"line_start":229,"line_end":229,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":36746,"byte_end":36753,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":36758,"byte_end":36761,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ [`zip`]: trait.IndexedParallelIterator.html#method.zip","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":36766,"byte_end":36824,"line_start":232,"line_end":232,"column_start":5,"column_end":63}}]},{"kind":"Trait","id":{"krate":0,"index":4469},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":37434,"byte_end":37457,"line_start":249,"line_end":249,"column_start":11,"column_end":34},"name":"IntoParallelRefIterator","qualname":"::iter::IntoParallelRefIterator","value":"IntoParallelRefIterator<'data>","parent":null,"children":[{"krate":0,"index":4471},{"krate":0,"index":4472},{"krate":0,"index":4473}],"decl_id":null,"docs":" `IntoParallelRefIterator` implements the conversion to a\n [`ParallelIterator`], providing shared references to the data.","sig":null,"attributes":[{"value":"/ `IntoParallelRefIterator` implements the conversion to a","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":36870,"byte_end":36930,"line_start":236,"line_end":236,"column_start":1,"column_end":61}},{"value":"/ [`ParallelIterator`], providing shared references to the data.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":36931,"byte_end":36997,"line_start":237,"line_end":237,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":36998,"byte_end":37001,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ This is a parallel version of the `iter()` method","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":37002,"byte_end":37055,"line_start":239,"line_end":239,"column_start":1,"column_end":54}},{"value":"/ defined by various collections.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":37056,"byte_end":37091,"line_start":240,"line_end":240,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":37092,"byte_end":37095,"line_start":241,"line_end":241,"column_start":1,"column_end":4}},{"value":"/ This trait is automatically implemented","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":37096,"byte_end":37139,"line_start":242,"line_end":242,"column_start":1,"column_end":44}},{"value":"/ `for I where &I: IntoParallelIterator`. In most cases, users","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":37140,"byte_end":37204,"line_start":243,"line_end":243,"column_start":1,"column_end":65}},{"value":"/ will want to implement [`IntoParallelIterator`] rather than implement","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":37205,"byte_end":37278,"line_start":244,"line_end":244,"column_start":1,"column_end":74}},{"value":"/ this trait directly.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":37279,"byte_end":37303,"line_start":245,"line_end":245,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":37304,"byte_end":37307,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":37308,"byte_end":37361,"line_start":247,"line_end":247,"column_start":1,"column_end":54}},{"value":"/ [`IntoParallelIterator`]: trait.IntoParallelIterator.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":37362,"byte_end":37423,"line_start":248,"line_end":248,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":4471},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":37541,"byte_end":37545,"line_start":251,"line_end":251,"column_start":10,"column_end":14},"name":"Iter","qualname":"::iter::IntoParallelRefIterator::Iter","value":"type Iter: ParallelIterator<Item = Self::Item>;","parent":{"krate":0,"index":4469},"children":[],"decl_id":null,"docs":" The type of the parallel iterator that will be returned.\n","sig":null,"attributes":[{"value":"/ The type of the parallel iterator that will be returned.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":37471,"byte_end":37531,"line_start":250,"line_end":250,"column_start":5,"column_end":65}}]},{"kind":"Type","id":{"krate":0,"index":4472},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":37721,"byte_end":37725,"line_start":255,"line_end":255,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::IntoParallelRefIterator::Item","value":"type Item: Send + 'data;","parent":{"krate":0,"index":4469},"children":[],"decl_id":null,"docs":" The type of item that the parallel iterator will produce.\n This will typically be an `&'data T` reference type.\n","sig":null,"attributes":[{"value":"/ The type of item that the parallel iterator will produce.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":37589,"byte_end":37650,"line_start":253,"line_end":253,"column_start":5,"column_end":66}},{"value":"/ This will typically be an `&'data T` reference type.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":37655,"byte_end":37711,"line_start":254,"line_end":254,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":4473},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":38215,"byte_end":38223,"line_start":272,"line_end":272,"column_start":8,"column_end":16},"name":"par_iter","qualname":"::iter::IntoParallelRefIterator::par_iter","value":"pub fn par_iter(&'data Self) -> Self::Iter","parent":{"krate":0,"index":4469},"children":[],"decl_id":null,"docs":" Converts `self` into a parallel iterator.","sig":null,"attributes":[{"value":"/ Converts `self` into a parallel iterator.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":37746,"byte_end":37791,"line_start":257,"line_end":257,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":37796,"byte_end":37799,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":37804,"byte_end":37818,"line_start":259,"line_end":259,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":37823,"byte_end":37826,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":37831,"byte_end":37838,"line_start":261,"line_end":261,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":37843,"byte_end":37869,"line_start":262,"line_end":262,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":37874,"byte_end":37877,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ let v: Vec<_> = (0..100).collect();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":37882,"byte_end":37921,"line_start":264,"line_end":264,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(v.par_iter().sum::<i32>(), 100 * 99 / 2);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":37926,"byte_end":37982,"line_start":265,"line_end":265,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":37987,"byte_end":37990,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ // `v.par_iter()` is shorthand for `(&v).into_par_iter()`,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":37995,"byte_end":38057,"line_start":267,"line_end":267,"column_start":5,"column_end":67}},{"value":"/ // producing the exact same references.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":38062,"byte_end":38105,"line_start":268,"line_end":268,"column_start":5,"column_end":48}},{"value":"/ assert!(v.par_iter().zip(&v)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":38110,"byte_end":38142,"line_start":269,"line_end":269,"column_start":5,"column_end":37}},{"value":"/          .all(|(a, b)| std::ptr::eq(a, b)));","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":38147,"byte_end":38195,"line_start":270,"line_end":270,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":38200,"byte_end":38207,"line_start":271,"line_end":271,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":4480},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":39143,"byte_end":39169,"line_start":300,"line_end":300,"column_start":11,"column_end":37},"name":"IntoParallelRefMutIterator","qualname":"::iter::IntoParallelRefMutIterator","value":"IntoParallelRefMutIterator<'data>","parent":null,"children":[{"krate":0,"index":4482},{"krate":0,"index":4483},{"krate":0,"index":4484}],"decl_id":null,"docs":" `IntoParallelRefMutIterator` implements the conversion to a\n [`ParallelIterator`], providing mutable references to the data.","sig":null,"attributes":[{"value":"/ `IntoParallelRefMutIterator` implements the conversion to a","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":38567,"byte_end":38630,"line_start":287,"line_end":287,"column_start":1,"column_end":64}},{"value":"/ [`ParallelIterator`], providing mutable references to the data.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":38631,"byte_end":38698,"line_start":288,"line_end":288,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":38699,"byte_end":38702,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ This is a parallel version of the `iter_mut()` method","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":38703,"byte_end":38760,"line_start":290,"line_end":290,"column_start":1,"column_end":58}},{"value":"/ defined by various collections.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":38761,"byte_end":38796,"line_start":291,"line_end":291,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":38797,"byte_end":38800,"line_start":292,"line_end":292,"column_start":1,"column_end":4}},{"value":"/ This trait is automatically implemented","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":38801,"byte_end":38844,"line_start":293,"line_end":293,"column_start":1,"column_end":44}},{"value":"/ `for I where &mut I: IntoParallelIterator`. In most cases, users","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":38845,"byte_end":38913,"line_start":294,"line_end":294,"column_start":1,"column_end":69}},{"value":"/ will want to implement [`IntoParallelIterator`] rather than implement","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":38914,"byte_end":38987,"line_start":295,"line_end":295,"column_start":1,"column_end":74}},{"value":"/ this trait directly.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":38988,"byte_end":39012,"line_start":296,"line_end":296,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":39013,"byte_end":39016,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":39017,"byte_end":39070,"line_start":298,"line_end":298,"column_start":1,"column_end":54}},{"value":"/ [`IntoParallelIterator`]: trait.IntoParallelIterator.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":39071,"byte_end":39132,"line_start":299,"line_end":299,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":4482},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":39239,"byte_end":39243,"line_start":302,"line_end":302,"column_start":10,"column_end":14},"name":"Iter","qualname":"::iter::IntoParallelRefMutIterator::Iter","value":"type Iter: ParallelIterator<Item = Self::Item>;","parent":{"krate":0,"index":4480},"children":[],"decl_id":null,"docs":" The type of iterator that will be created.\n","sig":null,"attributes":[{"value":"/ The type of iterator that will be created.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":39183,"byte_end":39229,"line_start":301,"line_end":301,"column_start":5,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":4483},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":39395,"byte_end":39399,"line_start":306,"line_end":306,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::IntoParallelRefMutIterator::Item","value":"type Item: Send + 'data;","parent":{"krate":0,"index":4480},"children":[],"decl_id":null,"docs":" The type of item that will be produced; this is typically an\n `&'data mut T` reference.\n","sig":null,"attributes":[{"value":"/ The type of item that will be produced; this is typically an","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":39287,"byte_end":39351,"line_start":304,"line_end":304,"column_start":5,"column_end":69}},{"value":"/ `&'data mut T` reference.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":39356,"byte_end":39385,"line_start":305,"line_end":305,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":4484},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":39713,"byte_end":39725,"line_start":319,"line_end":319,"column_start":8,"column_end":20},"name":"par_iter_mut","qualname":"::iter::IntoParallelRefMutIterator::par_iter_mut","value":"pub fn par_iter_mut(&'data mut Self) -> Self::Iter","parent":{"krate":0,"index":4480},"children":[],"decl_id":null,"docs":" Creates the parallel iterator from `self`.","sig":null,"attributes":[{"value":"/ Creates the parallel iterator from `self`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":39420,"byte_end":39466,"line_start":308,"line_end":308,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":39471,"byte_end":39474,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":39479,"byte_end":39493,"line_start":310,"line_end":310,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":39498,"byte_end":39501,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":39506,"byte_end":39513,"line_start":312,"line_end":312,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":39518,"byte_end":39544,"line_start":313,"line_end":313,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":39549,"byte_end":39552,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ let mut v = vec![0usize; 5];","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":39557,"byte_end":39589,"line_start":315,"line_end":315,"column_start":5,"column_end":37}},{"value":"/ v.par_iter_mut().enumerate().for_each(|(i, x)| *x = i);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":39594,"byte_end":39653,"line_start":316,"line_end":316,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(v, [0, 1, 2, 3, 4]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":39658,"byte_end":39693,"line_start":317,"line_end":317,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":39698,"byte_end":39705,"line_start":318,"line_end":318,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":4491},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":40702,"byte_end":40718,"line_start":348,"line_end":348,"column_start":11,"column_end":27},"name":"ParallelIterator","qualname":"::iter::ParallelIterator","value":"ParallelIterator: Sized + Send","parent":null,"children":[{"krate":0,"index":4492},{"krate":0,"index":4493},{"krate":0,"index":4495},{"krate":0,"index":4498},{"krate":0,"index":4502},{"krate":0,"index":4507},{"krate":0,"index":4513},{"krate":0,"index":4520},{"krate":0,"index":4523},{"krate":0,"index":4526},{"krate":0,"index":4530},{"krate":0,"index":4535},{"krate":0,"index":4538},{"krate":0,"index":4541},{"krate":0,"index":4543},{"krate":0,"index":4545},{"krate":0,"index":4547},{"krate":0,"index":4550},{"krate":0,"index":4553},{"krate":0,"index":4556},{"krate":0,"index":4557},{"krate":0,"index":4558},{"krate":0,"index":4561},{"krate":0,"index":4573},{"krate":0,"index":4577},{"krate":0,"index":4580},{"krate":0,"index":4584},{"krate":0,"index":4587},{"krate":0,"index":4592},{"krate":0,"index":4596},{"krate":0,"index":4598},{"krate":0,"index":4600},{"krate":0,"index":4601},{"krate":0,"index":4608},{"krate":0,"index":4620},{"krate":0,"index":4621},{"krate":0,"index":4628},{"krate":0,"index":4640},{"krate":0,"index":4642},{"krate":0,"index":4644},{"krate":0,"index":4646},{"krate":0,"index":4648},{"krate":0,"index":4653},{"krate":0,"index":4658},{"krate":0,"index":4663},{"krate":0,"index":4665},{"krate":0,"index":4667},{"krate":0,"index":4670},{"krate":0,"index":4672},{"krate":0,"index":4673},{"krate":0,"index":4675},{"krate":0,"index":4680},{"krate":0,"index":4684},{"krate":0,"index":4690},{"krate":0,"index":4691},{"krate":0,"index":4693}],"decl_id":null,"docs":" Parallel version of the standard iterator trait.","sig":null,"attributes":[{"value":"/ Parallel version of the standard iterator trait.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":40096,"byte_end":40148,"line_start":334,"line_end":334,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":40149,"byte_end":40152,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ The combinators on this trait are available on **all** parallel","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":40153,"byte_end":40220,"line_start":336,"line_end":336,"column_start":1,"column_end":68}},{"value":"/ iterators.  Additional methods can be found on the","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":40221,"byte_end":40275,"line_start":337,"line_end":337,"column_start":1,"column_end":55}},{"value":"/ [`IndexedParallelIterator`] trait: those methods are only","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":40276,"byte_end":40337,"line_start":338,"line_end":338,"column_start":1,"column_end":62}},{"value":"/ available for parallel iterators where the number of items is","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":40338,"byte_end":40403,"line_start":339,"line_end":339,"column_start":1,"column_end":66}},{"value":"/ known in advance (so, e.g., after invoking `filter`, those methods","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":40404,"byte_end":40474,"line_start":340,"line_end":340,"column_start":1,"column_end":71}},{"value":"/ become unavailable).","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":40475,"byte_end":40499,"line_start":341,"line_end":341,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":40500,"byte_end":40503,"line_start":342,"line_end":342,"column_start":1,"column_end":4}},{"value":"/ For examples of using parallel iterators, see [the docs on the","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":40504,"byte_end":40570,"line_start":343,"line_end":343,"column_start":1,"column_end":67}},{"value":"/ `iter` module][iter].","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":40571,"byte_end":40596,"line_start":344,"line_end":344,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":40597,"byte_end":40600,"line_start":345,"line_end":345,"column_start":1,"column_end":4}},{"value":"/ [iter]: index.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":40601,"byte_end":40623,"line_start":346,"line_end":346,"column_start":1,"column_end":23}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":40624,"byte_end":40691,"line_start":347,"line_end":347,"column_start":1,"column_end":68}}]},{"kind":"Type","id":{"krate":0,"index":4492},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":40984,"byte_end":40988,"line_start":354,"line_end":354,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::ParallelIterator::Item","value":"type Item: Send;","parent":{"krate":0,"index":4491},"children":[],"decl_id":null,"docs":" The type of item that this parallel iterator produces.\n For example, if you use the [`for_each`] method, this is the type of\n item that your closure will be invoked with.","sig":null,"attributes":[{"value":"/ The type of item that this parallel iterator produces.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":40739,"byte_end":40797,"line_start":349,"line_end":349,"column_start":5,"column_end":63}},{"value":"/ For example, if you use the [`for_each`] method, this is the type of","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":40802,"byte_end":40874,"line_start":350,"line_end":350,"column_start":5,"column_end":77}},{"value":"/ item that your closure will be invoked with.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":40879,"byte_end":40927,"line_start":351,"line_end":351,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":40932,"byte_end":40935,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ [`for_each`]: #method.for_each","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":40940,"byte_end":40974,"line_start":353,"line_end":353,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":4493},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":41244,"byte_end":41252,"line_start":365,"line_end":365,"column_start":8,"column_end":16},"name":"for_each","qualname":"::iter::ParallelIterator::for_each","value":"pub fn for_each<OP>(Self, OP) where OP: Fn(Self::Item) -> () + Sync + Send","parent":{"krate":0,"index":4491},"children":[],"decl_id":null,"docs":" Executes `OP` on each item produced by the iterator, in parallel.","sig":null,"attributes":[{"value":"/ Executes `OP` on each item produced by the iterator, in parallel.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":41001,"byte_end":41070,"line_start":356,"line_end":356,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":41075,"byte_end":41078,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":41083,"byte_end":41097,"line_start":358,"line_end":358,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":41102,"byte_end":41105,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":41110,"byte_end":41117,"line_start":360,"line_end":360,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":41122,"byte_end":41148,"line_start":361,"line_end":361,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":41153,"byte_end":41156,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ (0..100).into_par_iter().for_each(|x| println!(\"{:?}\", x));","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":41161,"byte_end":41224,"line_start":363,"line_end":363,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":41229,"byte_end":41236,"line_start":364,"line_end":364,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4495},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":42087,"byte_end":42100,"line_start":395,"line_end":395,"column_start":8,"column_end":21},"name":"for_each_with","qualname":"::iter::ParallelIterator::for_each_with","value":"pub fn for_each_with<OP, T>(Self, T, OP) where OP: Fn(&mut T, Self::Item) ->\n() + Sync + Send, T: Send + Clone","parent":{"krate":0,"index":4491},"children":[],"decl_id":null,"docs":" Executes `OP` on the given `init` value with each item produced by\n the iterator, in parallel.","sig":null,"attributes":[{"value":"/ Executes `OP` on the given `init` value with each item produced by","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":41378,"byte_end":41448,"line_start":372,"line_end":372,"column_start":5,"column_end":75}},{"value":"/ the iterator, in parallel.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":41453,"byte_end":41483,"line_start":373,"line_end":373,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":41488,"byte_end":41491,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ The `init` value will be cloned only as needed to be paired with","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":41496,"byte_end":41564,"line_start":375,"line_end":375,"column_start":5,"column_end":73}},{"value":"/ the group of items in each rayon job.  It does not require the type","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":41569,"byte_end":41640,"line_start":376,"line_end":376,"column_start":5,"column_end":76}},{"value":"/ to be `Sync`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":41645,"byte_end":41662,"line_start":377,"line_end":377,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":41667,"byte_end":41670,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":41675,"byte_end":41689,"line_start":379,"line_end":379,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":41694,"byte_end":41697,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":41702,"byte_end":41709,"line_start":381,"line_end":381,"column_start":5,"column_end":12}},{"value":"/ use std::sync::mpsc::channel;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":41714,"byte_end":41747,"line_start":382,"line_end":382,"column_start":5,"column_end":38}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":41752,"byte_end":41778,"line_start":383,"line_end":383,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":41783,"byte_end":41786,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ let (sender, receiver) = channel();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":41791,"byte_end":41830,"line_start":385,"line_end":385,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":41835,"byte_end":41838,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ (0..5).into_par_iter().for_each_with(sender, |s, x| s.send(x).unwrap());","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":41843,"byte_end":41919,"line_start":387,"line_end":387,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":41924,"byte_end":41927,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ let mut res: Vec<_> = receiver.iter().collect();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":41932,"byte_end":41984,"line_start":389,"line_end":389,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":41989,"byte_end":41992,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ res.sort();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":41997,"byte_end":42012,"line_start":391,"line_end":391,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":42017,"byte_end":42020,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&res[..], &[0, 1, 2, 3, 4])","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":42025,"byte_end":42067,"line_start":393,"line_end":393,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":42072,"byte_end":42079,"line_start":394,"line_end":394,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4498},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":43068,"byte_end":43081,"line_start":429,"line_end":429,"column_start":8,"column_end":21},"name":"for_each_init","qualname":"::iter::ParallelIterator::for_each_init","value":"pub fn for_each_init<OP, INIT, T>(Self, INIT, OP) where\nOP: Fn(&mut T, Self::Item) -> () + Sync + Send, INIT: Fn() -> T + Sync + Send","parent":{"krate":0,"index":4491},"children":[],"decl_id":null,"docs":" Executes `OP` on a value returned by `init` with each item produced by\n the iterator, in parallel.","sig":null,"attributes":[{"value":"/ Executes `OP` on a value returned by `init` with each item produced by","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":42275,"byte_end":42349,"line_start":403,"line_end":403,"column_start":5,"column_end":79}},{"value":"/ the iterator, in parallel.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":42354,"byte_end":42384,"line_start":404,"line_end":404,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":42389,"byte_end":42392,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ The `init` function will be called only as needed for a value to be","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":42397,"byte_end":42468,"line_start":406,"line_end":406,"column_start":5,"column_end":76}},{"value":"/ paired with the group of items in each rayon job.  There is no","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":42473,"byte_end":42539,"line_start":407,"line_end":407,"column_start":5,"column_end":71}},{"value":"/ constraint on that returned type at all!","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":42544,"byte_end":42588,"line_start":408,"line_end":408,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":42593,"byte_end":42596,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":42601,"byte_end":42615,"line_start":410,"line_end":410,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":42620,"byte_end":42623,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":42628,"byte_end":42635,"line_start":412,"line_end":412,"column_start":5,"column_end":12}},{"value":"/ use rand::Rng;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":42640,"byte_end":42658,"line_start":413,"line_end":413,"column_start":5,"column_end":23}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":42663,"byte_end":42689,"line_start":414,"line_end":414,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":42694,"byte_end":42697,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ let mut v = vec![0u8; 1_000_000];","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":42702,"byte_end":42739,"line_start":416,"line_end":416,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":42744,"byte_end":42747,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ v.par_chunks_mut(1000)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":42752,"byte_end":42778,"line_start":418,"line_end":418,"column_start":5,"column_end":31}},{"value":"/     .for_each_init(","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":42783,"byte_end":42806,"line_start":419,"line_end":419,"column_start":5,"column_end":28}},{"value":"/         || rand::thread_rng(),","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":42811,"byte_end":42845,"line_start":420,"line_end":420,"column_start":5,"column_end":39}},{"value":"/         |rng, chunk| rng.fill(chunk),","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":42850,"byte_end":42891,"line_start":421,"line_end":421,"column_start":5,"column_end":46}},{"value":"/     );","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":42896,"byte_end":42906,"line_start":422,"line_end":422,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":42911,"byte_end":42914,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ // There's a remote chance that this will fail...","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":42919,"byte_end":42972,"line_start":424,"line_end":424,"column_start":5,"column_end":58}},{"value":"/ for i in 0u8..=255 {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":42977,"byte_end":43001,"line_start":425,"line_end":425,"column_start":5,"column_end":29}},{"value":"/     assert!(v.contains(&i));","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":43006,"byte_end":43038,"line_start":426,"line_end":426,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":43043,"byte_end":43048,"line_start":427,"line_end":427,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":43053,"byte_end":43060,"line_start":428,"line_end":428,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4502},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":44184,"byte_end":44196,"line_start":457,"line_end":457,"column_start":8,"column_end":20},"name":"try_for_each","qualname":"::iter::ParallelIterator::try_for_each","value":"pub fn try_for_each<OP, R>(Self, OP) -> R where OP: Fn(Self::Item) -> R +\nSync + Send, R: Try<Ok = ()> + Send","parent":{"krate":0,"index":4491},"children":[],"decl_id":null,"docs":" Executes a fallible `OP` on each item produced by the iterator, in parallel.","sig":null,"attributes":[{"value":"/ Executes a fallible `OP` on each item produced by the iterator, in parallel.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":43279,"byte_end":43359,"line_start":437,"line_end":437,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":43364,"byte_end":43367,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ If the `OP` returns `Result::Err` or `Option::None`, we will attempt to","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":43372,"byte_end":43447,"line_start":439,"line_end":439,"column_start":5,"column_end":80}},{"value":"/ stop processing the rest of the items in the iterator as soon as","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":43452,"byte_end":43520,"line_start":440,"line_end":440,"column_start":5,"column_end":73}},{"value":"/ possible, and we will return that terminating value.  Otherwise, we will","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":43525,"byte_end":43601,"line_start":441,"line_end":441,"column_start":5,"column_end":81}},{"value":"/ return an empty `Result::Ok(())` or `Option::Some(())`.  If there are","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":43606,"byte_end":43679,"line_start":442,"line_end":442,"column_start":5,"column_end":78}},{"value":"/ multiple errors in parallel, it is not specified which will be returned.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":43684,"byte_end":43760,"line_start":443,"line_end":443,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":43765,"byte_end":43768,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":43773,"byte_end":43787,"line_start":445,"line_end":445,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":43792,"byte_end":43795,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":43800,"byte_end":43807,"line_start":447,"line_end":447,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":43812,"byte_end":43838,"line_start":448,"line_end":448,"column_start":5,"column_end":31}},{"value":"/ use std::io::{self, Write};","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":43843,"byte_end":43874,"line_start":449,"line_end":449,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":43879,"byte_end":43882,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ // This will stop iteration early if there's any write error, like","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":43887,"byte_end":43957,"line_start":451,"line_end":451,"column_start":5,"column_end":75}},{"value":"/ // having piped output get closed on the other end.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":43962,"byte_end":44017,"line_start":452,"line_end":452,"column_start":5,"column_end":60}},{"value":"/ (0..100).into_par_iter()","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":44022,"byte_end":44050,"line_start":453,"line_end":453,"column_start":5,"column_end":33}},{"value":"/     .try_for_each(|x| writeln!(io::stdout(), \"{:?}\", x))","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":44055,"byte_end":44115,"line_start":454,"line_end":454,"column_start":5,"column_end":65}},{"value":"/     .expect(\"expected no write errors\");","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":44120,"byte_end":44164,"line_start":455,"line_end":455,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":44169,"byte_end":44176,"line_start":456,"line_end":456,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4507},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":45305,"byte_end":45322,"line_start":496,"line_end":496,"column_start":8,"column_end":25},"name":"try_for_each_with","qualname":"::iter::ParallelIterator::try_for_each_with","value":"pub fn try_for_each_with<OP, T, R>(Self, T, OP) -> R where\nOP: Fn(&mut T, Self::Item) -> R + Sync + Send, T: Send + Clone, R: Try<Ok =\n()> + Send","parent":{"krate":0,"index":4491},"children":[],"decl_id":null,"docs":" Executes a fallible `OP` on the given `init` value with each item\n produced by the iterator, in parallel.","sig":null,"attributes":[{"value":"/ Executes a fallible `OP` on the given `init` value with each item","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":44470,"byte_end":44539,"line_start":469,"line_end":469,"column_start":5,"column_end":74}},{"value":"/ produced by the iterator, in parallel.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":44544,"byte_end":44586,"line_start":470,"line_end":470,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":44591,"byte_end":44594,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ This combines the `init` semantics of [`for_each_with()`] and the","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":44599,"byte_end":44668,"line_start":472,"line_end":472,"column_start":5,"column_end":74}},{"value":"/ failure semantics of [`try_for_each()`].","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":44673,"byte_end":44717,"line_start":473,"line_end":473,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":44722,"byte_end":44725,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ [`for_each_with()`]: #method.for_each_with","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":44730,"byte_end":44776,"line_start":475,"line_end":475,"column_start":5,"column_end":51}},{"value":"/ [`try_for_each()`]: #method.try_for_each","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":44781,"byte_end":44825,"line_start":476,"line_end":476,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":44830,"byte_end":44833,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":44838,"byte_end":44852,"line_start":478,"line_end":478,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":44857,"byte_end":44860,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":44865,"byte_end":44872,"line_start":480,"line_end":480,"column_start":5,"column_end":12}},{"value":"/ use std::sync::mpsc::channel;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":44877,"byte_end":44910,"line_start":481,"line_end":481,"column_start":5,"column_end":38}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":44915,"byte_end":44941,"line_start":482,"line_end":482,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":44946,"byte_end":44949,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ let (sender, receiver) = channel();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":44954,"byte_end":44993,"line_start":484,"line_end":484,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":44998,"byte_end":45001,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ (0..5).into_par_iter()","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":45006,"byte_end":45032,"line_start":486,"line_end":486,"column_start":5,"column_end":31}},{"value":"/     .try_for_each_with(sender, |s, x| s.send(x))","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":45037,"byte_end":45089,"line_start":487,"line_end":487,"column_start":5,"column_end":57}},{"value":"/     .expect(\"expected no send errors\");","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":45094,"byte_end":45137,"line_start":488,"line_end":488,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":45142,"byte_end":45145,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ let mut res: Vec<_> = receiver.iter().collect();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":45150,"byte_end":45202,"line_start":490,"line_end":490,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":45207,"byte_end":45210,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ res.sort();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":45215,"byte_end":45230,"line_start":492,"line_end":492,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":45235,"byte_end":45238,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&res[..], &[0, 1, 2, 3, 4])","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":45243,"byte_end":45285,"line_start":494,"line_end":494,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":45290,"byte_end":45297,"line_start":495,"line_end":495,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4513},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":46546,"byte_end":46563,"line_start":538,"line_end":538,"column_start":8,"column_end":25},"name":"try_for_each_init","qualname":"::iter::ParallelIterator::try_for_each_init","value":"pub fn try_for_each_init<OP, INIT, T, R>(Self, INIT, OP) -> R where\nOP: Fn(&mut T, Self::Item) -> R + Sync + Send, INIT: Fn() -> T + Sync + Send,\nR: Try<Ok = ()> + Send","parent":{"krate":0,"index":4491},"children":[],"decl_id":null,"docs":" Executes a fallible `OP` on a value returned by `init` with each item\n produced by the iterator, in parallel.","sig":null,"attributes":[{"value":"/ Executes a fallible `OP` on a value returned by `init` with each item","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":45652,"byte_end":45725,"line_start":509,"line_end":509,"column_start":5,"column_end":78}},{"value":"/ produced by the iterator, in parallel.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":45730,"byte_end":45772,"line_start":510,"line_end":510,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":45777,"byte_end":45780,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ This combines the `init` semantics of [`for_each_init()`] and the","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":45785,"byte_end":45854,"line_start":512,"line_end":512,"column_start":5,"column_end":74}},{"value":"/ failure semantics of [`try_for_each()`].","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":45859,"byte_end":45903,"line_start":513,"line_end":513,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":45908,"byte_end":45911,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ [`for_each_init()`]: #method.for_each_init","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":45916,"byte_end":45962,"line_start":515,"line_end":515,"column_start":5,"column_end":51}},{"value":"/ [`try_for_each()`]: #method.try_for_each","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":45967,"byte_end":46011,"line_start":516,"line_end":516,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":46016,"byte_end":46019,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":46024,"byte_end":46038,"line_start":518,"line_end":518,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":46043,"byte_end":46046,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":46051,"byte_end":46058,"line_start":520,"line_end":520,"column_start":5,"column_end":12}},{"value":"/ use rand::Rng;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":46063,"byte_end":46081,"line_start":521,"line_end":521,"column_start":5,"column_end":23}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":46086,"byte_end":46112,"line_start":522,"line_end":522,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":46117,"byte_end":46120,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ let mut v = vec![0u8; 1_000_000];","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":46125,"byte_end":46162,"line_start":524,"line_end":524,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":46167,"byte_end":46170,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ v.par_chunks_mut(1000)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":46175,"byte_end":46201,"line_start":526,"line_end":526,"column_start":5,"column_end":31}},{"value":"/     .try_for_each_init(","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":46206,"byte_end":46233,"line_start":527,"line_end":527,"column_start":5,"column_end":32}},{"value":"/         || rand::thread_rng(),","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":46238,"byte_end":46272,"line_start":528,"line_end":528,"column_start":5,"column_end":39}},{"value":"/         |rng, chunk| rng.try_fill(chunk),","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":46277,"byte_end":46322,"line_start":529,"line_end":529,"column_start":5,"column_end":50}},{"value":"/     )","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":46327,"byte_end":46336,"line_start":530,"line_end":530,"column_start":5,"column_end":14}},{"value":"/     .expect(\"expected no rand errors\");","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":46341,"byte_end":46384,"line_start":531,"line_end":531,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":46389,"byte_end":46392,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ // There's a remote chance that this will fail...","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":46397,"byte_end":46450,"line_start":533,"line_end":533,"column_start":5,"column_end":58}},{"value":"/ for i in 0u8..=255 {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":46455,"byte_end":46479,"line_start":534,"line_end":534,"column_start":5,"column_end":29}},{"value":"/     assert!(v.contains(&i));","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":46484,"byte_end":46516,"line_start":535,"line_end":535,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":46521,"byte_end":46526,"line_start":536,"line_end":536,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":46531,"byte_end":46538,"line_start":537,"line_end":537,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4520},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":47173,"byte_end":47178,"line_start":562,"line_end":562,"column_start":8,"column_end":13},"name":"count","qualname":"::iter::ParallelIterator::count","value":"pub fn count(Self) -> usize","parent":{"krate":0,"index":4491},"children":[],"decl_id":null,"docs":" Counts the number of items in this parallel iterator.","sig":null,"attributes":[{"value":"/ Counts the number of items in this parallel iterator.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":46916,"byte_end":46973,"line_start":551,"line_end":551,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":46978,"byte_end":46981,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":46986,"byte_end":47000,"line_start":553,"line_end":553,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":47005,"byte_end":47008,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":47013,"byte_end":47020,"line_start":555,"line_end":555,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":47025,"byte_end":47051,"line_start":556,"line_end":556,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":47056,"byte_end":47059,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ let count = (0..100).into_par_iter().count();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":47064,"byte_end":47113,"line_start":558,"line_end":558,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":47118,"byte_end":47121,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(count, 100);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":47126,"byte_end":47153,"line_start":560,"line_end":560,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":47158,"byte_end":47165,"line_start":561,"line_end":561,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4523},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":47687,"byte_end":47690,"line_start":584,"line_end":584,"column_start":8,"column_end":11},"name":"map","qualname":"::iter::ParallelIterator::map","value":"pub fn map<F, R>(Self, F) -> Map<Self, F> where F: Fn(Self::Item) -> R +\nSync + Send, R: Send","parent":{"krate":0,"index":4491},"children":[],"decl_id":null,"docs":" Applies `map_op` to each item of this iterator, producing a new\n iterator with the results.","sig":null,"attributes":[{"value":"/ Applies `map_op` to each item of this iterator, producing a new","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":47295,"byte_end":47362,"line_start":570,"line_end":570,"column_start":5,"column_end":72}},{"value":"/ iterator with the results.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":47367,"byte_end":47397,"line_start":571,"line_end":571,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":47402,"byte_end":47405,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":47410,"byte_end":47424,"line_start":573,"line_end":573,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":47429,"byte_end":47432,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":47437,"byte_end":47444,"line_start":575,"line_end":575,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":47449,"byte_end":47475,"line_start":576,"line_end":576,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":47480,"byte_end":47483,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ let mut par_iter = (0..5).into_par_iter().map(|x| x * 2);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":47488,"byte_end":47549,"line_start":578,"line_end":578,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":47554,"byte_end":47557,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ let doubles: Vec<_> = par_iter.collect();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":47562,"byte_end":47607,"line_start":580,"line_end":580,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":47612,"byte_end":47615,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&doubles[..], &[0, 2, 4, 6, 8]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":47620,"byte_end":47667,"line_start":582,"line_end":582,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":47672,"byte_end":47679,"line_start":583,"line_end":583,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4526},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":49033,"byte_end":49041,"line_start":621,"line_end":621,"column_start":8,"column_end":16},"name":"map_with","qualname":"::iter::ParallelIterator::map_with","value":"pub fn map_with<F, T, R>(Self, T, F) -> MapWith<Self, T, F> where\nF: Fn(&mut T, Self::Item) -> R + Sync + Send, T: Send + Clone, R: Send","parent":{"krate":0,"index":4491},"children":[],"decl_id":null,"docs":" Applies `map_op` to the given `init` value with each item of this\n iterator, producing a new iterator with the results.","sig":null,"attributes":[{"value":"/ Applies `map_op` to the given `init` value with each item of this","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":47851,"byte_end":47920,"line_start":592,"line_end":592,"column_start":5,"column_end":74}},{"value":"/ iterator, producing a new iterator with the results.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":47925,"byte_end":47981,"line_start":593,"line_end":593,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":47986,"byte_end":47989,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ The `init` value will be cloned only as needed to be paired with","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":47994,"byte_end":48062,"line_start":595,"line_end":595,"column_start":5,"column_end":73}},{"value":"/ the group of items in each rayon job.  It does not require the type","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":48067,"byte_end":48138,"line_start":596,"line_end":596,"column_start":5,"column_end":76}},{"value":"/ to be `Sync`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":48143,"byte_end":48160,"line_start":597,"line_end":597,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":48165,"byte_end":48168,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":48173,"byte_end":48187,"line_start":599,"line_end":599,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":48192,"byte_end":48195,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":48200,"byte_end":48207,"line_start":601,"line_end":601,"column_start":5,"column_end":12}},{"value":"/ use std::sync::mpsc::channel;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":48212,"byte_end":48245,"line_start":602,"line_end":602,"column_start":5,"column_end":38}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":48250,"byte_end":48276,"line_start":603,"line_end":603,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":48281,"byte_end":48284,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ let (sender, receiver) = channel();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":48289,"byte_end":48328,"line_start":605,"line_end":605,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":48333,"byte_end":48336,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ let a: Vec<_> = (0..5)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":48341,"byte_end":48367,"line_start":607,"line_end":607,"column_start":5,"column_end":31}},{"value":"/                 .into_par_iter()            // iterating over i32","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":48372,"byte_end":48441,"line_start":608,"line_end":608,"column_start":5,"column_end":74}},{"value":"/                 .map_with(sender, |s, x| {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":48446,"byte_end":48492,"line_start":609,"line_end":609,"column_start":5,"column_end":51}},{"value":"/                     s.send(x).unwrap();     // sending i32 values through the channel","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":48497,"byte_end":48586,"line_start":610,"line_end":610,"column_start":5,"column_end":94}},{"value":"/                     x                       // returning i32","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":48591,"byte_end":48655,"line_start":611,"line_end":611,"column_start":5,"column_end":69}},{"value":"/                 })","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":48660,"byte_end":48682,"line_start":612,"line_end":612,"column_start":5,"column_end":27}},{"value":"/                 .collect();                 // collecting the returned values into a vector","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":48687,"byte_end":48782,"line_start":613,"line_end":613,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":48787,"byte_end":48790,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ let mut b: Vec<_> = receiver.iter()         // iterating over the values in the channel","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":48795,"byte_end":48886,"line_start":615,"line_end":615,"column_start":5,"column_end":96}},{"value":"/                             .collect();     // and collecting them","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":48891,"byte_end":48961,"line_start":616,"line_end":616,"column_start":5,"column_end":75}},{"value":"/ b.sort();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":48966,"byte_end":48979,"line_start":617,"line_end":617,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":48984,"byte_end":48987,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a, b);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":48992,"byte_end":49013,"line_start":619,"line_end":619,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":49018,"byte_end":49025,"line_start":620,"line_end":620,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4530},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":50224,"byte_end":50232,"line_start":658,"line_end":658,"column_start":8,"column_end":16},"name":"map_init","qualname":"::iter::ParallelIterator::map_init","value":"pub fn map_init<F, INIT, T, R>(Self, INIT, F) -> MapInit<Self, INIT, F> where\nF: Fn(&mut T, Self::Item) -> R + Sync + Send, INIT: Fn() -> T + Sync + Send,\nR: Send","parent":{"krate":0,"index":4491},"children":[],"decl_id":null,"docs":" Applies `map_op` to a value returned by `init` with each item of this\n iterator, producing a new iterator with the results.","sig":null,"attributes":[{"value":"/ Applies `map_op` to a value returned by `init` with each item of this","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":49264,"byte_end":49337,"line_start":630,"line_end":630,"column_start":5,"column_end":78}},{"value":"/ iterator, producing a new iterator with the results.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":49342,"byte_end":49398,"line_start":631,"line_end":631,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":49403,"byte_end":49406,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ The `init` function will be called only as needed for a value to be","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":49411,"byte_end":49482,"line_start":633,"line_end":633,"column_start":5,"column_end":76}},{"value":"/ paired with the group of items in each rayon job.  There is no","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":49487,"byte_end":49553,"line_start":634,"line_end":634,"column_start":5,"column_end":71}},{"value":"/ constraint on that returned type at all!","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":49558,"byte_end":49602,"line_start":635,"line_end":635,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":49607,"byte_end":49610,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":49615,"byte_end":49629,"line_start":637,"line_end":637,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":49634,"byte_end":49637,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":49642,"byte_end":49649,"line_start":639,"line_end":639,"column_start":5,"column_end":12}},{"value":"/ use rand::Rng;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":49654,"byte_end":49672,"line_start":640,"line_end":640,"column_start":5,"column_end":23}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":49677,"byte_end":49703,"line_start":641,"line_end":641,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":49708,"byte_end":49711,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ let a: Vec<_> = (1i32..1_000_000)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":49716,"byte_end":49753,"line_start":643,"line_end":643,"column_start":5,"column_end":42}},{"value":"/     .into_par_iter()","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":49758,"byte_end":49782,"line_start":644,"line_end":644,"column_start":5,"column_end":29}},{"value":"/     .map_init(","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":49787,"byte_end":49805,"line_start":645,"line_end":645,"column_start":5,"column_end":23}},{"value":"/         || rand::thread_rng(),  // get the thread-local RNG","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":49810,"byte_end":49873,"line_start":646,"line_end":646,"column_start":5,"column_end":68}},{"value":"/         |rng, x| if rng.gen() { // randomly negate items","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":49878,"byte_end":49938,"line_start":647,"line_end":647,"column_start":5,"column_end":65}},{"value":"/             -x","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":49943,"byte_end":49961,"line_start":648,"line_end":648,"column_start":5,"column_end":23}},{"value":"/         } else {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":49966,"byte_end":49986,"line_start":649,"line_end":649,"column_start":5,"column_end":25}},{"value":"/             x","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":49991,"byte_end":50008,"line_start":650,"line_end":650,"column_start":5,"column_end":22}},{"value":"/         },","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":50013,"byte_end":50027,"line_start":651,"line_end":651,"column_start":5,"column_end":19}},{"value":"/     ).collect();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":50032,"byte_end":50052,"line_start":652,"line_end":652,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":50057,"byte_end":50060,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ // There's a remote chance that this will fail...","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":50065,"byte_end":50118,"line_start":654,"line_end":654,"column_start":5,"column_end":58}},{"value":"/ assert!(a.iter().any(|&x| x < 0));","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":50123,"byte_end":50161,"line_start":655,"line_end":655,"column_start":5,"column_end":43}},{"value":"/ assert!(a.iter().any(|&x| x > 0));","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":50166,"byte_end":50204,"line_start":656,"line_end":656,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":50209,"byte_end":50216,"line_start":657,"line_end":657,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4535},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":51163,"byte_end":51169,"line_start":688,"line_end":688,"column_start":8,"column_end":14},"name":"cloned","qualname":"::iter::ParallelIterator::cloned","value":"pub fn cloned<'a, T>(Self) -> Cloned<Self> where T: 'a + Clone + Send,\nSelf: ParallelIterator<Item = &'a T>","parent":{"krate":0,"index":4491},"children":[],"decl_id":null,"docs":" Creates an iterator which clones all of its elements.  This may be\n useful when you have an iterator over `&T`, but you need `T`, and\n that type implements `Clone`. See also [`copied()`].","sig":null,"attributes":[{"value":"/ Creates an iterator which clones all of its elements.  This may be","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":50481,"byte_end":50551,"line_start":667,"line_end":667,"column_start":5,"column_end":75}},{"value":"/ useful when you have an iterator over `&T`, but you need `T`, and","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":50556,"byte_end":50625,"line_start":668,"line_end":668,"column_start":5,"column_end":74}},{"value":"/ that type implements `Clone`. See also [`copied()`].","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":50630,"byte_end":50686,"line_start":669,"line_end":669,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":50691,"byte_end":50694,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ [`copied()`]: #method.copied","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":50699,"byte_end":50731,"line_start":671,"line_end":671,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":50736,"byte_end":50739,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":50744,"byte_end":50758,"line_start":673,"line_end":673,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":50763,"byte_end":50766,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":50771,"byte_end":50778,"line_start":675,"line_end":675,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":50783,"byte_end":50809,"line_start":676,"line_end":676,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":50814,"byte_end":50817,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":50822,"byte_end":50844,"line_start":678,"line_end":678,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":50849,"byte_end":50852,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ let v_cloned: Vec<_> = a.par_iter().cloned().collect();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":50857,"byte_end":50916,"line_start":680,"line_end":680,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":50921,"byte_end":50924,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ // cloned is the same as .map(|&x| x), for integers","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":50929,"byte_end":50984,"line_start":682,"line_end":682,"column_start":5,"column_end":60}},{"value":"/ let v_map: Vec<_> = a.par_iter().map(|&x| x).collect();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":50989,"byte_end":51048,"line_start":683,"line_end":683,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":51053,"byte_end":51056,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(v_cloned, vec![1, 2, 3]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":51061,"byte_end":51101,"line_start":685,"line_end":685,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(v_map, vec![1, 2, 3]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":51106,"byte_end":51143,"line_start":686,"line_end":686,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":51148,"byte_end":51155,"line_start":687,"line_end":687,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4538},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":52009,"byte_end":52015,"line_start":717,"line_end":717,"column_start":8,"column_end":14},"name":"copied","qualname":"::iter::ParallelIterator::copied","value":"pub fn copied<'a, T>(Self) -> Copied<Self> where T: 'a + Copy + Send,\nSelf: ParallelIterator<Item = &'a T>","parent":{"krate":0,"index":4491},"children":[],"decl_id":null,"docs":" Creates an iterator which copies all of its elements.  This may be\n useful when you have an iterator over `&T`, but you need `T`, and\n that type implements `Copy`. See also [`cloned()`].","sig":null,"attributes":[{"value":"/ Creates an iterator which copies all of its elements.  This may be","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":51328,"byte_end":51398,"line_start":696,"line_end":696,"column_start":5,"column_end":75}},{"value":"/ useful when you have an iterator over `&T`, but you need `T`, and","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":51403,"byte_end":51472,"line_start":697,"line_end":697,"column_start":5,"column_end":74}},{"value":"/ that type implements `Copy`. See also [`cloned()`].","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":51477,"byte_end":51532,"line_start":698,"line_end":698,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":51537,"byte_end":51540,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ [`cloned()`]: #method.cloned","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":51545,"byte_end":51577,"line_start":700,"line_end":700,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":51582,"byte_end":51585,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":51590,"byte_end":51604,"line_start":702,"line_end":702,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":51609,"byte_end":51612,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":51617,"byte_end":51624,"line_start":704,"line_end":704,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":51629,"byte_end":51655,"line_start":705,"line_end":705,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":51660,"byte_end":51663,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":51668,"byte_end":51690,"line_start":707,"line_end":707,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":51695,"byte_end":51698,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ let v_copied: Vec<_> = a.par_iter().copied().collect();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":51703,"byte_end":51762,"line_start":709,"line_end":709,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":51767,"byte_end":51770,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ // copied is the same as .map(|&x| x), for integers","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":51775,"byte_end":51830,"line_start":711,"line_end":711,"column_start":5,"column_end":60}},{"value":"/ let v_map: Vec<_> = a.par_iter().map(|&x| x).collect();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":51835,"byte_end":51894,"line_start":712,"line_end":712,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":51899,"byte_end":51902,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(v_copied, vec![1, 2, 3]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":51907,"byte_end":51947,"line_start":714,"line_end":714,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(v_map, vec![1, 2, 3]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":51952,"byte_end":51989,"line_start":715,"line_end":715,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":51994,"byte_end":52001,"line_start":716,"line_end":716,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4541},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":53209,"byte_end":53216,"line_start":754,"line_end":754,"column_start":8,"column_end":15},"name":"inspect","qualname":"::iter::ParallelIterator::inspect","value":"pub fn inspect<OP>(Self, OP) -> Inspect<Self, OP> where OP: Fn(&Self::Item) ->\n() + Sync + Send","parent":{"krate":0,"index":4491},"children":[],"decl_id":null,"docs":" Applies `inspect_op` to a reference to each item of this iterator,\n producing a new iterator passing through the original items.  This is\n often useful for debugging to see what's happening in iterator stages.","sig":null,"attributes":[{"value":"/ Applies `inspect_op` to a reference to each item of this iterator,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":52173,"byte_end":52243,"line_start":725,"line_end":725,"column_start":5,"column_end":75}},{"value":"/ producing a new iterator passing through the original items.  This is","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":52248,"byte_end":52321,"line_start":726,"line_end":726,"column_start":5,"column_end":78}},{"value":"/ often useful for debugging to see what's happening in iterator stages.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":52326,"byte_end":52400,"line_start":727,"line_end":727,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":52405,"byte_end":52408,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":52413,"byte_end":52427,"line_start":729,"line_end":729,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":52432,"byte_end":52435,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":52440,"byte_end":52447,"line_start":731,"line_end":731,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":52452,"byte_end":52478,"line_start":732,"line_end":732,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":52483,"byte_end":52486,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 4, 2, 3];","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":52491,"byte_end":52516,"line_start":734,"line_end":734,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":52521,"byte_end":52524,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ // this iterator sequence is complex.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":52529,"byte_end":52570,"line_start":736,"line_end":736,"column_start":5,"column_end":46}},{"value":"/ let sum = a.par_iter()","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":52575,"byte_end":52601,"line_start":737,"line_end":737,"column_start":5,"column_end":31}},{"value":"/             .cloned()","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":52606,"byte_end":52631,"line_start":738,"line_end":738,"column_start":5,"column_end":30}},{"value":"/             .filter(|&x| x % 2 == 0)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":52636,"byte_end":52676,"line_start":739,"line_end":739,"column_start":5,"column_end":45}},{"value":"/             .reduce(|| 0, |sum, i| sum + i);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":52681,"byte_end":52729,"line_start":740,"line_end":740,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":52734,"byte_end":52737,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ println!(\"{}\", sum);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":52742,"byte_end":52766,"line_start":742,"line_end":742,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":52771,"byte_end":52774,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ // let's add some inspect() calls to investigate what's happening","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":52779,"byte_end":52848,"line_start":744,"line_end":744,"column_start":5,"column_end":74}},{"value":"/ let sum = a.par_iter()","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":52853,"byte_end":52879,"line_start":745,"line_end":745,"column_start":5,"column_end":31}},{"value":"/             .cloned()","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":52884,"byte_end":52909,"line_start":746,"line_end":746,"column_start":5,"column_end":30}},{"value":"/             .inspect(|x| println!(\"about to filter: {}\", x))","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":52914,"byte_end":52978,"line_start":747,"line_end":747,"column_start":5,"column_end":69}},{"value":"/             .filter(|&x| x % 2 == 0)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":52983,"byte_end":53023,"line_start":748,"line_end":748,"column_start":5,"column_end":45}},{"value":"/             .inspect(|x| println!(\"made it through filter: {}\", x))","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":53028,"byte_end":53099,"line_start":749,"line_end":749,"column_start":5,"column_end":76}},{"value":"/             .reduce(|| 0, |sum, i| sum + i);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":53104,"byte_end":53152,"line_start":750,"line_end":750,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":53157,"byte_end":53160,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ println!(\"{}\", sum);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":53165,"byte_end":53189,"line_start":752,"line_end":752,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":53194,"byte_end":53201,"line_start":753,"line_end":753,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4543},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":53725,"byte_end":53731,"line_start":774,"line_end":774,"column_start":8,"column_end":14},"name":"update","qualname":"::iter::ParallelIterator::update","value":"pub fn update<F>(Self, F) -> Update<Self, F> where F: Fn(&mut Self::Item) ->\n() + Sync + Send","parent":{"krate":0,"index":4491},"children":[],"decl_id":null,"docs":" Mutates each item of this iterator before yielding it.","sig":null,"attributes":[{"value":"/ Mutates each item of this iterator before yielding it.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":53373,"byte_end":53431,"line_start":761,"line_end":761,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":53436,"byte_end":53439,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":53444,"byte_end":53458,"line_start":763,"line_end":763,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":53463,"byte_end":53466,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":53471,"byte_end":53478,"line_start":765,"line_end":765,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":53483,"byte_end":53509,"line_start":766,"line_end":766,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":53514,"byte_end":53517,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ let par_iter = (0..5).into_par_iter().update(|x| {*x *= 2;});","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":53522,"byte_end":53587,"line_start":768,"line_end":768,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":53592,"byte_end":53595,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ let doubles: Vec<_> = par_iter.collect();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":53600,"byte_end":53645,"line_start":770,"line_end":770,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":53650,"byte_end":53653,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&doubles[..], &[0, 2, 4, 6, 8]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":53658,"byte_end":53705,"line_start":772,"line_end":772,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":53710,"byte_end":53717,"line_start":773,"line_end":773,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4545},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":54326,"byte_end":54332,"line_start":795,"line_end":795,"column_start":8,"column_end":14},"name":"filter","qualname":"::iter::ParallelIterator::filter","value":"pub fn filter<P>(Self, P) -> Filter<Self, P> where P: Fn(&Self::Item) ->\nbool + Sync + Send","parent":{"krate":0,"index":4491},"children":[],"decl_id":null,"docs":" Applies `filter_op` to each item of this iterator, producing a new\n iterator with only the items that gave `true` results.","sig":null,"attributes":[{"value":"/ Applies `filter_op` to each item of this iterator, producing a new","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":53884,"byte_end":53954,"line_start":781,"line_end":781,"column_start":5,"column_end":75}},{"value":"/ iterator with only the items that gave `true` results.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":53959,"byte_end":54017,"line_start":782,"line_end":782,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":54022,"byte_end":54025,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":54030,"byte_end":54044,"line_start":784,"line_end":784,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":54049,"byte_end":54052,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":54057,"byte_end":54064,"line_start":786,"line_end":786,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":54069,"byte_end":54095,"line_start":787,"line_end":787,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":54100,"byte_end":54103,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ let mut par_iter = (0..10).into_par_iter().filter(|x| x % 2 == 0);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":54108,"byte_end":54178,"line_start":789,"line_end":789,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":54183,"byte_end":54186,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ let even_numbers: Vec<_> = par_iter.collect();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":54191,"byte_end":54241,"line_start":791,"line_end":791,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":54246,"byte_end":54249,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&even_numbers[..], &[0, 2, 4, 6, 8]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":54254,"byte_end":54306,"line_start":793,"line_end":793,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":54311,"byte_end":54318,"line_start":794,"line_end":794,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4547},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":55126,"byte_end":55136,"line_start":820,"line_end":820,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::iter::ParallelIterator::filter_map","value":"pub fn filter_map<P, R>(Self, P) -> FilterMap<Self, P> where P: Fn(Self::Item)\n-> Option<R> + Sync + Send, R: Send","parent":{"krate":0,"index":4491},"children":[],"decl_id":null,"docs":" Applies `filter_op` to each item of this iterator to get an `Option`,\n producing a new iterator with only the items from `Some` results.","sig":null,"attributes":[{"value":"/ Applies `filter_op` to each item of this iterator to get an `Option`,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":54489,"byte_end":54562,"line_start":802,"line_end":802,"column_start":5,"column_end":78}},{"value":"/ producing a new iterator with only the items from `Some` results.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":54567,"byte_end":54636,"line_start":803,"line_end":803,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":54641,"byte_end":54644,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":54649,"byte_end":54663,"line_start":805,"line_end":805,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":54668,"byte_end":54671,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":54676,"byte_end":54683,"line_start":807,"line_end":807,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":54688,"byte_end":54714,"line_start":808,"line_end":808,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":54719,"byte_end":54722,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ let mut par_iter = (0..10).into_par_iter()","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":54727,"byte_end":54773,"line_start":810,"line_end":810,"column_start":5,"column_end":51}},{"value":"/                         .filter_map(|x| {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":54778,"byte_end":54823,"line_start":811,"line_end":811,"column_start":5,"column_end":50}},{"value":"/                             if x % 2 == 0 { Some(x * 3) }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":54828,"byte_end":54889,"line_start":812,"line_end":812,"column_start":5,"column_end":66}},{"value":"/                             else { None }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":54894,"byte_end":54939,"line_start":813,"line_end":813,"column_start":5,"column_end":50}},{"value":"/                         });","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":54944,"byte_end":54975,"line_start":814,"line_end":814,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":54980,"byte_end":54983,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ let even_numbers: Vec<_> = par_iter.collect();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":54988,"byte_end":55038,"line_start":816,"line_end":816,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":55043,"byte_end":55046,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&even_numbers[..], &[0, 6, 12, 18, 24]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":55051,"byte_end":55106,"line_start":818,"line_end":818,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":55111,"byte_end":55118,"line_start":819,"line_end":819,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4550},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":55905,"byte_end":55913,"line_start":846,"line_end":846,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::iter::ParallelIterator::flat_map","value":"pub fn flat_map<F, PI>(Self, F) -> FlatMap<Self, F> where F: Fn(Self::Item) ->\nPI + Sync + Send, PI: IntoParallelIterator","parent":{"krate":0,"index":4491},"children":[],"decl_id":null,"docs":" Applies `map_op` to each item of this iterator to get nested parallel iterators,\n producing a new parallel iterator that flattens these back into one.","sig":null,"attributes":[{"value":"/ Applies `map_op` to each item of this iterator to get nested parallel iterators,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":55323,"byte_end":55407,"line_start":828,"line_end":828,"column_start":5,"column_end":89}},{"value":"/ producing a new parallel iterator that flattens these back into one.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":55412,"byte_end":55484,"line_start":829,"line_end":829,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":55489,"byte_end":55492,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ See also [`flat_map_iter`](#method.flat_map_iter).","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":55497,"byte_end":55551,"line_start":831,"line_end":831,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":55556,"byte_end":55559,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":55564,"byte_end":55578,"line_start":833,"line_end":833,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":55583,"byte_end":55586,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":55591,"byte_end":55598,"line_start":835,"line_end":835,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":55603,"byte_end":55629,"line_start":836,"line_end":836,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":55634,"byte_end":55637,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ let a = [[1, 2], [3, 4], [5, 6], [7, 8]];","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":55642,"byte_end":55687,"line_start":838,"line_end":838,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":55692,"byte_end":55695,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ let par_iter = a.par_iter().cloned().flat_map(|a| a.to_vec());","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":55700,"byte_end":55766,"line_start":840,"line_end":840,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":55771,"byte_end":55774,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ let vec: Vec<_> = par_iter.collect();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":55779,"byte_end":55820,"line_start":842,"line_end":842,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":55825,"byte_end":55828,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&vec[..], &[1, 2, 3, 4, 5, 6, 7, 8]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":55833,"byte_end":55885,"line_start":844,"line_end":844,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":55890,"byte_end":55897,"line_start":845,"line_end":845,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4553},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":57924,"byte_end":57937,"line_start":892,"line_end":892,"column_start":8,"column_end":21},"name":"flat_map_iter","qualname":"::iter::ParallelIterator::flat_map_iter","value":"pub fn flat_map_iter<F, SI>(Self, F) -> FlatMapIter<Self, F> where\nF: Fn(Self::Item) -> SI + Sync + Send, SI: IntoIterator, SI::Item: Send","parent":{"krate":0,"index":4491},"children":[],"decl_id":null,"docs":" Applies `map_op` to each item of this iterator to get nested serial iterators,\n producing a new parallel iterator that flattens these back into one.","sig":null,"attributes":[{"value":"/ Applies `map_op` to each item of this iterator to get nested serial iterators,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":56101,"byte_end":56183,"line_start":854,"line_end":854,"column_start":5,"column_end":87}},{"value":"/ producing a new parallel iterator that flattens these back into one.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":56188,"byte_end":56260,"line_start":855,"line_end":855,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":56265,"byte_end":56268,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ # `flat_map_iter` versus `flat_map`","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":56273,"byte_end":56312,"line_start":857,"line_end":857,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":56317,"byte_end":56320,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/ These two methods are similar but behave slightly differently. With [`flat_map`],","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":56325,"byte_end":56410,"line_start":859,"line_end":859,"column_start":5,"column_end":90}},{"value":"/ each of the nested iterators must be a parallel iterator, and they will be further","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":56415,"byte_end":56501,"line_start":860,"line_end":860,"column_start":5,"column_end":91}},{"value":"/ split up with nested parallelism. With `flat_map_iter`, each nested iterator is a","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":56506,"byte_end":56591,"line_start":861,"line_end":861,"column_start":5,"column_end":90}},{"value":"/ sequential `Iterator`, and we only parallelize _between_ them, while the items","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":56596,"byte_end":56678,"line_start":862,"line_end":862,"column_start":5,"column_end":87}},{"value":"/ produced by each nested iterator are processed sequentially.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":56683,"byte_end":56747,"line_start":863,"line_end":863,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":56752,"byte_end":56755,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ When choosing between these methods, consider whether nested parallelism suits the","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":56760,"byte_end":56846,"line_start":865,"line_end":865,"column_start":5,"column_end":91}},{"value":"/ potential iterators at hand. If there's little computation involved, or its length","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":56851,"byte_end":56937,"line_start":866,"line_end":866,"column_start":5,"column_end":91}},{"value":"/ is much less than the outer parallel iterator, then it may perform better to avoid","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":56942,"byte_end":57028,"line_start":867,"line_end":867,"column_start":5,"column_end":91}},{"value":"/ the overhead of parallelism, just flattening sequentially with `flat_map_iter`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":57033,"byte_end":57116,"line_start":868,"line_end":868,"column_start":5,"column_end":88}},{"value":"/ If there is a lot of computation, potentially outweighing the outer parallel","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":57121,"byte_end":57201,"line_start":869,"line_end":869,"column_start":5,"column_end":85}},{"value":"/ iterator, then the nested parallelism of `flat_map` may be worthwhile.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":57206,"byte_end":57280,"line_start":870,"line_end":870,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":57285,"byte_end":57288,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/ [`flat_map`]: #method.flat_map","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":57293,"byte_end":57327,"line_start":872,"line_end":872,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":57332,"byte_end":57335,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":57340,"byte_end":57354,"line_start":874,"line_end":874,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":57359,"byte_end":57362,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":57367,"byte_end":57374,"line_start":876,"line_end":876,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":57379,"byte_end":57405,"line_start":877,"line_end":877,"column_start":5,"column_end":31}},{"value":"/ use std::cell::RefCell;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":57410,"byte_end":57437,"line_start":878,"line_end":878,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":57442,"byte_end":57445,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ let a = [[1, 2], [3, 4], [5, 6], [7, 8]];","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":57450,"byte_end":57495,"line_start":880,"line_end":880,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":57500,"byte_end":57503,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ let par_iter = a.par_iter().flat_map_iter(|a| {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":57508,"byte_end":57559,"line_start":882,"line_end":882,"column_start":5,"column_end":56}},{"value":"/     // The serial iterator doesn't have to be thread-safe, just its items.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":57564,"byte_end":57642,"line_start":883,"line_end":883,"column_start":5,"column_end":83}},{"value":"/     let cell_iter = RefCell::new(a.iter().cloned());","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":57647,"byte_end":57703,"line_start":884,"line_end":884,"column_start":5,"column_end":61}},{"value":"/     std::iter::from_fn(move || cell_iter.borrow_mut().next())","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":57708,"byte_end":57773,"line_start":885,"line_end":885,"column_start":5,"column_end":70}},{"value":"/ });","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":57778,"byte_end":57785,"line_start":886,"line_end":886,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":57790,"byte_end":57793,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/ let vec: Vec<_> = par_iter.collect();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":57798,"byte_end":57839,"line_start":888,"line_end":888,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":57844,"byte_end":57847,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&vec[..], &[1, 2, 3, 4, 5, 6, 7, 8]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":57852,"byte_end":57904,"line_start":890,"line_end":890,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":57909,"byte_end":57916,"line_start":891,"line_end":891,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4556},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":58570,"byte_end":58577,"line_start":915,"line_end":915,"column_start":8,"column_end":15},"name":"flatten","qualname":"::iter::ParallelIterator::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Item: IntoParallelIterator","parent":{"krate":0,"index":4491},"children":[],"decl_id":null,"docs":" An adaptor that flattens parallel-iterable `Item`s into one large iterator.","sig":null,"attributes":[{"value":"/ An adaptor that flattens parallel-iterable `Item`s into one large iterator.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":58149,"byte_end":58228,"line_start":901,"line_end":901,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":58233,"byte_end":58236,"line_start":902,"line_end":902,"column_start":5,"column_end":8}},{"value":"/ See also [`flatten_iter`](#method.flatten_iter).","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":58241,"byte_end":58293,"line_start":903,"line_end":903,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":58298,"byte_end":58301,"line_start":904,"line_end":904,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":58306,"byte_end":58320,"line_start":905,"line_end":905,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":58325,"byte_end":58328,"line_start":906,"line_end":906,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":58333,"byte_end":58340,"line_start":907,"line_end":907,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":58345,"byte_end":58371,"line_start":908,"line_end":908,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":58376,"byte_end":58379,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ let x: Vec<Vec<_>> = vec![vec![1, 2], vec![3, 4]];","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":58384,"byte_end":58438,"line_start":910,"line_end":910,"column_start":5,"column_end":59}},{"value":"/ let y: Vec<_> = x.into_par_iter().flatten().collect();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":58443,"byte_end":58501,"line_start":911,"line_end":911,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":58506,"byte_end":58509,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(y, vec![1, 2, 3, 4]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":58514,"byte_end":58550,"line_start":913,"line_end":913,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":58555,"byte_end":58562,"line_start":914,"line_end":914,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4557},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":59296,"byte_end":59308,"line_start":938,"line_end":938,"column_start":8,"column_end":20},"name":"flatten_iter","qualname":"::iter::ParallelIterator::flatten_iter","value":"pub fn flatten_iter(Self) -> FlattenIter<Self> where Self::Item: IntoIterator,\n<Self::Item as IntoIterator>::Item: Send","parent":{"krate":0,"index":4491},"children":[],"decl_id":null,"docs":" An adaptor that flattens serial-iterable `Item`s into one large iterator.","sig":null,"attributes":[{"value":"/ An adaptor that flattens serial-iterable `Item`s into one large iterator.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":58697,"byte_end":58774,"line_start":922,"line_end":922,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":58779,"byte_end":58782,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ See also [`flatten`](#method.flatten) and the analagous comparison of","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":58787,"byte_end":58860,"line_start":924,"line_end":924,"column_start":5,"column_end":78}},{"value":"/ [`flat_map_iter` versus `flat_map`](#flat_map_iter-versus-flat_map).","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":58865,"byte_end":58937,"line_start":925,"line_end":925,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":58942,"byte_end":58945,"line_start":926,"line_end":926,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":58950,"byte_end":58964,"line_start":927,"line_end":927,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":58969,"byte_end":58972,"line_start":928,"line_end":928,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":58977,"byte_end":58984,"line_start":929,"line_end":929,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":58989,"byte_end":59015,"line_start":930,"line_end":930,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":59020,"byte_end":59023,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ let x: Vec<Vec<_>> = vec![vec![1, 2], vec![3, 4]];","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":59028,"byte_end":59082,"line_start":932,"line_end":932,"column_start":5,"column_end":59}},{"value":"/ let iters: Vec<_> = x.into_iter().map(Vec::into_iter).collect();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":59087,"byte_end":59155,"line_start":933,"line_end":933,"column_start":5,"column_end":73}},{"value":"/ let y: Vec<_> = iters.into_par_iter().flatten_iter().collect();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":59160,"byte_end":59227,"line_start":934,"line_end":934,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":59232,"byte_end":59235,"line_start":935,"line_end":935,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(y, vec![1, 2, 3, 4]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":59240,"byte_end":59276,"line_start":936,"line_end":936,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":59281,"byte_end":59288,"line_start":937,"line_end":937,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4558},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":61043,"byte_end":61049,"line_start":976,"line_end":976,"column_start":8,"column_end":14},"name":"reduce","qualname":"::iter::ParallelIterator::reduce","value":"pub fn reduce<OP, ID>(Self, ID, OP) -> Self::Item where\nOP: Fn(Self::Item, Self::Item) -> Self::Item + Sync + Send, ID: Fn() ->\nSelf::Item + Sync + Send","parent":{"krate":0,"index":4491},"children":[],"decl_id":null,"docs":" Reduces the items in the iterator into one item using `op`.\n The argument `identity` should be a closure that can produce\n \"identity\" value which may be inserted into the sequence as\n needed to create opportunities for parallel execution. So, for\n example, if you are doing a summation, then `identity()` ought\n to produce something that represents the zero for your type\n (but consider just calling `sum()` in that case).","sig":null,"attributes":[{"value":"/ Reduces the items in the iterator into one item using `op`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":59478,"byte_end":59541,"line_start":946,"line_end":946,"column_start":5,"column_end":68}},{"value":"/ The argument `identity` should be a closure that can produce","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":59546,"byte_end":59610,"line_start":947,"line_end":947,"column_start":5,"column_end":69}},{"value":"/ \"identity\" value which may be inserted into the sequence as","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":59615,"byte_end":59678,"line_start":948,"line_end":948,"column_start":5,"column_end":68}},{"value":"/ needed to create opportunities for parallel execution. So, for","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":59683,"byte_end":59749,"line_start":949,"line_end":949,"column_start":5,"column_end":71}},{"value":"/ example, if you are doing a summation, then `identity()` ought","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":59754,"byte_end":59820,"line_start":950,"line_end":950,"column_start":5,"column_end":71}},{"value":"/ to produce something that represents the zero for your type","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":59825,"byte_end":59888,"line_start":951,"line_end":951,"column_start":5,"column_end":68}},{"value":"/ (but consider just calling `sum()` in that case).","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":59893,"byte_end":59946,"line_start":952,"line_end":952,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":59951,"byte_end":59954,"line_start":953,"line_end":953,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":59959,"byte_end":59973,"line_start":954,"line_end":954,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":59978,"byte_end":59981,"line_start":955,"line_end":955,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":59986,"byte_end":59993,"line_start":956,"line_end":956,"column_start":5,"column_end":12}},{"value":"/ // Iterate over a sequence of pairs `(x0, y0), ..., (xN, yN)`","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":59998,"byte_end":60063,"line_start":957,"line_end":957,"column_start":5,"column_end":70}},{"value":"/ // and use reduce to compute one pair `(x0 + ... + xN, y0 + ... + yN)`","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":60068,"byte_end":60142,"line_start":958,"line_end":958,"column_start":5,"column_end":79}},{"value":"/ // where the first/second elements are summed separately.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":60147,"byte_end":60208,"line_start":959,"line_end":959,"column_start":5,"column_end":66}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":60213,"byte_end":60239,"line_start":960,"line_end":960,"column_start":5,"column_end":31}},{"value":"/ let sums = [(0, 1), (5, 6), (16, 2), (8, 9)]","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":60244,"byte_end":60292,"line_start":961,"line_end":961,"column_start":5,"column_end":53}},{"value":"/            .par_iter()        // iterating over &(i32, i32)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":60297,"byte_end":60360,"line_start":962,"line_end":962,"column_start":5,"column_end":68}},{"value":"/            .cloned()          // iterating over (i32, i32)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":60365,"byte_end":60427,"line_start":963,"line_end":963,"column_start":5,"column_end":67}},{"value":"/            .reduce(|| (0, 0), // the \"identity\" is 0 in both columns","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":60432,"byte_end":60504,"line_start":964,"line_end":964,"column_start":5,"column_end":77}},{"value":"/                    |a, b| (a.0 + b.0, a.1 + b.1));","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":60509,"byte_end":60563,"line_start":965,"line_end":965,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(sums, (0 + 5 + 16 + 8, 1 + 6 + 2 + 9));","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":60568,"byte_end":60622,"line_start":966,"line_end":966,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":60627,"byte_end":60634,"line_start":967,"line_end":967,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":60639,"byte_end":60642,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/ **Note:** unlike a sequential `fold` operation, the order in","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":60647,"byte_end":60711,"line_start":969,"line_end":969,"column_start":5,"column_end":69}},{"value":"/ which `op` will be applied to reduce the result is not fully","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":60716,"byte_end":60780,"line_start":970,"line_end":970,"column_start":5,"column_end":69}},{"value":"/ specified. So `op` should be [associative] or else the results","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":60785,"byte_end":60851,"line_start":971,"line_end":971,"column_start":5,"column_end":71}},{"value":"/ will be non-deterministic. And of course `identity()` should","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":60856,"byte_end":60920,"line_start":972,"line_end":972,"column_start":5,"column_end":69}},{"value":"/ produce a true identity.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":60925,"byte_end":60953,"line_start":973,"line_end":973,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":60958,"byte_end":60961,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ [associative]: https://en.wikipedia.org/wiki/Associative_property","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":60966,"byte_end":61035,"line_start":975,"line_end":975,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":4561},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":62390,"byte_end":62401,"line_start":1010,"line_end":1010,"column_start":8,"column_end":19},"name":"reduce_with","qualname":"::iter::ParallelIterator::reduce_with","value":"pub fn reduce_with<OP>(Self, OP) -> Option<Self::Item> where\nOP: Fn(Self::Item, Self::Item) -> Self::Item + Sync + Send","parent":{"krate":0,"index":4491},"children":[],"decl_id":null,"docs":" Reduces the items in the iterator into one item using `op`.\n If the iterator is empty, `None` is returned; otherwise,\n `Some` is returned.","sig":null,"attributes":[{"value":"/ Reduces the items in the iterator into one item using `op`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":61284,"byte_end":61347,"line_start":984,"line_end":984,"column_start":5,"column_end":68}},{"value":"/ If the iterator is empty, `None` is returned; otherwise,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":61352,"byte_end":61412,"line_start":985,"line_end":985,"column_start":5,"column_end":65}},{"value":"/ `Some` is returned.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":61417,"byte_end":61440,"line_start":986,"line_end":986,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":61445,"byte_end":61448,"line_start":987,"line_end":987,"column_start":5,"column_end":8}},{"value":"/ This version of `reduce` is simple but somewhat less","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":61453,"byte_end":61509,"line_start":988,"line_end":988,"column_start":5,"column_end":61}},{"value":"/ efficient. If possible, it is better to call `reduce()`, which","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":61514,"byte_end":61580,"line_start":989,"line_end":989,"column_start":5,"column_end":71}},{"value":"/ requires an identity element.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":61585,"byte_end":61618,"line_start":990,"line_end":990,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":61623,"byte_end":61626,"line_start":991,"line_end":991,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":61631,"byte_end":61645,"line_start":992,"line_end":992,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":61650,"byte_end":61653,"line_start":993,"line_end":993,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":61658,"byte_end":61665,"line_start":994,"line_end":994,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":61670,"byte_end":61696,"line_start":995,"line_end":995,"column_start":5,"column_end":31}},{"value":"/ let sums = [(0, 1), (5, 6), (16, 2), (8, 9)]","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":61701,"byte_end":61749,"line_start":996,"line_end":996,"column_start":5,"column_end":53}},{"value":"/            .par_iter()        // iterating over &(i32, i32)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":61754,"byte_end":61817,"line_start":997,"line_end":997,"column_start":5,"column_end":68}},{"value":"/            .cloned()          // iterating over (i32, i32)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":61822,"byte_end":61884,"line_start":998,"line_end":998,"column_start":5,"column_end":67}},{"value":"/            .reduce_with(|a, b| (a.0 + b.0, a.1 + b.1))","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":61889,"byte_end":61947,"line_start":999,"line_end":999,"column_start":5,"column_end":63}},{"value":"/            .unwrap();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":61952,"byte_end":61977,"line_start":1000,"line_end":1000,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(sums, (0 + 5 + 16 + 8, 1 + 6 + 2 + 9));","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":61982,"byte_end":62036,"line_start":1001,"line_end":1001,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":62041,"byte_end":62048,"line_start":1002,"line_end":1002,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":62053,"byte_end":62056,"line_start":1003,"line_end":1003,"column_start":5,"column_end":8}},{"value":"/ **Note:** unlike a sequential `fold` operation, the order in","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":62061,"byte_end":62125,"line_start":1004,"line_end":1004,"column_start":5,"column_end":69}},{"value":"/ which `op` will be applied to reduce the result is not fully","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":62130,"byte_end":62194,"line_start":1005,"line_end":1005,"column_start":5,"column_end":69}},{"value":"/ specified. So `op` should be [associative] or else the results","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":62199,"byte_end":62265,"line_start":1006,"line_end":1006,"column_start":5,"column_end":71}},{"value":"/ will be non-deterministic.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":62270,"byte_end":62300,"line_start":1007,"line_end":1007,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":62305,"byte_end":62308,"line_start":1008,"line_end":1008,"column_start":5,"column_end":8}},{"value":"/ [associative]: https://en.wikipedia.org/wiki/Associative_property","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":62313,"byte_end":62382,"line_start":1009,"line_end":1009,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":4573},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":64585,"byte_end":64595,"line_start":1064,"line_end":1064,"column_start":8,"column_end":18},"name":"try_reduce","qualname":"::iter::ParallelIterator::try_reduce","value":"pub fn try_reduce<T, OP, ID>(Self, ID, OP) -> Self::Item where OP: Fn(T, T) ->\nSelf::Item + Sync + Send, ID: Fn() -> T + Sync + Send, Self::Item: Try<Ok = T>","parent":{"krate":0,"index":4491},"children":[],"decl_id":null,"docs":" Reduces the items in the iterator into one item using a fallible `op`.\n The `identity` argument is used the same way as in [`reduce()`].","sig":null,"attributes":[{"value":"/ Reduces the items in the iterator into one item using a fallible `op`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":63196,"byte_end":63270,"line_start":1033,"line_end":1033,"column_start":5,"column_end":79}},{"value":"/ The `identity` argument is used the same way as in [`reduce()`].","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":63275,"byte_end":63343,"line_start":1034,"line_end":1034,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":63348,"byte_end":63351,"line_start":1035,"line_end":1035,"column_start":5,"column_end":8}},{"value":"/ [`reduce()`]: #method.reduce","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":63356,"byte_end":63388,"line_start":1036,"line_end":1036,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":63393,"byte_end":63396,"line_start":1037,"line_end":1037,"column_start":5,"column_end":8}},{"value":"/ If a `Result::Err` or `Option::None` item is found, or if `op` reduces","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":63401,"byte_end":63475,"line_start":1038,"line_end":1038,"column_start":5,"column_end":79}},{"value":"/ to one, we will attempt to stop processing the rest of the items in the","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":63480,"byte_end":63555,"line_start":1039,"line_end":1039,"column_start":5,"column_end":80}},{"value":"/ iterator as soon as possible, and we will return that terminating value.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":63560,"byte_end":63636,"line_start":1040,"line_end":1040,"column_start":5,"column_end":81}},{"value":"/ Otherwise, we will return the final reduced `Result::Ok(T)` or","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":63641,"byte_end":63707,"line_start":1041,"line_end":1041,"column_start":5,"column_end":71}},{"value":"/ `Option::Some(T)`.  If there are multiple errors in parallel, it is not","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":63712,"byte_end":63787,"line_start":1042,"line_end":1042,"column_start":5,"column_end":80}},{"value":"/ specified which will be returned.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":63792,"byte_end":63829,"line_start":1043,"line_end":1043,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":63834,"byte_end":63837,"line_start":1044,"line_end":1044,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":63842,"byte_end":63856,"line_start":1045,"line_end":1045,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":63861,"byte_end":63864,"line_start":1046,"line_end":1046,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":63869,"byte_end":63876,"line_start":1047,"line_end":1047,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":63881,"byte_end":63907,"line_start":1048,"line_end":1048,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":63912,"byte_end":63915,"line_start":1049,"line_end":1049,"column_start":5,"column_end":8}},{"value":"/ // Compute the sum of squares, being careful about overflow.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":63920,"byte_end":63984,"line_start":1050,"line_end":1050,"column_start":5,"column_end":69}},{"value":"/ fn sum_squares<I: IntoParallelIterator<Item = i32>>(iter: I) -> Option<i32> {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":63989,"byte_end":64070,"line_start":1051,"line_end":1051,"column_start":5,"column_end":86}},{"value":"/     iter.into_par_iter()","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":64075,"byte_end":64103,"line_start":1052,"line_end":1052,"column_start":5,"column_end":33}},{"value":"/         .map(|i| i.checked_mul(i))            // square each item,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":64108,"byte_end":64178,"line_start":1053,"line_end":1053,"column_start":5,"column_end":75}},{"value":"/         .try_reduce(|| 0, i32::checked_add)   // and add them up!","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":64183,"byte_end":64252,"line_start":1054,"line_end":1054,"column_start":5,"column_end":74}},{"value":"/ }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":64257,"byte_end":64262,"line_start":1055,"line_end":1055,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(sum_squares(0..5), Some(0 + 1 + 4 + 9 + 16));","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":64267,"byte_end":64327,"line_start":1056,"line_end":1056,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":64332,"byte_end":64335,"line_start":1057,"line_end":1057,"column_start":5,"column_end":8}},{"value":"/ // The sum might overflow","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":64340,"byte_end":64369,"line_start":1058,"line_end":1058,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(sum_squares(0..10_000), None);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":64374,"byte_end":64419,"line_start":1059,"line_end":1059,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":64424,"byte_end":64427,"line_start":1060,"line_end":1060,"column_start":5,"column_end":8}},{"value":"/ // Or the squares might overflow before it even reaches `try_reduce`","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":64432,"byte_end":64504,"line_start":1061,"line_end":1061,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(sum_squares(1_000_000..1_000_001), None);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":64509,"byte_end":64565,"line_start":1062,"line_end":1062,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":64570,"byte_end":64577,"line_start":1063,"line_end":1063,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4577},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":66222,"byte_end":66237,"line_start":1108,"line_end":1108,"column_start":8,"column_end":23},"name":"try_reduce_with","qualname":"::iter::ParallelIterator::try_reduce_with","value":"pub fn try_reduce_with<T, OP>(Self, OP) -> Option<Self::Item> where\nOP: Fn(T, T) -> Self::Item + Sync + Send, Self::Item: Try<Ok = T>","parent":{"krate":0,"index":4491},"children":[],"decl_id":null,"docs":" Reduces the items in the iterator into one item using a fallible `op`.","sig":null,"attributes":[{"value":"/ Reduces the items in the iterator into one item using a fallible `op`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":64847,"byte_end":64921,"line_start":1073,"line_end":1073,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":64926,"byte_end":64929,"line_start":1074,"line_end":1074,"column_start":5,"column_end":8}},{"value":"/ Like [`reduce_with()`], if the iterator is empty, `None` is returned;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":64934,"byte_end":65007,"line_start":1075,"line_end":1075,"column_start":5,"column_end":78}},{"value":"/ otherwise, `Some` is returned.  Beyond that, it behaves like","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":65012,"byte_end":65076,"line_start":1076,"line_end":1076,"column_start":5,"column_end":69}},{"value":"/ [`try_reduce()`] for handling `Err`/`None`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":65081,"byte_end":65128,"line_start":1077,"line_end":1077,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":65133,"byte_end":65136,"line_start":1078,"line_end":1078,"column_start":5,"column_end":8}},{"value":"/ [`reduce_with()`]: #method.reduce_with","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":65141,"byte_end":65183,"line_start":1079,"line_end":1079,"column_start":5,"column_end":47}},{"value":"/ [`try_reduce()`]: #method.try_reduce","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":65188,"byte_end":65228,"line_start":1080,"line_end":1080,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":65233,"byte_end":65236,"line_start":1081,"line_end":1081,"column_start":5,"column_end":8}},{"value":"/ For instance, with `Option` items, the return value may be:","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":65241,"byte_end":65304,"line_start":1082,"line_end":1082,"column_start":5,"column_end":68}},{"value":"/ - `None`, the iterator was empty","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":65309,"byte_end":65345,"line_start":1083,"line_end":1083,"column_start":5,"column_end":41}},{"value":"/ - `Some(None)`, we stopped after encountering `None`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":65350,"byte_end":65407,"line_start":1084,"line_end":1084,"column_start":5,"column_end":62}},{"value":"/ - `Some(Some(x))`, the entire iterator reduced to `x`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":65412,"byte_end":65470,"line_start":1085,"line_end":1085,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":65475,"byte_end":65478,"line_start":1086,"line_end":1086,"column_start":5,"column_end":8}},{"value":"/ With `Result` items, the nesting is more obvious:","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":65483,"byte_end":65536,"line_start":1087,"line_end":1087,"column_start":5,"column_end":58}},{"value":"/ - `None`, the iterator was empty","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":65541,"byte_end":65577,"line_start":1088,"line_end":1088,"column_start":5,"column_end":41}},{"value":"/ - `Some(Err(e))`, we stopped after encountering an error `e`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":65582,"byte_end":65647,"line_start":1089,"line_end":1089,"column_start":5,"column_end":70}},{"value":"/ - `Some(Ok(x))`, the entire iterator reduced to `x`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":65652,"byte_end":65708,"line_start":1090,"line_end":1090,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":65713,"byte_end":65716,"line_start":1091,"line_end":1091,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":65721,"byte_end":65735,"line_start":1092,"line_end":1092,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":65740,"byte_end":65743,"line_start":1093,"line_end":1093,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":65748,"byte_end":65755,"line_start":1094,"line_end":1094,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":65760,"byte_end":65786,"line_start":1095,"line_end":1095,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":65791,"byte_end":65794,"line_start":1096,"line_end":1096,"column_start":5,"column_end":8}},{"value":"/ let files = [\"/dev/null\", \"/does/not/exist\"];","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":65799,"byte_end":65848,"line_start":1097,"line_end":1097,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":65853,"byte_end":65856,"line_start":1098,"line_end":1098,"column_start":5,"column_end":8}},{"value":"/ // Find the biggest file","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":65861,"byte_end":65889,"line_start":1099,"line_end":1099,"column_start":5,"column_end":33}},{"value":"/ files.into_par_iter()","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":65894,"byte_end":65919,"line_start":1100,"line_end":1100,"column_start":5,"column_end":30}},{"value":"/     .map(|path| std::fs::metadata(path).map(|m| (path, m.len())))","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":65924,"byte_end":65993,"line_start":1101,"line_end":1101,"column_start":5,"column_end":74}},{"value":"/     .try_reduce_with(|a, b| {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":65998,"byte_end":66031,"line_start":1102,"line_end":1102,"column_start":5,"column_end":38}},{"value":"/         Ok(if a.1 >= b.1 { a } else { b })","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":66036,"byte_end":66082,"line_start":1103,"line_end":1103,"column_start":5,"column_end":51}},{"value":"/     })","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":66087,"byte_end":66097,"line_start":1104,"line_end":1104,"column_start":5,"column_end":15}},{"value":"/     .expect(\"Some value, since the iterator is not empty\")","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":66102,"byte_end":66164,"line_start":1105,"line_end":1105,"column_start":5,"column_end":67}},{"value":"/     .expect_err(\"not found\");","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":66169,"byte_end":66202,"line_start":1106,"line_end":1106,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":66207,"byte_end":66214,"line_start":1107,"line_end":1107,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4580},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":72015,"byte_end":72019,"line_start":1249,"line_end":1249,"column_start":8,"column_end":12},"name":"fold","qualname":"::iter::ParallelIterator::fold","value":"pub fn fold<T, ID, F>(Self, ID, F) -> Fold<Self, ID, F> where\nF: Fn(T, Self::Item) -> T + Sync + Send, ID: Fn() -> T + Sync + Send, T: Send","parent":{"krate":0,"index":4491},"children":[],"decl_id":null,"docs":" Parallel fold is similar to sequential fold except that the\n sequence of items may be subdivided before it is\n folded. Consider a list of numbers like `22 3 77 89 46`. If\n you used sequential fold to add them (`fold(0, |a,b| a+b)`,\n you would wind up first adding 0 + 22, then 22 + 3, then 25 +\n 77, and so forth. The **parallel fold** works similarly except\n that it first breaks up your list into sublists, and hence\n instead of yielding up a single sum at the end, it yields up\n multiple sums. The number of results is nondeterministic, as\n is the point where the breaks occur.","sig":null,"attributes":[{"value":"/ Parallel fold is similar to sequential fold except that the","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":66442,"byte_end":66505,"line_start":1116,"line_end":1116,"column_start":5,"column_end":68}},{"value":"/ sequence of items may be subdivided before it is","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":66510,"byte_end":66562,"line_start":1117,"line_end":1117,"column_start":5,"column_end":57}},{"value":"/ folded. Consider a list of numbers like `22 3 77 89 46`. If","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":66567,"byte_end":66630,"line_start":1118,"line_end":1118,"column_start":5,"column_end":68}},{"value":"/ you used sequential fold to add them (`fold(0, |a,b| a+b)`,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":66635,"byte_end":66698,"line_start":1119,"line_end":1119,"column_start":5,"column_end":68}},{"value":"/ you would wind up first adding 0 + 22, then 22 + 3, then 25 +","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":66703,"byte_end":66768,"line_start":1120,"line_end":1120,"column_start":5,"column_end":70}},{"value":"/ 77, and so forth. The **parallel fold** works similarly except","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":66773,"byte_end":66839,"line_start":1121,"line_end":1121,"column_start":5,"column_end":71}},{"value":"/ that it first breaks up your list into sublists, and hence","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":66844,"byte_end":66906,"line_start":1122,"line_end":1122,"column_start":5,"column_end":67}},{"value":"/ instead of yielding up a single sum at the end, it yields up","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":66911,"byte_end":66975,"line_start":1123,"line_end":1123,"column_start":5,"column_end":69}},{"value":"/ multiple sums. The number of results is nondeterministic, as","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":66980,"byte_end":67044,"line_start":1124,"line_end":1124,"column_start":5,"column_end":69}},{"value":"/ is the point where the breaks occur.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":67049,"byte_end":67089,"line_start":1125,"line_end":1125,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":67094,"byte_end":67097,"line_start":1126,"line_end":1126,"column_start":5,"column_end":8}},{"value":"/ So if did the same parallel fold (`fold(0, |a,b| a+b)`) on","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":67102,"byte_end":67164,"line_start":1127,"line_end":1127,"column_start":5,"column_end":67}},{"value":"/ our example list, we might wind up with a sequence of two numbers,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":67169,"byte_end":67239,"line_start":1128,"line_end":1128,"column_start":5,"column_end":75}},{"value":"/ like so:","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":67244,"byte_end":67256,"line_start":1129,"line_end":1129,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":67261,"byte_end":67264,"line_start":1130,"line_end":1130,"column_start":5,"column_end":8}},{"value":"/ ```notrust","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":67269,"byte_end":67283,"line_start":1131,"line_end":1131,"column_start":5,"column_end":19}},{"value":"/ 22 3 77 89 46","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":67288,"byte_end":67305,"line_start":1132,"line_end":1132,"column_start":5,"column_end":22}},{"value":"/       |     |","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":67310,"byte_end":67327,"line_start":1133,"line_end":1133,"column_start":5,"column_end":22}},{"value":"/     102   135","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":67332,"byte_end":67349,"line_start":1134,"line_end":1134,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":67354,"byte_end":67361,"line_start":1135,"line_end":1135,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":67366,"byte_end":67369,"line_start":1136,"line_end":1136,"column_start":5,"column_end":8}},{"value":"/ Or perhaps these three numbers:","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":67374,"byte_end":67409,"line_start":1137,"line_end":1137,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":67414,"byte_end":67417,"line_start":1138,"line_end":1138,"column_start":5,"column_end":8}},{"value":"/ ```notrust","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":67422,"byte_end":67436,"line_start":1139,"line_end":1139,"column_start":5,"column_end":19}},{"value":"/ 22 3 77 89 46","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":67441,"byte_end":67458,"line_start":1140,"line_end":1140,"column_start":5,"column_end":22}},{"value":"/       |  |  |","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":67463,"byte_end":67480,"line_start":1141,"line_end":1141,"column_start":5,"column_end":22}},{"value":"/     102 89 46","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":67485,"byte_end":67502,"line_start":1142,"line_end":1142,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":67507,"byte_end":67514,"line_start":1143,"line_end":1143,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":67519,"byte_end":67522,"line_start":1144,"line_end":1144,"column_start":5,"column_end":8}},{"value":"/ In general, Rayon will attempt to find good breaking points","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":67527,"byte_end":67590,"line_start":1145,"line_end":1145,"column_start":5,"column_end":68}},{"value":"/ that keep all of your cores busy.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":67595,"byte_end":67632,"line_start":1146,"line_end":1146,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":67637,"byte_end":67640,"line_start":1147,"line_end":1147,"column_start":5,"column_end":8}},{"value":"/ ### Fold versus reduce","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":67645,"byte_end":67671,"line_start":1148,"line_end":1148,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":67676,"byte_end":67679,"line_start":1149,"line_end":1149,"column_start":5,"column_end":8}},{"value":"/ The `fold()` and `reduce()` methods each take an identity element","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":67684,"byte_end":67753,"line_start":1150,"line_end":1150,"column_start":5,"column_end":74}},{"value":"/ and a combining function, but they operate rather differently.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":67758,"byte_end":67824,"line_start":1151,"line_end":1151,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":67829,"byte_end":67832,"line_start":1152,"line_end":1152,"column_start":5,"column_end":8}},{"value":"/ `reduce()` requires that the identity function has the same","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":67837,"byte_end":67900,"line_start":1153,"line_end":1153,"column_start":5,"column_end":68}},{"value":"/ type as the things you are iterating over, and it fully","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":67905,"byte_end":67964,"line_start":1154,"line_end":1154,"column_start":5,"column_end":64}},{"value":"/ reduces the list of items into a single item. So, for example,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":67969,"byte_end":68035,"line_start":1155,"line_end":1155,"column_start":5,"column_end":71}},{"value":"/ imagine we are iterating over a list of bytes `bytes: [128_u8,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":68040,"byte_end":68106,"line_start":1156,"line_end":1156,"column_start":5,"column_end":71}},{"value":"/ 64_u8, 64_u8]`. If we used `bytes.reduce(|| 0_u8, |a: u8, b:","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":68111,"byte_end":68175,"line_start":1157,"line_end":1157,"column_start":5,"column_end":69}},{"value":"/ u8| a + b)`, we would get an overflow. This is because `0`,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":68180,"byte_end":68243,"line_start":1158,"line_end":1158,"column_start":5,"column_end":68}},{"value":"/ `a`, and `b` here are all bytes, just like the numbers in the","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":68248,"byte_end":68313,"line_start":1159,"line_end":1159,"column_start":5,"column_end":70}},{"value":"/ list (I wrote the types explicitly above, but those are the","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":68318,"byte_end":68381,"line_start":1160,"line_end":1160,"column_start":5,"column_end":68}},{"value":"/ only types you can use). To avoid the overflow, we would need","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":68386,"byte_end":68451,"line_start":1161,"line_end":1161,"column_start":5,"column_end":70}},{"value":"/ to do something like `bytes.map(|b| b as u32).reduce(|| 0, |a,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":68456,"byte_end":68522,"line_start":1162,"line_end":1162,"column_start":5,"column_end":71}},{"value":"/ b| a + b)`, in which case our result would be `256`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":68527,"byte_end":68583,"line_start":1163,"line_end":1163,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":68588,"byte_end":68591,"line_start":1164,"line_end":1164,"column_start":5,"column_end":8}},{"value":"/ In contrast, with `fold()`, the identity function does not","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":68596,"byte_end":68658,"line_start":1165,"line_end":1165,"column_start":5,"column_end":67}},{"value":"/ have to have the same type as the things you are iterating","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":68663,"byte_end":68725,"line_start":1166,"line_end":1166,"column_start":5,"column_end":67}},{"value":"/ over, and you potentially get back many results. So, if we","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":68730,"byte_end":68792,"line_start":1167,"line_end":1167,"column_start":5,"column_end":67}},{"value":"/ continue with the `bytes` example from the previous paragraph,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":68797,"byte_end":68863,"line_start":1168,"line_end":1168,"column_start":5,"column_end":71}},{"value":"/ we could do `bytes.fold(|| 0_u32, |a, b| a + (b as u32))` to","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":68868,"byte_end":68932,"line_start":1169,"line_end":1169,"column_start":5,"column_end":69}},{"value":"/ convert our bytes into `u32`. And of course we might not get","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":68937,"byte_end":69001,"line_start":1170,"line_end":1170,"column_start":5,"column_end":69}},{"value":"/ back a single sum.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":69006,"byte_end":69028,"line_start":1171,"line_end":1171,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":69033,"byte_end":69036,"line_start":1172,"line_end":1172,"column_start":5,"column_end":8}},{"value":"/ There is a more subtle distinction as well, though it's","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":69041,"byte_end":69100,"line_start":1173,"line_end":1173,"column_start":5,"column_end":64}},{"value":"/ actually implied by the above points. When you use `reduce()`,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":69105,"byte_end":69171,"line_start":1174,"line_end":1174,"column_start":5,"column_end":71}},{"value":"/ your reduction function is sometimes called with values that","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":69176,"byte_end":69240,"line_start":1175,"line_end":1175,"column_start":5,"column_end":69}},{"value":"/ were never part of your original parallel iterator (for","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":69245,"byte_end":69304,"line_start":1176,"line_end":1176,"column_start":5,"column_end":64}},{"value":"/ example, both the left and right might be a partial sum). With","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":69309,"byte_end":69375,"line_start":1177,"line_end":1177,"column_start":5,"column_end":71}},{"value":"/ `fold()`, in contrast, the left value in the fold function is","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":69380,"byte_end":69445,"line_start":1178,"line_end":1178,"column_start":5,"column_end":70}},{"value":"/ always the accumulator, and the right value is always from","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":69450,"byte_end":69512,"line_start":1179,"line_end":1179,"column_start":5,"column_end":67}},{"value":"/ your original sequence.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":69517,"byte_end":69544,"line_start":1180,"line_end":1180,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":69549,"byte_end":69552,"line_start":1181,"line_end":1181,"column_start":5,"column_end":8}},{"value":"/ ### Fold vs Map/Reduce","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":69557,"byte_end":69583,"line_start":1182,"line_end":1182,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":69588,"byte_end":69591,"line_start":1183,"line_end":1183,"column_start":5,"column_end":8}},{"value":"/ Fold makes sense if you have some operation where it is","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":69596,"byte_end":69655,"line_start":1184,"line_end":1184,"column_start":5,"column_end":64}},{"value":"/ cheaper to create groups of elements at a time. For example,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":69660,"byte_end":69724,"line_start":1185,"line_end":1185,"column_start":5,"column_end":69}},{"value":"/ imagine collecting characters into a string. If you were going","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":69729,"byte_end":69795,"line_start":1186,"line_end":1186,"column_start":5,"column_end":71}},{"value":"/ to use map/reduce, you might try this:","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":69800,"byte_end":69842,"line_start":1187,"line_end":1187,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":69847,"byte_end":69850,"line_start":1188,"line_end":1188,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":69855,"byte_end":69862,"line_start":1189,"line_end":1189,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":69867,"byte_end":69893,"line_start":1190,"line_end":1190,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":69898,"byte_end":69901,"line_start":1191,"line_end":1191,"column_start":5,"column_end":8}},{"value":"/ let s =","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":69906,"byte_end":69917,"line_start":1192,"line_end":1192,"column_start":5,"column_end":16}},{"value":"/     ['a', 'b', 'c', 'd', 'e']","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":69922,"byte_end":69955,"line_start":1193,"line_end":1193,"column_start":5,"column_end":38}},{"value":"/     .par_iter()","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":69960,"byte_end":69979,"line_start":1194,"line_end":1194,"column_start":5,"column_end":24}},{"value":"/     .map(|c: &char| format!(\"{}\", c))","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":69984,"byte_end":70025,"line_start":1195,"line_end":1195,"column_start":5,"column_end":46}},{"value":"/     .reduce(|| String::new(),","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":70030,"byte_end":70063,"line_start":1196,"line_end":1196,"column_start":5,"column_end":38}},{"value":"/             |mut a: String, b: String| { a.push_str(&b); a });","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":70068,"byte_end":70134,"line_start":1197,"line_end":1197,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":70139,"byte_end":70142,"line_start":1198,"line_end":1198,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s, \"abcde\");","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":70147,"byte_end":70174,"line_start":1199,"line_end":1199,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":70179,"byte_end":70186,"line_start":1200,"line_end":1200,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":70191,"byte_end":70194,"line_start":1201,"line_end":1201,"column_start":5,"column_end":8}},{"value":"/ Because reduce produces the same type of element as its input,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":70199,"byte_end":70265,"line_start":1202,"line_end":1202,"column_start":5,"column_end":71}},{"value":"/ you have to first map each character into a string, and then","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":70270,"byte_end":70334,"line_start":1203,"line_end":1203,"column_start":5,"column_end":69}},{"value":"/ you can reduce them. This means we create one string per","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":70339,"byte_end":70399,"line_start":1204,"line_end":1204,"column_start":5,"column_end":65}},{"value":"/ element in our iterator -- not so great. Using `fold`, we can","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":70404,"byte_end":70469,"line_start":1205,"line_end":1205,"column_start":5,"column_end":70}},{"value":"/ do this instead:","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":70474,"byte_end":70494,"line_start":1206,"line_end":1206,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":70499,"byte_end":70502,"line_start":1207,"line_end":1207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":70507,"byte_end":70514,"line_start":1208,"line_end":1208,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":70519,"byte_end":70545,"line_start":1209,"line_end":1209,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":70550,"byte_end":70553,"line_start":1210,"line_end":1210,"column_start":5,"column_end":8}},{"value":"/ let s =","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":70558,"byte_end":70569,"line_start":1211,"line_end":1211,"column_start":5,"column_end":16}},{"value":"/     ['a', 'b', 'c', 'd', 'e']","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":70574,"byte_end":70607,"line_start":1212,"line_end":1212,"column_start":5,"column_end":38}},{"value":"/     .par_iter()","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":70612,"byte_end":70631,"line_start":1213,"line_end":1213,"column_start":5,"column_end":24}},{"value":"/     .fold(|| String::new(),","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":70636,"byte_end":70667,"line_start":1214,"line_end":1214,"column_start":5,"column_end":36}},{"value":"/             |mut s: String, c: &char| { s.push(*c); s })","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":70672,"byte_end":70732,"line_start":1215,"line_end":1215,"column_start":5,"column_end":65}},{"value":"/     .reduce(|| String::new(),","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":70737,"byte_end":70770,"line_start":1216,"line_end":1216,"column_start":5,"column_end":38}},{"value":"/             |mut a: String, b: String| { a.push_str(&b); a });","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":70775,"byte_end":70841,"line_start":1217,"line_end":1217,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":70846,"byte_end":70849,"line_start":1218,"line_end":1218,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s, \"abcde\");","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":70854,"byte_end":70881,"line_start":1219,"line_end":1219,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":70886,"byte_end":70893,"line_start":1220,"line_end":1220,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":70898,"byte_end":70901,"line_start":1221,"line_end":1221,"column_start":5,"column_end":8}},{"value":"/ Now `fold` will process groups of our characters at a time,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":70906,"byte_end":70969,"line_start":1222,"line_end":1222,"column_start":5,"column_end":68}},{"value":"/ and we only make one string per group. We should wind up with","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":70974,"byte_end":71039,"line_start":1223,"line_end":1223,"column_start":5,"column_end":70}},{"value":"/ some small-ish number of strings roughly proportional to the","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":71044,"byte_end":71108,"line_start":1224,"line_end":1224,"column_start":5,"column_end":69}},{"value":"/ number of CPUs you have (it will ultimately depend on how busy","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":71113,"byte_end":71179,"line_start":1225,"line_end":1225,"column_start":5,"column_end":71}},{"value":"/ your processors are). Note that we still need to do a reduce","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":71184,"byte_end":71248,"line_start":1226,"line_end":1226,"column_start":5,"column_end":69}},{"value":"/ afterwards to combine those groups of strings into a single","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":71253,"byte_end":71316,"line_start":1227,"line_end":1227,"column_start":5,"column_end":68}},{"value":"/ string.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":71321,"byte_end":71332,"line_start":1228,"line_end":1228,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":71337,"byte_end":71340,"line_start":1229,"line_end":1229,"column_start":5,"column_end":8}},{"value":"/ You could use a similar trick to save partial results (e.g., a","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":71345,"byte_end":71411,"line_start":1230,"line_end":1230,"column_start":5,"column_end":71}},{"value":"/ cache) or something similar.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":71416,"byte_end":71448,"line_start":1231,"line_end":1231,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":71453,"byte_end":71456,"line_start":1232,"line_end":1232,"column_start":5,"column_end":8}},{"value":"/ ### Combining fold with other operations","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":71461,"byte_end":71505,"line_start":1233,"line_end":1233,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":71510,"byte_end":71513,"line_start":1234,"line_end":1234,"column_start":5,"column_end":8}},{"value":"/ You can combine `fold` with `reduce` if you want to produce a","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":71518,"byte_end":71583,"line_start":1235,"line_end":1235,"column_start":5,"column_end":70}},{"value":"/ single value. This is then roughly equivalent to a map/reduce","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":71588,"byte_end":71653,"line_start":1236,"line_end":1236,"column_start":5,"column_end":70}},{"value":"/ combination in effect:","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":71658,"byte_end":71684,"line_start":1237,"line_end":1237,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":71689,"byte_end":71692,"line_start":1238,"line_end":1238,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":71697,"byte_end":71704,"line_start":1239,"line_end":1239,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":71709,"byte_end":71735,"line_start":1240,"line_end":1240,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":71740,"byte_end":71743,"line_start":1241,"line_end":1241,"column_start":5,"column_end":8}},{"value":"/ let bytes = 0..22_u8;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":71748,"byte_end":71773,"line_start":1242,"line_end":1242,"column_start":5,"column_end":30}},{"value":"/ let sum = bytes.into_par_iter()","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":71778,"byte_end":71813,"line_start":1243,"line_end":1243,"column_start":5,"column_end":40}},{"value":"/                .fold(|| 0_u32, |a: u32, b: u8| a + (b as u32))","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":71818,"byte_end":71884,"line_start":1244,"line_end":1244,"column_start":5,"column_end":71}},{"value":"/                .sum::<u32>();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":71889,"byte_end":71922,"line_start":1245,"line_end":1245,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":71927,"byte_end":71930,"line_start":1246,"line_end":1246,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(sum, (0..22).sum()); // compare to sequential","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":71935,"byte_end":71995,"line_start":1247,"line_end":1247,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":72000,"byte_end":72007,"line_start":1248,"line_end":1248,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4584},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":72944,"byte_end":72953,"line_start":1277,"line_end":1277,"column_start":8,"column_end":17},"name":"fold_with","qualname":"::iter::ParallelIterator::fold_with","value":"pub fn fold_with<F, T>(Self, T, F) -> FoldWith<Self, T, F> where\nF: Fn(T, Self::Item) -> T + Sync + Send, T: Send + Clone","parent":{"krate":0,"index":4491},"children":[],"decl_id":null,"docs":" Applies `fold_op` to the given `init` value with each item of this\n iterator, finally producing the value for further use.","sig":null,"attributes":[{"value":"/ Applies `fold_op` to the given `init` value with each item of this","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":72256,"byte_end":72326,"line_start":1258,"line_end":1258,"column_start":5,"column_end":75}},{"value":"/ iterator, finally producing the value for further use.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":72331,"byte_end":72389,"line_start":1259,"line_end":1259,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":72394,"byte_end":72397,"line_start":1260,"line_end":1260,"column_start":5,"column_end":8}},{"value":"/ This works essentially like `fold(|| init.clone(), fold_op)`, except","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":72402,"byte_end":72474,"line_start":1261,"line_end":1261,"column_start":5,"column_end":77}},{"value":"/ it doesn't require the `init` type to be `Sync`, nor any other form","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":72479,"byte_end":72550,"line_start":1262,"line_end":1262,"column_start":5,"column_end":76}},{"value":"/ of added synchronization.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":72555,"byte_end":72584,"line_start":1263,"line_end":1263,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":72589,"byte_end":72592,"line_start":1264,"line_end":1264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":72597,"byte_end":72611,"line_start":1265,"line_end":1265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":72616,"byte_end":72619,"line_start":1266,"line_end":1266,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":72624,"byte_end":72631,"line_start":1267,"line_end":1267,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":72636,"byte_end":72662,"line_start":1268,"line_end":1268,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":72667,"byte_end":72670,"line_start":1269,"line_end":1269,"column_start":5,"column_end":8}},{"value":"/ let bytes = 0..22_u8;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":72675,"byte_end":72700,"line_start":1270,"line_end":1270,"column_start":5,"column_end":30}},{"value":"/ let sum = bytes.into_par_iter()","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":72705,"byte_end":72740,"line_start":1271,"line_end":1271,"column_start":5,"column_end":40}},{"value":"/                .fold_with(0_u32, |a: u32, b: u8| a + (b as u32))","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":72745,"byte_end":72813,"line_start":1272,"line_end":1272,"column_start":5,"column_end":73}},{"value":"/                .sum::<u32>();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":72818,"byte_end":72851,"line_start":1273,"line_end":1273,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":72856,"byte_end":72859,"line_start":1274,"line_end":1274,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(sum, (0..22).sum()); // compare to sequential","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":72864,"byte_end":72924,"line_start":1275,"line_end":1275,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":72929,"byte_end":72936,"line_start":1276,"line_end":1276,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4587},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":74086,"byte_end":74094,"line_start":1310,"line_end":1310,"column_start":8,"column_end":16},"name":"try_fold","qualname":"::iter::ParallelIterator::try_fold","value":"pub fn try_fold<T, R, ID, F>(Self, ID, F) -> TryFold<Self, R, ID, F> where\nF: Fn(T, Self::Item) -> R + Sync + Send, ID: Fn() -> T + Sync + Send,\nR: Try<Ok = T> + Send","parent":{"krate":0,"index":4491},"children":[],"decl_id":null,"docs":" Performs a fallible parallel fold.","sig":null,"attributes":[{"value":"/ Performs a fallible parallel fold.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":73155,"byte_end":73193,"line_start":1285,"line_end":1285,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":73198,"byte_end":73201,"line_start":1286,"line_end":1286,"column_start":5,"column_end":8}},{"value":"/ This is a variation of [`fold()`] for operations which can fail with","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":73206,"byte_end":73278,"line_start":1287,"line_end":1287,"column_start":5,"column_end":77}},{"value":"/ `Option::None` or `Result::Err`.  The first such failure stops","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":73283,"byte_end":73349,"line_start":1288,"line_end":1288,"column_start":5,"column_end":71}},{"value":"/ processing the local set of items, without affecting other folds in the","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":73354,"byte_end":73429,"line_start":1289,"line_end":1289,"column_start":5,"column_end":80}},{"value":"/ iterator's subdivisions.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":73434,"byte_end":73462,"line_start":1290,"line_end":1290,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":73467,"byte_end":73470,"line_start":1291,"line_end":1291,"column_start":5,"column_end":8}},{"value":"/ Often, `try_fold()` will be followed by [`try_reduce()`]","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":73475,"byte_end":73535,"line_start":1292,"line_end":1292,"column_start":5,"column_end":65}},{"value":"/ for a final reduction and global short-circuiting effect.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":73540,"byte_end":73601,"line_start":1293,"line_end":1293,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":73606,"byte_end":73609,"line_start":1294,"line_end":1294,"column_start":5,"column_end":8}},{"value":"/ [`fold()`]: #method.fold","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":73614,"byte_end":73642,"line_start":1295,"line_end":1295,"column_start":5,"column_end":33}},{"value":"/ [`try_reduce()`]: #method.try_reduce","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":73647,"byte_end":73687,"line_start":1296,"line_end":1296,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":73692,"byte_end":73695,"line_start":1297,"line_end":1297,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":73700,"byte_end":73714,"line_start":1298,"line_end":1298,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":73719,"byte_end":73722,"line_start":1299,"line_end":1299,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":73727,"byte_end":73734,"line_start":1300,"line_end":1300,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":73739,"byte_end":73765,"line_start":1301,"line_end":1301,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":73770,"byte_end":73773,"line_start":1302,"line_end":1302,"column_start":5,"column_end":8}},{"value":"/ let bytes = 0..22_u8;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":73778,"byte_end":73803,"line_start":1303,"line_end":1303,"column_start":5,"column_end":30}},{"value":"/ let sum = bytes.into_par_iter()","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":73808,"byte_end":73843,"line_start":1304,"line_end":1304,"column_start":5,"column_end":40}},{"value":"/                .try_fold(|| 0_u32, |a: u32, b: u8| a.checked_add(b as u32))","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":73848,"byte_end":73927,"line_start":1305,"line_end":1305,"column_start":5,"column_end":84}},{"value":"/                .try_reduce(|| 0, u32::checked_add);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":73932,"byte_end":73987,"line_start":1306,"line_end":1306,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":73992,"byte_end":73995,"line_start":1307,"line_end":1307,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(sum, Some((0..22).sum())); // compare to sequential","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":74000,"byte_end":74066,"line_start":1308,"line_end":1308,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":74071,"byte_end":74078,"line_start":1309,"line_end":1309,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4592},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":75014,"byte_end":75027,"line_start":1337,"line_end":1337,"column_start":8,"column_end":21},"name":"try_fold_with","qualname":"::iter::ParallelIterator::try_fold_with","value":"pub fn try_fold_with<F, T, R>(Self, T, F) -> TryFoldWith<Self, R, F> where\nF: Fn(T, Self::Item) -> R + Sync + Send, R: Try<Ok = T> + Send, T: Clone +\nSend","parent":{"krate":0,"index":4491},"children":[],"decl_id":null,"docs":" Performs a fallible parallel fold with a cloneable `init` value.","sig":null,"attributes":[{"value":"/ Performs a fallible parallel fold with a cloneable `init` value.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":74357,"byte_end":74425,"line_start":1319,"line_end":1319,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":74430,"byte_end":74433,"line_start":1320,"line_end":1320,"column_start":5,"column_end":8}},{"value":"/ This combines the `init` semantics of [`fold_with()`] and the failure","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":74438,"byte_end":74511,"line_start":1321,"line_end":1321,"column_start":5,"column_end":78}},{"value":"/ semantics of [`try_fold()`].","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":74516,"byte_end":74548,"line_start":1322,"line_end":1322,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":74553,"byte_end":74556,"line_start":1323,"line_end":1323,"column_start":5,"column_end":8}},{"value":"/ [`fold_with()`]: #method.fold_with","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":74561,"byte_end":74599,"line_start":1324,"line_end":1324,"column_start":5,"column_end":43}},{"value":"/ [`try_fold()`]: #method.try_fold","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":74604,"byte_end":74640,"line_start":1325,"line_end":1325,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":74645,"byte_end":74648,"line_start":1326,"line_end":1326,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":74653,"byte_end":74660,"line_start":1327,"line_end":1327,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":74665,"byte_end":74691,"line_start":1328,"line_end":1328,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":74696,"byte_end":74699,"line_start":1329,"line_end":1329,"column_start":5,"column_end":8}},{"value":"/ let bytes = 0..22_u8;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":74704,"byte_end":74729,"line_start":1330,"line_end":1330,"column_start":5,"column_end":30}},{"value":"/ let sum = bytes.into_par_iter()","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":74734,"byte_end":74769,"line_start":1331,"line_end":1331,"column_start":5,"column_end":40}},{"value":"/                .try_fold_with(0_u32, |a: u32, b: u8| a.checked_add(b as u32))","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":74774,"byte_end":74855,"line_start":1332,"line_end":1332,"column_start":5,"column_end":86}},{"value":"/                .try_reduce(|| 0, u32::checked_add);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":74860,"byte_end":74915,"line_start":1333,"line_end":1333,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":74920,"byte_end":74923,"line_start":1334,"line_end":1334,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(sum, Some((0..22).sum())); // compare to sequential","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":74928,"byte_end":74994,"line_start":1335,"line_end":1335,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":74999,"byte_end":75006,"line_start":1336,"line_end":1336,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4596},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":76052,"byte_end":76055,"line_start":1370,"line_end":1370,"column_start":8,"column_end":11},"name":"sum","qualname":"::iter::ParallelIterator::sum","value":"pub fn sum<S>(Self) -> S where S: Send + Sum<Self::Item> + Sum<S>","parent":{"krate":0,"index":4491},"children":[],"decl_id":null,"docs":" Sums up the items in the iterator.","sig":null,"attributes":[{"value":"/ Sums up the items in the iterator.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":75269,"byte_end":75307,"line_start":1346,"line_end":1346,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":75312,"byte_end":75315,"line_start":1347,"line_end":1347,"column_start":5,"column_end":8}},{"value":"/ Note that the order in items will be reduced is not specified,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":75320,"byte_end":75386,"line_start":1348,"line_end":1348,"column_start":5,"column_end":71}},{"value":"/ so if the `+` operator is not truly [associative] \\(as is the","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":75391,"byte_end":75456,"line_start":1349,"line_end":1349,"column_start":5,"column_end":70}},{"value":"/ case for floating point numbers), then the results are not","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":75461,"byte_end":75523,"line_start":1350,"line_end":1350,"column_start":5,"column_end":67}},{"value":"/ fully deterministic.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":75528,"byte_end":75552,"line_start":1351,"line_end":1351,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":75557,"byte_end":75560,"line_start":1352,"line_end":1352,"column_start":5,"column_end":8}},{"value":"/ [associative]: https://en.wikipedia.org/wiki/Associative_property","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":75565,"byte_end":75634,"line_start":1353,"line_end":1353,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":75639,"byte_end":75642,"line_start":1354,"line_end":1354,"column_start":5,"column_end":8}},{"value":"/ Basically equivalent to `self.reduce(|| 0, |a, b| a + b)`,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":75647,"byte_end":75709,"line_start":1355,"line_end":1355,"column_start":5,"column_end":67}},{"value":"/ except that the type of `0` and the `+` operation may vary","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":75714,"byte_end":75776,"line_start":1356,"line_end":1356,"column_start":5,"column_end":67}},{"value":"/ depending on the type of value being produced.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":75781,"byte_end":75831,"line_start":1357,"line_end":1357,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":75836,"byte_end":75839,"line_start":1358,"line_end":1358,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":75844,"byte_end":75858,"line_start":1359,"line_end":1359,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":75863,"byte_end":75866,"line_start":1360,"line_end":1360,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":75871,"byte_end":75878,"line_start":1361,"line_end":1361,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":75883,"byte_end":75909,"line_start":1362,"line_end":1362,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":75914,"byte_end":75917,"line_start":1363,"line_end":1363,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 5, 7];","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":75922,"byte_end":75944,"line_start":1364,"line_end":1364,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":75949,"byte_end":75952,"line_start":1365,"line_end":1365,"column_start":5,"column_end":8}},{"value":"/ let sum: i32 = a.par_iter().sum();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":75957,"byte_end":75995,"line_start":1366,"line_end":1366,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":76000,"byte_end":76003,"line_start":1367,"line_end":1367,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(sum, 13);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":76008,"byte_end":76032,"line_start":1368,"line_end":1368,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":76037,"byte_end":76044,"line_start":1369,"line_end":1369,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4598},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":77054,"byte_end":77061,"line_start":1403,"line_end":1403,"column_start":8,"column_end":15},"name":"product","qualname":"::iter::ParallelIterator::product","value":"pub fn product<P>(Self) -> P where P: Send + Product<Self::Item> + Product<P>","parent":{"krate":0,"index":4491},"children":[],"decl_id":null,"docs":" Multiplies all the items in the iterator.","sig":null,"attributes":[{"value":"/ Multiplies all the items in the iterator.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":76164,"byte_end":76209,"line_start":1377,"line_end":1377,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":76214,"byte_end":76217,"line_start":1378,"line_end":1378,"column_start":5,"column_end":8}},{"value":"/ Note that the order in items will be reduced is not specified,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":76222,"byte_end":76288,"line_start":1379,"line_end":1379,"column_start":5,"column_end":71}},{"value":"/ so if the `*` operator is not truly [associative] \\(as is the","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":76293,"byte_end":76358,"line_start":1380,"line_end":1380,"column_start":5,"column_end":70}},{"value":"/ case for floating point numbers), then the results are not","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":76363,"byte_end":76425,"line_start":1381,"line_end":1381,"column_start":5,"column_end":67}},{"value":"/ fully deterministic.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":76430,"byte_end":76454,"line_start":1382,"line_end":1382,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":76459,"byte_end":76462,"line_start":1383,"line_end":1383,"column_start":5,"column_end":8}},{"value":"/ [associative]: https://en.wikipedia.org/wiki/Associative_property","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":76467,"byte_end":76536,"line_start":1384,"line_end":1384,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":76541,"byte_end":76544,"line_start":1385,"line_end":1385,"column_start":5,"column_end":8}},{"value":"/ Basically equivalent to `self.reduce(|| 1, |a, b| a * b)`,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":76549,"byte_end":76611,"line_start":1386,"line_end":1386,"column_start":5,"column_end":67}},{"value":"/ except that the type of `1` and the `*` operation may vary","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":76616,"byte_end":76678,"line_start":1387,"line_end":1387,"column_start":5,"column_end":67}},{"value":"/ depending on the type of value being produced.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":76683,"byte_end":76733,"line_start":1388,"line_end":1388,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":76738,"byte_end":76741,"line_start":1389,"line_end":1389,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":76746,"byte_end":76760,"line_start":1390,"line_end":1390,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":76765,"byte_end":76768,"line_start":1391,"line_end":1391,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":76773,"byte_end":76780,"line_start":1392,"line_end":1392,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":76785,"byte_end":76811,"line_start":1393,"line_end":1393,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":76816,"byte_end":76819,"line_start":1394,"line_end":1394,"column_start":5,"column_end":8}},{"value":"/ fn factorial(n: u32) -> u32 {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":76824,"byte_end":76857,"line_start":1395,"line_end":1395,"column_start":5,"column_end":38}},{"value":"/    (1..n+1).into_par_iter().product()","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":76862,"byte_end":76903,"line_start":1396,"line_end":1396,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":76908,"byte_end":76913,"line_start":1397,"line_end":1397,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":76918,"byte_end":76921,"line_start":1398,"line_end":1398,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(factorial(0), 1);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":76926,"byte_end":76958,"line_start":1399,"line_end":1399,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(factorial(1), 1);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":76963,"byte_end":76995,"line_start":1400,"line_end":1400,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(factorial(5), 120);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":77000,"byte_end":77034,"line_start":1401,"line_end":1401,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":77039,"byte_end":77046,"line_start":1402,"line_end":1402,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4600},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":77904,"byte_end":77907,"line_start":1433,"line_end":1433,"column_start":8,"column_end":11},"name":"min","qualname":"::iter::ParallelIterator::min","value":"pub fn min(Self) -> Option<Self::Item> where Self::Item: Ord","parent":{"krate":0,"index":4491},"children":[],"decl_id":null,"docs":" Computes the minimum of all the items in the iterator. If the\n iterator is empty, `None` is returned; otherwise, `Some(min)`\n is returned.","sig":null,"attributes":[{"value":"/ Computes the minimum of all the items in the iterator. If the","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":77186,"byte_end":77251,"line_start":1410,"line_end":1410,"column_start":5,"column_end":70}},{"value":"/ iterator is empty, `None` is returned; otherwise, `Some(min)`","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":77256,"byte_end":77321,"line_start":1411,"line_end":1411,"column_start":5,"column_end":70}},{"value":"/ is returned.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":77326,"byte_end":77342,"line_start":1412,"line_end":1412,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":77347,"byte_end":77350,"line_start":1413,"line_end":1413,"column_start":5,"column_end":8}},{"value":"/ Note that the order in which the items will be reduced is not","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":77355,"byte_end":77420,"line_start":1414,"line_end":1414,"column_start":5,"column_end":70}},{"value":"/ specified, so if the `Ord` impl is not truly associative, then","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":77425,"byte_end":77491,"line_start":1415,"line_end":1415,"column_start":5,"column_end":71}},{"value":"/ the results are not deterministic.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":77496,"byte_end":77534,"line_start":1416,"line_end":1416,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":77539,"byte_end":77542,"line_start":1417,"line_end":1417,"column_start":5,"column_end":8}},{"value":"/ Basically equivalent to `self.reduce_with(|a, b| cmp::min(a, b))`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":77547,"byte_end":77617,"line_start":1418,"line_end":1418,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":77622,"byte_end":77625,"line_start":1419,"line_end":1419,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":77630,"byte_end":77644,"line_start":1420,"line_end":1420,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":77649,"byte_end":77652,"line_start":1421,"line_end":1421,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":77657,"byte_end":77664,"line_start":1422,"line_end":1422,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":77669,"byte_end":77695,"line_start":1423,"line_end":1423,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":77700,"byte_end":77703,"line_start":1424,"line_end":1424,"column_start":5,"column_end":8}},{"value":"/ let a = [45, 74, 32];","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":77708,"byte_end":77733,"line_start":1425,"line_end":1425,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":77738,"byte_end":77741,"line_start":1426,"line_end":1426,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().min(), Some(&32));","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":77746,"byte_end":77792,"line_start":1427,"line_end":1427,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":77797,"byte_end":77800,"line_start":1428,"line_end":1428,"column_start":5,"column_end":8}},{"value":"/ let b: [i32; 0] = [];","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":77805,"byte_end":77830,"line_start":1429,"line_end":1429,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":77835,"byte_end":77838,"line_start":1430,"line_end":1430,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(b.par_iter().min(), None);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":77843,"byte_end":77884,"line_start":1431,"line_end":1431,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":77889,"byte_end":77896,"line_start":1432,"line_end":1432,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4601},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":78646,"byte_end":78652,"line_start":1457,"line_end":1457,"column_start":8,"column_end":14},"name":"min_by","qualname":"::iter::ParallelIterator::min_by","value":"pub fn min_by<F>(Self, F) -> Option<Self::Item> where F: Sync + Send +\nFn(&Self::Item, &Self::Item) -> Ordering","parent":{"krate":0,"index":4491},"children":[],"decl_id":null,"docs":" Computes the minimum of all the items in the iterator with respect to\n the given comparison function. If the iterator is empty, `None` is\n returned; otherwise, `Some(min)` is returned.","sig":null,"attributes":[{"value":"/ Computes the minimum of all the items in the iterator with respect to","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":78023,"byte_end":78096,"line_start":1440,"line_end":1440,"column_start":5,"column_end":78}},{"value":"/ the given comparison function. If the iterator is empty, `None` is","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":78101,"byte_end":78171,"line_start":1441,"line_end":1441,"column_start":5,"column_end":75}},{"value":"/ returned; otherwise, `Some(min)` is returned.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":78176,"byte_end":78225,"line_start":1442,"line_end":1442,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":78230,"byte_end":78233,"line_start":1443,"line_end":1443,"column_start":5,"column_end":8}},{"value":"/ Note that the order in which the items will be reduced is not","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":78238,"byte_end":78303,"line_start":1444,"line_end":1444,"column_start":5,"column_end":70}},{"value":"/ specified, so if the comparison function is not associative, then","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":78308,"byte_end":78377,"line_start":1445,"line_end":1445,"column_start":5,"column_end":74}},{"value":"/ the results are not deterministic.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":78382,"byte_end":78420,"line_start":1446,"line_end":1446,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":78425,"byte_end":78428,"line_start":1447,"line_end":1447,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":78433,"byte_end":78447,"line_start":1448,"line_end":1448,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":78452,"byte_end":78455,"line_start":1449,"line_end":1449,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":78460,"byte_end":78467,"line_start":1450,"line_end":1450,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":78472,"byte_end":78498,"line_start":1451,"line_end":1451,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":78503,"byte_end":78506,"line_start":1452,"line_end":1452,"column_start":5,"column_end":8}},{"value":"/ let a = [-3_i32, 77, 53, 240, -1];","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":78511,"byte_end":78549,"line_start":1453,"line_end":1453,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":78554,"byte_end":78557,"line_start":1454,"line_end":1454,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().min_by(|x, y| x.cmp(y)), Some(&-3));","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":78562,"byte_end":78626,"line_start":1455,"line_end":1455,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":78631,"byte_end":78638,"line_start":1456,"line_end":1456,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4608},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":79620,"byte_end":79630,"line_start":1488,"line_end":1488,"column_start":8,"column_end":18},"name":"min_by_key","qualname":"::iter::ParallelIterator::min_by_key","value":"pub fn min_by_key<K, F>(Self, F) -> Option<Self::Item> where K: Ord + Send,\nF: Sync + Send + Fn(&Self::Item) -> K","parent":{"krate":0,"index":4491},"children":[],"decl_id":null,"docs":" Computes the item that yields the minimum value for the given\n function. If the iterator is empty, `None` is returned;\n otherwise, `Some(item)` is returned.","sig":null,"attributes":[{"value":"/ Computes the item that yields the minimum value for the given","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":79022,"byte_end":79087,"line_start":1471,"line_end":1471,"column_start":5,"column_end":70}},{"value":"/ function. If the iterator is empty, `None` is returned;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":79092,"byte_end":79151,"line_start":1472,"line_end":1472,"column_start":5,"column_end":64}},{"value":"/ otherwise, `Some(item)` is returned.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":79156,"byte_end":79196,"line_start":1473,"line_end":1473,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":79201,"byte_end":79204,"line_start":1474,"line_end":1474,"column_start":5,"column_end":8}},{"value":"/ Note that the order in which the items will be reduced is not","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":79209,"byte_end":79274,"line_start":1475,"line_end":1475,"column_start":5,"column_end":70}},{"value":"/ specified, so if the `Ord` impl is not truly associative, then","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":79279,"byte_end":79345,"line_start":1476,"line_end":1476,"column_start":5,"column_end":71}},{"value":"/ the results are not deterministic.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":79350,"byte_end":79388,"line_start":1477,"line_end":1477,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":79393,"byte_end":79396,"line_start":1478,"line_end":1478,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":79401,"byte_end":79415,"line_start":1479,"line_end":1479,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":79420,"byte_end":79423,"line_start":1480,"line_end":1480,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":79428,"byte_end":79435,"line_start":1481,"line_end":1481,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":79440,"byte_end":79466,"line_start":1482,"line_end":1482,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":79471,"byte_end":79474,"line_start":1483,"line_end":1483,"column_start":5,"column_end":8}},{"value":"/ let a = [-3_i32, 34, 2, 5, -10, -3, -23];","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":79479,"byte_end":79524,"line_start":1484,"line_end":1484,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":79529,"byte_end":79532,"line_start":1485,"line_end":1485,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().min_by_key(|x| x.abs()), Some(&2));","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":79537,"byte_end":79600,"line_start":1486,"line_end":1486,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":79605,"byte_end":79612,"line_start":1487,"line_end":1487,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4620},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":80863,"byte_end":80866,"line_start":1531,"line_end":1531,"column_start":8,"column_end":11},"name":"max","qualname":"::iter::ParallelIterator::max","value":"pub fn max(Self) -> Option<Self::Item> where Self::Item: Ord","parent":{"krate":0,"index":4491},"children":[],"decl_id":null,"docs":" Computes the maximum of all the items in the iterator. If the\n iterator is empty, `None` is returned; otherwise, `Some(max)`\n is returned.","sig":null,"attributes":[{"value":"/ Computes the maximum of all the items in the iterator. If the","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":80145,"byte_end":80210,"line_start":1508,"line_end":1508,"column_start":5,"column_end":70}},{"value":"/ iterator is empty, `None` is returned; otherwise, `Some(max)`","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":80215,"byte_end":80280,"line_start":1509,"line_end":1509,"column_start":5,"column_end":70}},{"value":"/ is returned.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":80285,"byte_end":80301,"line_start":1510,"line_end":1510,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":80306,"byte_end":80309,"line_start":1511,"line_end":1511,"column_start":5,"column_end":8}},{"value":"/ Note that the order in which the items will be reduced is not","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":80314,"byte_end":80379,"line_start":1512,"line_end":1512,"column_start":5,"column_end":70}},{"value":"/ specified, so if the `Ord` impl is not truly associative, then","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":80384,"byte_end":80450,"line_start":1513,"line_end":1513,"column_start":5,"column_end":71}},{"value":"/ the results are not deterministic.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":80455,"byte_end":80493,"line_start":1514,"line_end":1514,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":80498,"byte_end":80501,"line_start":1515,"line_end":1515,"column_start":5,"column_end":8}},{"value":"/ Basically equivalent to `self.reduce_with(|a, b| cmp::max(a, b))`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":80506,"byte_end":80576,"line_start":1516,"line_end":1516,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":80581,"byte_end":80584,"line_start":1517,"line_end":1517,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":80589,"byte_end":80603,"line_start":1518,"line_end":1518,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":80608,"byte_end":80611,"line_start":1519,"line_end":1519,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":80616,"byte_end":80623,"line_start":1520,"line_end":1520,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":80628,"byte_end":80654,"line_start":1521,"line_end":1521,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":80659,"byte_end":80662,"line_start":1522,"line_end":1522,"column_start":5,"column_end":8}},{"value":"/ let a = [45, 74, 32];","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":80667,"byte_end":80692,"line_start":1523,"line_end":1523,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":80697,"byte_end":80700,"line_start":1524,"line_end":1524,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().max(), Some(&74));","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":80705,"byte_end":80751,"line_start":1525,"line_end":1525,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":80756,"byte_end":80759,"line_start":1526,"line_end":1526,"column_start":5,"column_end":8}},{"value":"/ let b: [i32; 0] = [];","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":80764,"byte_end":80789,"line_start":1527,"line_end":1527,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":80794,"byte_end":80797,"line_start":1528,"line_end":1528,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(b.par_iter().max(), None);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":80802,"byte_end":80843,"line_start":1529,"line_end":1529,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":80848,"byte_end":80855,"line_start":1530,"line_end":1530,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4621},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":81619,"byte_end":81625,"line_start":1555,"line_end":1555,"column_start":8,"column_end":14},"name":"max_by","qualname":"::iter::ParallelIterator::max_by","value":"pub fn max_by<F>(Self, F) -> Option<Self::Item> where F: Sync + Send +\nFn(&Self::Item, &Self::Item) -> Ordering","parent":{"krate":0,"index":4491},"children":[],"decl_id":null,"docs":" Computes the maximum of all the items in the iterator with respect to\n the given comparison function. If the iterator is empty, `None` is\n returned; otherwise, `Some(min)` is returned.","sig":null,"attributes":[{"value":"/ Computes the maximum of all the items in the iterator with respect to","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":80982,"byte_end":81055,"line_start":1538,"line_end":1538,"column_start":5,"column_end":78}},{"value":"/ the given comparison function. If the iterator is empty, `None` is","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":81060,"byte_end":81130,"line_start":1539,"line_end":1539,"column_start":5,"column_end":75}},{"value":"/ returned; otherwise, `Some(min)` is returned.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":81135,"byte_end":81184,"line_start":1540,"line_end":1540,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":81189,"byte_end":81192,"line_start":1541,"line_end":1541,"column_start":5,"column_end":8}},{"value":"/ Note that the order in which the items will be reduced is not","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":81197,"byte_end":81262,"line_start":1542,"line_end":1542,"column_start":5,"column_end":70}},{"value":"/ specified, so if the comparison function is not associative, then","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":81267,"byte_end":81336,"line_start":1543,"line_end":1543,"column_start":5,"column_end":74}},{"value":"/ the results are not deterministic.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":81341,"byte_end":81379,"line_start":1544,"line_end":1544,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":81384,"byte_end":81387,"line_start":1545,"line_end":1545,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":81392,"byte_end":81406,"line_start":1546,"line_end":1546,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":81411,"byte_end":81414,"line_start":1547,"line_end":1547,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":81419,"byte_end":81426,"line_start":1548,"line_end":1548,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":81431,"byte_end":81457,"line_start":1549,"line_end":1549,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":81462,"byte_end":81465,"line_start":1550,"line_end":1550,"column_start":5,"column_end":8}},{"value":"/ let a = [-3_i32, 77, 53, 240, -1];","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":81470,"byte_end":81508,"line_start":1551,"line_end":1551,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":81513,"byte_end":81516,"line_start":1552,"line_end":1552,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().max_by(|x, y| x.abs().cmp(&y.abs())), Some(&240));","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":81521,"byte_end":81599,"line_start":1553,"line_end":1553,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":81604,"byte_end":81611,"line_start":1554,"line_end":1554,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4628},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":82594,"byte_end":82604,"line_start":1586,"line_end":1586,"column_start":8,"column_end":18},"name":"max_by_key","qualname":"::iter::ParallelIterator::max_by_key","value":"pub fn max_by_key<K, F>(Self, F) -> Option<Self::Item> where K: Ord + Send,\nF: Sync + Send + Fn(&Self::Item) -> K","parent":{"krate":0,"index":4491},"children":[],"decl_id":null,"docs":" Computes the item that yields the maximum value for the given\n function. If the iterator is empty, `None` is returned;\n otherwise, `Some(item)` is returned.","sig":null,"attributes":[{"value":"/ Computes the item that yields the maximum value for the given","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":81995,"byte_end":82060,"line_start":1569,"line_end":1569,"column_start":5,"column_end":70}},{"value":"/ function. If the iterator is empty, `None` is returned;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":82065,"byte_end":82124,"line_start":1570,"line_end":1570,"column_start":5,"column_end":64}},{"value":"/ otherwise, `Some(item)` is returned.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":82129,"byte_end":82169,"line_start":1571,"line_end":1571,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":82174,"byte_end":82177,"line_start":1572,"line_end":1572,"column_start":5,"column_end":8}},{"value":"/ Note that the order in which the items will be reduced is not","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":82182,"byte_end":82247,"line_start":1573,"line_end":1573,"column_start":5,"column_end":70}},{"value":"/ specified, so if the `Ord` impl is not truly associative, then","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":82252,"byte_end":82318,"line_start":1574,"line_end":1574,"column_start":5,"column_end":71}},{"value":"/ the results are not deterministic.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":82323,"byte_end":82361,"line_start":1575,"line_end":1575,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":82366,"byte_end":82369,"line_start":1576,"line_end":1576,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":82374,"byte_end":82388,"line_start":1577,"line_end":1577,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":82393,"byte_end":82396,"line_start":1578,"line_end":1578,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":82401,"byte_end":82408,"line_start":1579,"line_end":1579,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":82413,"byte_end":82439,"line_start":1580,"line_end":1580,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":82444,"byte_end":82447,"line_start":1581,"line_end":1581,"column_start":5,"column_end":8}},{"value":"/ let a = [-3_i32, 34, 2, 5, -10, -3, -23];","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":82452,"byte_end":82497,"line_start":1582,"line_end":1582,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":82502,"byte_end":82505,"line_start":1583,"line_end":1583,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().max_by_key(|x| x.abs()), Some(&34));","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":82510,"byte_end":82574,"line_start":1584,"line_end":1584,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":82579,"byte_end":82586,"line_start":1585,"line_end":1585,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4640},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":83535,"byte_end":83540,"line_start":1622,"line_end":1622,"column_start":8,"column_end":13},"name":"chain","qualname":"::iter::ParallelIterator::chain","value":"pub fn chain<C>(Self, C) -> Chain<Self, C::Iter> where\nC: IntoParallelIterator<Item = Self::Item>","parent":{"krate":0,"index":4491},"children":[],"decl_id":null,"docs":" Takes two iterators and creates a new iterator over both.","sig":null,"attributes":[{"value":"/ Takes two iterators and creates a new iterator over both.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":83119,"byte_end":83180,"line_start":1606,"line_end":1606,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":83185,"byte_end":83188,"line_start":1607,"line_end":1607,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":83193,"byte_end":83207,"line_start":1608,"line_end":1608,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":83212,"byte_end":83215,"line_start":1609,"line_end":1609,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":83220,"byte_end":83227,"line_start":1610,"line_end":1610,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":83232,"byte_end":83258,"line_start":1611,"line_end":1611,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":83263,"byte_end":83266,"line_start":1612,"line_end":1612,"column_start":5,"column_end":8}},{"value":"/ let a = [0, 1, 2];","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":83271,"byte_end":83293,"line_start":1613,"line_end":1613,"column_start":5,"column_end":27}},{"value":"/ let b = [9, 8, 7];","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":83298,"byte_end":83320,"line_start":1614,"line_end":1614,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":83325,"byte_end":83328,"line_start":1615,"line_end":1615,"column_start":5,"column_end":8}},{"value":"/ let par_iter = a.par_iter().chain(b.par_iter());","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":83333,"byte_end":83385,"line_start":1616,"line_end":1616,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":83390,"byte_end":83393,"line_start":1617,"line_end":1617,"column_start":5,"column_end":8}},{"value":"/ let chained: Vec<_> = par_iter.cloned().collect();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":83398,"byte_end":83452,"line_start":1618,"line_end":1618,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":83457,"byte_end":83460,"line_start":1619,"line_end":1619,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&chained[..], &[0, 1, 2, 9, 8, 7]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":83465,"byte_end":83515,"line_start":1620,"line_end":1620,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":83520,"byte_end":83527,"line_start":1621,"line_end":1621,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4642},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":84634,"byte_end":84642,"line_start":1652,"line_end":1652,"column_start":8,"column_end":16},"name":"find_any","qualname":"::iter::ParallelIterator::find_any","value":"pub fn find_any<P>(Self, P) -> Option<Self::Item> where P: Fn(&Self::Item) ->\nbool + Sync + Send","parent":{"krate":0,"index":4491},"children":[],"decl_id":null,"docs":" Searches for **some** item in the parallel iterator that\n matches the given predicate and returns it. This operation\n is similar to [`find` on sequential iterators][find] but\n the item returned may not be the **first** one in the parallel\n sequence which matches, since we search the entire sequence in parallel.","sig":null,"attributes":[{"value":"/ Searches for **some** item in the parallel iterator that","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":83711,"byte_end":83771,"line_start":1629,"line_end":1629,"column_start":5,"column_end":65}},{"value":"/ matches the given predicate and returns it. This operation","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":83776,"byte_end":83838,"line_start":1630,"line_end":1630,"column_start":5,"column_end":67}},{"value":"/ is similar to [`find` on sequential iterators][find] but","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":83843,"byte_end":83903,"line_start":1631,"line_end":1631,"column_start":5,"column_end":65}},{"value":"/ the item returned may not be the **first** one in the parallel","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":83908,"byte_end":83974,"line_start":1632,"line_end":1632,"column_start":5,"column_end":71}},{"value":"/ sequence which matches, since we search the entire sequence in parallel.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":83979,"byte_end":84055,"line_start":1633,"line_end":1633,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":84060,"byte_end":84063,"line_start":1634,"line_end":1634,"column_start":5,"column_end":8}},{"value":"/ Once a match is found, we will attempt to stop processing","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":84068,"byte_end":84129,"line_start":1635,"line_end":1635,"column_start":5,"column_end":66}},{"value":"/ the rest of the items in the iterator as soon as possible","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":84134,"byte_end":84195,"line_start":1636,"line_end":1636,"column_start":5,"column_end":66}},{"value":"/ (just as `find` stops iterating once a match is found).","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":84200,"byte_end":84259,"line_start":1637,"line_end":1637,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":84264,"byte_end":84267,"line_start":1638,"line_end":1638,"column_start":5,"column_end":8}},{"value":"/ [find]: https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.find","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":84272,"byte_end":84350,"line_start":1639,"line_end":1639,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":84355,"byte_end":84358,"line_start":1640,"line_end":1640,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":84363,"byte_end":84377,"line_start":1641,"line_end":1641,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":84382,"byte_end":84385,"line_start":1642,"line_end":1642,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":84390,"byte_end":84397,"line_start":1643,"line_end":1643,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":84402,"byte_end":84428,"line_start":1644,"line_end":1644,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":84433,"byte_end":84436,"line_start":1645,"line_end":1645,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3, 3];","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":84441,"byte_end":84466,"line_start":1646,"line_end":1646,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":84471,"byte_end":84474,"line_start":1647,"line_end":1647,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().find_any(|&&x| x == 3), Some(&3));","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":84479,"byte_end":84541,"line_start":1648,"line_end":1648,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":84546,"byte_end":84549,"line_start":1649,"line_end":1649,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().find_any(|&&x| x == 100), None);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":84554,"byte_end":84614,"line_start":1650,"line_end":1650,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":84619,"byte_end":84626,"line_start":1651,"line_end":1651,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4644},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":85681,"byte_end":85691,"line_start":1682,"line_end":1682,"column_start":8,"column_end":18},"name":"find_first","qualname":"::iter::ParallelIterator::find_first","value":"pub fn find_first<P>(Self, P) -> Option<Self::Item> where P: Fn(&Self::Item)\n-> bool + Sync + Send","parent":{"krate":0,"index":4491},"children":[],"decl_id":null,"docs":" Searches for the sequentially **first** item in the parallel iterator\n that matches the given predicate and returns it.","sig":null,"attributes":[{"value":"/ Searches for the sequentially **first** item in the parallel iterator","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":84801,"byte_end":84874,"line_start":1659,"line_end":1659,"column_start":5,"column_end":78}},{"value":"/ that matches the given predicate and returns it.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":84879,"byte_end":84931,"line_start":1660,"line_end":1660,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":84936,"byte_end":84939,"line_start":1661,"line_end":1661,"column_start":5,"column_end":8}},{"value":"/ Once a match is found, all attempts to the right of the match","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":84944,"byte_end":85009,"line_start":1662,"line_end":1662,"column_start":5,"column_end":70}},{"value":"/ will be stopped, while attempts to the left must continue in case","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":85014,"byte_end":85083,"line_start":1663,"line_end":1663,"column_start":5,"column_end":74}},{"value":"/ an earlier match is found.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":85088,"byte_end":85118,"line_start":1664,"line_end":1664,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":85123,"byte_end":85126,"line_start":1665,"line_end":1665,"column_start":5,"column_end":8}},{"value":"/ Note that not all parallel iterators have a useful order, much like","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":85131,"byte_end":85202,"line_start":1666,"line_end":1666,"column_start":5,"column_end":76}},{"value":"/ sequential `HashMap` iteration, so \"first\" may be nebulous.  If you","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":85207,"byte_end":85278,"line_start":1667,"line_end":1667,"column_start":5,"column_end":76}},{"value":"/ just want the first match that discovered anywhere in the iterator,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":85283,"byte_end":85354,"line_start":1668,"line_end":1668,"column_start":5,"column_end":76}},{"value":"/ `find_any` is a better choice.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":85359,"byte_end":85393,"line_start":1669,"line_end":1669,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":85398,"byte_end":85401,"line_start":1670,"line_end":1670,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":85406,"byte_end":85420,"line_start":1671,"line_end":1671,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":85425,"byte_end":85428,"line_start":1672,"line_end":1672,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":85433,"byte_end":85440,"line_start":1673,"line_end":1673,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":85445,"byte_end":85471,"line_start":1674,"line_end":1674,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":85476,"byte_end":85479,"line_start":1675,"line_end":1675,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3, 3];","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":85484,"byte_end":85509,"line_start":1676,"line_end":1676,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":85514,"byte_end":85517,"line_start":1677,"line_end":1677,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().find_first(|&&x| x == 3), Some(&3));","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":85522,"byte_end":85586,"line_start":1678,"line_end":1678,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":85591,"byte_end":85594,"line_start":1679,"line_end":1679,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().find_first(|&&x| x == 100), None);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":85599,"byte_end":85661,"line_start":1680,"line_end":1680,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":85666,"byte_end":85673,"line_start":1681,"line_end":1681,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4646},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":86704,"byte_end":86713,"line_start":1711,"line_end":1711,"column_start":8,"column_end":17},"name":"find_last","qualname":"::iter::ParallelIterator::find_last","value":"pub fn find_last<P>(Self, P) -> Option<Self::Item> where P: Fn(&Self::Item) ->\nbool + Sync + Send","parent":{"krate":0,"index":4491},"children":[],"decl_id":null,"docs":" Searches for the sequentially **last** item in the parallel iterator\n that matches the given predicate and returns it.","sig":null,"attributes":[{"value":"/ Searches for the sequentially **last** item in the parallel iterator","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":85867,"byte_end":85939,"line_start":1689,"line_end":1689,"column_start":5,"column_end":77}},{"value":"/ that matches the given predicate and returns it.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":85944,"byte_end":85996,"line_start":1690,"line_end":1690,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":86001,"byte_end":86004,"line_start":1691,"line_end":1691,"column_start":5,"column_end":8}},{"value":"/ Once a match is found, all attempts to the left of the match","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":86009,"byte_end":86073,"line_start":1692,"line_end":1692,"column_start":5,"column_end":69}},{"value":"/ will be stopped, while attempts to the right must continue in case","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":86078,"byte_end":86148,"line_start":1693,"line_end":1693,"column_start":5,"column_end":75}},{"value":"/ a later match is found.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":86153,"byte_end":86180,"line_start":1694,"line_end":1694,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":86185,"byte_end":86188,"line_start":1695,"line_end":1695,"column_start":5,"column_end":8}},{"value":"/ Note that not all parallel iterators have a useful order, much like","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":86193,"byte_end":86264,"line_start":1696,"line_end":1696,"column_start":5,"column_end":76}},{"value":"/ sequential `HashMap` iteration, so \"last\" may be nebulous.  When the","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":86269,"byte_end":86341,"line_start":1697,"line_end":1697,"column_start":5,"column_end":77}},{"value":"/ order doesn't actually matter to you, `find_any` is a better choice.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":86346,"byte_end":86418,"line_start":1698,"line_end":1698,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":86423,"byte_end":86426,"line_start":1699,"line_end":1699,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":86431,"byte_end":86445,"line_start":1700,"line_end":1700,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":86450,"byte_end":86453,"line_start":1701,"line_end":1701,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":86458,"byte_end":86465,"line_start":1702,"line_end":1702,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":86470,"byte_end":86496,"line_start":1703,"line_end":1703,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":86501,"byte_end":86504,"line_start":1704,"line_end":1704,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3, 3];","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":86509,"byte_end":86534,"line_start":1705,"line_end":1705,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":86539,"byte_end":86542,"line_start":1706,"line_end":1706,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().find_last(|&&x| x == 3), Some(&3));","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":86547,"byte_end":86610,"line_start":1707,"line_end":1707,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":86615,"byte_end":86618,"line_start":1708,"line_end":1708,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().find_last(|&&x| x == 100), None);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":86623,"byte_end":86684,"line_start":1709,"line_end":1709,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":86689,"byte_end":86696,"line_start":1710,"line_end":1710,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4648},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":87790,"byte_end":87802,"line_start":1741,"line_end":1741,"column_start":8,"column_end":20},"name":"find_map_any","qualname":"::iter::ParallelIterator::find_map_any","value":"pub fn find_map_any<P, R>(Self, P) -> Option<R> where P: Fn(Self::Item) ->\nOption<R> + Sync + Send, R: Send","parent":{"krate":0,"index":4491},"children":[],"decl_id":null,"docs":" Applies the given predicate to the items in the parallel iterator\n and returns **any** non-None result of the map operation.","sig":null,"attributes":[{"value":"/ Applies the given predicate to the items in the parallel iterator","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":86888,"byte_end":86957,"line_start":1718,"line_end":1718,"column_start":5,"column_end":74}},{"value":"/ and returns **any** non-None result of the map operation.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":86962,"byte_end":87023,"line_start":1719,"line_end":1719,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":87028,"byte_end":87031,"line_start":1720,"line_end":1720,"column_start":5,"column_end":8}},{"value":"/ Once a non-None value is produced from the map operation, we will","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":87036,"byte_end":87105,"line_start":1721,"line_end":1721,"column_start":5,"column_end":74}},{"value":"/ attempt to stop processing the rest of the items in the iterator","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":87110,"byte_end":87178,"line_start":1722,"line_end":1722,"column_start":5,"column_end":73}},{"value":"/ as soon as possible.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":87183,"byte_end":87207,"line_start":1723,"line_end":1723,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":87212,"byte_end":87215,"line_start":1724,"line_end":1724,"column_start":5,"column_end":8}},{"value":"/ Note that this method only returns **some** item in the parallel","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":87220,"byte_end":87288,"line_start":1725,"line_end":1725,"column_start":5,"column_end":73}},{"value":"/ iterator that is not None from the map predicate. The item returned","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":87293,"byte_end":87364,"line_start":1726,"line_end":1726,"column_start":5,"column_end":76}},{"value":"/ may not be the **first** non-None value produced in the parallel","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":87369,"byte_end":87437,"line_start":1727,"line_end":1727,"column_start":5,"column_end":73}},{"value":"/ sequence, since the entire sequence is mapped over in parallel.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":87442,"byte_end":87509,"line_start":1728,"line_end":1728,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":87514,"byte_end":87517,"line_start":1729,"line_end":1729,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":87522,"byte_end":87536,"line_start":1730,"line_end":1730,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":87541,"byte_end":87544,"line_start":1731,"line_end":1731,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":87549,"byte_end":87556,"line_start":1732,"line_end":1732,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":87561,"byte_end":87587,"line_start":1733,"line_end":1733,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":87592,"byte_end":87595,"line_start":1734,"line_end":1734,"column_start":5,"column_end":8}},{"value":"/ let c = [\"lol\", \"NaN\", \"5\", \"5\"];","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":87600,"byte_end":87637,"line_start":1735,"line_end":1735,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":87642,"byte_end":87645,"line_start":1736,"line_end":1736,"column_start":5,"column_end":8}},{"value":"/ let found_number = c.par_iter().find_map_any(|s| s.parse().ok());","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":87650,"byte_end":87719,"line_start":1737,"line_end":1737,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":87724,"byte_end":87727,"line_start":1738,"line_end":1738,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(found_number, Some(5));","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":87732,"byte_end":87770,"line_start":1739,"line_end":1739,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":87775,"byte_end":87782,"line_start":1740,"line_end":1740,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4653},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":88992,"byte_end":89006,"line_start":1775,"line_end":1775,"column_start":8,"column_end":22},"name":"find_map_first","qualname":"::iter::ParallelIterator::find_map_first","value":"pub fn find_map_first<P, R>(Self, P) -> Option<R> where P: Fn(Self::Item) ->\nOption<R> + Sync + Send, R: Send","parent":{"krate":0,"index":4491},"children":[],"decl_id":null,"docs":" Applies the given predicate to the items in the parallel iterator and\n returns the sequentially **first** non-None result of the map operation.","sig":null,"attributes":[{"value":"/ Applies the given predicate to the items in the parallel iterator and","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":88051,"byte_end":88124,"line_start":1752,"line_end":1752,"column_start":5,"column_end":78}},{"value":"/ returns the sequentially **first** non-None result of the map operation.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":88129,"byte_end":88205,"line_start":1753,"line_end":1753,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":88210,"byte_end":88213,"line_start":1754,"line_end":1754,"column_start":5,"column_end":8}},{"value":"/ Once a non-None value is produced from the map operation, all attempts","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":88218,"byte_end":88292,"line_start":1755,"line_end":1755,"column_start":5,"column_end":79}},{"value":"/ to the right of the match will be stopped, while attempts to the left","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":88297,"byte_end":88370,"line_start":1756,"line_end":1756,"column_start":5,"column_end":78}},{"value":"/ must continue in case an earlier match is found.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":88375,"byte_end":88427,"line_start":1757,"line_end":1757,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":88432,"byte_end":88435,"line_start":1758,"line_end":1758,"column_start":5,"column_end":8}},{"value":"/ Note that not all parallel iterators have a useful order, much like","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":88440,"byte_end":88511,"line_start":1759,"line_end":1759,"column_start":5,"column_end":76}},{"value":"/ sequential `HashMap` iteration, so \"first\" may be nebulous. If you","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":88516,"byte_end":88586,"line_start":1760,"line_end":1760,"column_start":5,"column_end":75}},{"value":"/ just want the first non-None value discovered anywhere in the iterator,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":88591,"byte_end":88666,"line_start":1761,"line_end":1761,"column_start":5,"column_end":80}},{"value":"/ `find_map_any` is a better choice.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":88671,"byte_end":88709,"line_start":1762,"line_end":1762,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":88714,"byte_end":88717,"line_start":1763,"line_end":1763,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":88722,"byte_end":88736,"line_start":1764,"line_end":1764,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":88741,"byte_end":88744,"line_start":1765,"line_end":1765,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":88749,"byte_end":88756,"line_start":1766,"line_end":1766,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":88761,"byte_end":88787,"line_start":1767,"line_end":1767,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":88792,"byte_end":88795,"line_start":1768,"line_end":1768,"column_start":5,"column_end":8}},{"value":"/ let c = [\"lol\", \"NaN\", \"2\", \"5\"];","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":88800,"byte_end":88837,"line_start":1769,"line_end":1769,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":88842,"byte_end":88845,"line_start":1770,"line_end":1770,"column_start":5,"column_end":8}},{"value":"/ let first_number = c.par_iter().find_map_first(|s| s.parse().ok());","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":88850,"byte_end":88921,"line_start":1771,"line_end":1771,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":88926,"byte_end":88929,"line_start":1772,"line_end":1772,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(first_number, Some(2));","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":88934,"byte_end":88972,"line_start":1773,"line_end":1773,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":88977,"byte_end":88984,"line_start":1774,"line_end":1774,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4658},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":90191,"byte_end":90204,"line_start":1809,"line_end":1809,"column_start":8,"column_end":21},"name":"find_map_last","qualname":"::iter::ParallelIterator::find_map_last","value":"pub fn find_map_last<P, R>(Self, P) -> Option<R> where P: Fn(Self::Item) ->\nOption<R> + Sync + Send, R: Send","parent":{"krate":0,"index":4491},"children":[],"decl_id":null,"docs":" Applies the given predicate to the items in the parallel iterator and\n returns the sequentially **last** non-None result of the map operation.","sig":null,"attributes":[{"value":"/ Applies the given predicate to the items in the parallel iterator and","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":89257,"byte_end":89330,"line_start":1786,"line_end":1786,"column_start":5,"column_end":78}},{"value":"/ returns the sequentially **last** non-None result of the map operation.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":89335,"byte_end":89410,"line_start":1787,"line_end":1787,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":89415,"byte_end":89418,"line_start":1788,"line_end":1788,"column_start":5,"column_end":8}},{"value":"/ Once a non-None value is produced from the map operation, all attempts","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":89423,"byte_end":89497,"line_start":1789,"line_end":1789,"column_start":5,"column_end":79}},{"value":"/ to the left of the match will be stopped, while attempts to the right","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":89502,"byte_end":89575,"line_start":1790,"line_end":1790,"column_start":5,"column_end":78}},{"value":"/ must continue in case a later match is found.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":89580,"byte_end":89629,"line_start":1791,"line_end":1791,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":89634,"byte_end":89637,"line_start":1792,"line_end":1792,"column_start":5,"column_end":8}},{"value":"/ Note that not all parallel iterators have a useful order, much like","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":89642,"byte_end":89713,"line_start":1793,"line_end":1793,"column_start":5,"column_end":76}},{"value":"/ sequential `HashMap` iteration, so \"first\" may be nebulous. If you","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":89718,"byte_end":89788,"line_start":1794,"line_end":1794,"column_start":5,"column_end":75}},{"value":"/ just want the first non-None value discovered anywhere in the iterator,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":89793,"byte_end":89868,"line_start":1795,"line_end":1795,"column_start":5,"column_end":80}},{"value":"/ `find_map_any` is a better choice.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":89873,"byte_end":89911,"line_start":1796,"line_end":1796,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":89916,"byte_end":89919,"line_start":1797,"line_end":1797,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":89924,"byte_end":89938,"line_start":1798,"line_end":1798,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":89943,"byte_end":89946,"line_start":1799,"line_end":1799,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":89951,"byte_end":89958,"line_start":1800,"line_end":1800,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":89963,"byte_end":89989,"line_start":1801,"line_end":1801,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":89994,"byte_end":89997,"line_start":1802,"line_end":1802,"column_start":5,"column_end":8}},{"value":"/ let c = [\"lol\", \"NaN\", \"2\", \"5\"];","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":90002,"byte_end":90039,"line_start":1803,"line_end":1803,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":90044,"byte_end":90047,"line_start":1804,"line_end":1804,"column_start":5,"column_end":8}},{"value":"/ let last_number = c.par_iter().find_map_last(|s| s.parse().ok());","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":90052,"byte_end":90121,"line_start":1805,"line_end":1805,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":90126,"byte_end":90129,"line_start":1806,"line_end":1806,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(last_number, Some(5));","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":90134,"byte_end":90171,"line_start":1807,"line_end":1807,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":90176,"byte_end":90183,"line_start":1808,"line_end":1808,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4663},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":90621,"byte_end":90625,"line_start":1823,"line_end":1823,"column_start":8,"column_end":12},"name":"find","qualname":"::iter::ParallelIterator::find","value":"pub fn find<P>(Self, P) -> Option<Self::Item> where P: Fn(&Self::Item) ->\nbool + Sync + Send","parent":{"krate":0,"index":4491},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note =\n             \"parallel `find` does not search in order -- use `find_any`, \\\\\n                         `find_first`, or `find_last`\")","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":90473,"byte_end":90613,"line_start":1821,"line_end":1822,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4665},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":91330,"byte_end":91333,"line_start":1847,"line_end":1847,"column_start":8,"column_end":11},"name":"any","qualname":"::iter::ParallelIterator::any","value":"pub fn any<P>(Self, P) -> bool where P: Fn(Self::Item) -> bool + Sync + Send","parent":{"krate":0,"index":4491},"children":[],"decl_id":null,"docs":" Searches for **some** item in the parallel iterator that\n matches the given predicate, and if so returns true.  Once\n a match is found, we'll attempt to stop process the rest\n of the items.  Proving that there's no match, returning false,\n does require visiting every item.","sig":null,"attributes":[{"value":"/ Searches for **some** item in the parallel iterator that","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":90781,"byte_end":90841,"line_start":1830,"line_end":1830,"column_start":5,"column_end":65}},{"value":"/ matches the given predicate, and if so returns true.  Once","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":90846,"byte_end":90908,"line_start":1831,"line_end":1831,"column_start":5,"column_end":67}},{"value":"/ a match is found, we'll attempt to stop process the rest","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":90913,"byte_end":90973,"line_start":1832,"line_end":1832,"column_start":5,"column_end":65}},{"value":"/ of the items.  Proving that there's no match, returning false,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":90978,"byte_end":91044,"line_start":1833,"line_end":1833,"column_start":5,"column_end":71}},{"value":"/ does require visiting every item.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":91049,"byte_end":91086,"line_start":1834,"line_end":1834,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":91091,"byte_end":91094,"line_start":1835,"line_end":1835,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":91099,"byte_end":91113,"line_start":1836,"line_end":1836,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":91118,"byte_end":91121,"line_start":1837,"line_end":1837,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":91126,"byte_end":91133,"line_start":1838,"line_end":1838,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":91138,"byte_end":91164,"line_start":1839,"line_end":1839,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":91169,"byte_end":91172,"line_start":1840,"line_end":1840,"column_start":5,"column_end":8}},{"value":"/ let a = [0, 12, 3, 4, 0, 23, 0];","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":91177,"byte_end":91213,"line_start":1841,"line_end":1841,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":91218,"byte_end":91221,"line_start":1842,"line_end":1842,"column_start":5,"column_end":8}},{"value":"/ let is_valid = a.par_iter().any(|&x| x > 10);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":91226,"byte_end":91275,"line_start":1843,"line_end":1843,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":91280,"byte_end":91283,"line_start":1844,"line_end":1844,"column_start":5,"column_end":8}},{"value":"/ assert!(is_valid);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":91288,"byte_end":91310,"line_start":1845,"line_end":1845,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":91315,"byte_end":91322,"line_start":1846,"line_end":1846,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4667},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":91961,"byte_end":91964,"line_start":1869,"line_end":1869,"column_start":8,"column_end":11},"name":"all","qualname":"::iter::ParallelIterator::all","value":"pub fn all<P>(Self, P) -> bool where P: Fn(Self::Item) -> bool + Sync + Send","parent":{"krate":0,"index":4491},"children":[],"decl_id":null,"docs":" Tests that every item in the parallel iterator matches the given\n predicate, and if so returns true.  If a counter-example is found,\n we'll attempt to stop processing more items, then return false.","sig":null,"attributes":[{"value":"/ Tests that every item in the parallel iterator matches the given","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":91501,"byte_end":91569,"line_start":1854,"line_end":1854,"column_start":5,"column_end":73}},{"value":"/ predicate, and if so returns true.  If a counter-example is found,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":91574,"byte_end":91644,"line_start":1855,"line_end":1855,"column_start":5,"column_end":75}},{"value":"/ we'll attempt to stop processing more items, then return false.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":91649,"byte_end":91716,"line_start":1856,"line_end":1856,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":91721,"byte_end":91724,"line_start":1857,"line_end":1857,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":91729,"byte_end":91743,"line_start":1858,"line_end":1858,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":91748,"byte_end":91751,"line_start":1859,"line_end":1859,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":91756,"byte_end":91763,"line_start":1860,"line_end":1860,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":91768,"byte_end":91794,"line_start":1861,"line_end":1861,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":91799,"byte_end":91802,"line_start":1862,"line_end":1862,"column_start":5,"column_end":8}},{"value":"/ let a = [0, 12, 3, 4, 0, 23, 0];","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":91807,"byte_end":91843,"line_start":1863,"line_end":1863,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":91848,"byte_end":91851,"line_start":1864,"line_end":1864,"column_start":5,"column_end":8}},{"value":"/ let is_valid = a.par_iter().all(|&x| x > 10);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":91856,"byte_end":91905,"line_start":1865,"line_end":1865,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":91910,"byte_end":91913,"line_start":1866,"line_end":1866,"column_start":5,"column_end":8}},{"value":"/ assert!(!is_valid);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":91918,"byte_end":91941,"line_start":1867,"line_end":1867,"column_start":5,"column_end":28}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":91946,"byte_end":91953,"line_start":1868,"line_end":1868,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4670},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":92946,"byte_end":92956,"line_start":1903,"line_end":1903,"column_start":8,"column_end":18},"name":"while_some","qualname":"::iter::ParallelIterator::while_some","value":"pub fn while_some<T>(Self) -> WhileSome<Self> where\nSelf: ParallelIterator<Item = Option<T>>, T: Send","parent":{"krate":0,"index":4491},"children":[],"decl_id":null,"docs":" Creates an iterator over the `Some` items of this iterator, halting\n as soon as any `None` is found.","sig":null,"attributes":[{"value":"/ Creates an iterator over the `Some` items of this iterator, halting","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":92213,"byte_end":92284,"line_start":1881,"line_end":1881,"column_start":5,"column_end":76}},{"value":"/ as soon as any `None` is found.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":92289,"byte_end":92324,"line_start":1882,"line_end":1882,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":92329,"byte_end":92332,"line_start":1883,"line_end":1883,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":92337,"byte_end":92351,"line_start":1884,"line_end":1884,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":92356,"byte_end":92359,"line_start":1885,"line_end":1885,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":92364,"byte_end":92371,"line_start":1886,"line_end":1886,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":92376,"byte_end":92402,"line_start":1887,"line_end":1887,"column_start":5,"column_end":31}},{"value":"/ use std::sync::atomic::{AtomicUsize, Ordering};","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":92407,"byte_end":92458,"line_start":1888,"line_end":1888,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":92463,"byte_end":92466,"line_start":1889,"line_end":1889,"column_start":5,"column_end":8}},{"value":"/ let counter = AtomicUsize::new(0);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":92471,"byte_end":92509,"line_start":1890,"line_end":1890,"column_start":5,"column_end":43}},{"value":"/ let value = (0_i32..2048)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":92514,"byte_end":92543,"line_start":1891,"line_end":1891,"column_start":5,"column_end":34}},{"value":"/     .into_par_iter()","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":92548,"byte_end":92572,"line_start":1892,"line_end":1892,"column_start":5,"column_end":29}},{"value":"/     .map(|x| {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":92577,"byte_end":92595,"line_start":1893,"line_end":1893,"column_start":5,"column_end":23}},{"value":"/              counter.fetch_add(1, Ordering::SeqCst);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":92600,"byte_end":92656,"line_start":1894,"line_end":1894,"column_start":5,"column_end":61}},{"value":"/              if x < 1024 { Some(x) } else { None }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":92661,"byte_end":92715,"line_start":1895,"line_end":1895,"column_start":5,"column_end":59}},{"value":"/          })","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":92720,"byte_end":92735,"line_start":1896,"line_end":1896,"column_start":5,"column_end":20}},{"value":"/     .while_some()","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":92740,"byte_end":92761,"line_start":1897,"line_end":1897,"column_start":5,"column_end":26}},{"value":"/     .max();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":92766,"byte_end":92781,"line_start":1898,"line_end":1898,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":92786,"byte_end":92789,"line_start":1899,"line_end":1899,"column_start":5,"column_end":8}},{"value":"/ assert!(value < Some(1024));","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":92794,"byte_end":92826,"line_start":1900,"line_end":1900,"column_start":5,"column_end":37}},{"value":"/ assert!(counter.load(Ordering::SeqCst) < 2048); // should not have visited every single one","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":92831,"byte_end":92926,"line_start":1901,"line_end":1901,"column_start":5,"column_end":100}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":92931,"byte_end":92938,"line_start":1902,"line_end":1902,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4672},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":94267,"byte_end":94277,"line_start":1941,"line_end":1941,"column_start":8,"column_end":18},"name":"panic_fuse","qualname":"::iter::ParallelIterator::panic_fuse","value":"pub fn panic_fuse(Self) -> PanicFuse<Self>","parent":{"krate":0,"index":4491},"children":[],"decl_id":null,"docs":" Wraps an iterator with a fuse in case of panics, to halt all threads\n as soon as possible.","sig":null,"attributes":[{"value":"/ Wraps an iterator with a fuse in case of panics, to halt all threads","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":93108,"byte_end":93180,"line_start":1911,"line_end":1911,"column_start":5,"column_end":77}},{"value":"/ as soon as possible.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":93185,"byte_end":93209,"line_start":1912,"line_end":1912,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":93214,"byte_end":93217,"line_start":1913,"line_end":1913,"column_start":5,"column_end":8}},{"value":"/ Panics within parallel iterators are always propagated to the caller,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":93222,"byte_end":93295,"line_start":1914,"line_end":1914,"column_start":5,"column_end":78}},{"value":"/ but they don't always halt the rest of the iterator right away, due to","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":93300,"byte_end":93374,"line_start":1915,"line_end":1915,"column_start":5,"column_end":79}},{"value":"/ the internal semantics of [`join`]. This adaptor makes a greater effort","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":93379,"byte_end":93454,"line_start":1916,"line_end":1916,"column_start":5,"column_end":80}},{"value":"/ to stop processing other items sooner, with the cost of additional","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":93459,"byte_end":93529,"line_start":1917,"line_end":1917,"column_start":5,"column_end":75}},{"value":"/ synchronization overhead, which may also inhibit some optimizations.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":93534,"byte_end":93606,"line_start":1918,"line_end":1918,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":93611,"byte_end":93614,"line_start":1919,"line_end":1919,"column_start":5,"column_end":8}},{"value":"/ [`join`]: ../fn.join.html#panics","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":93619,"byte_end":93655,"line_start":1920,"line_end":1920,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":93660,"byte_end":93663,"line_start":1921,"line_end":1921,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":93668,"byte_end":93682,"line_start":1922,"line_end":1922,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":93687,"byte_end":93690,"line_start":1923,"line_end":1923,"column_start":5,"column_end":8}},{"value":"/ If this code didn't use `panic_fuse()`, it would continue processing","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":93695,"byte_end":93767,"line_start":1924,"line_end":1924,"column_start":5,"column_end":77}},{"value":"/ many more items in other threads (with long sleep delays) before the","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":93772,"byte_end":93844,"line_start":1925,"line_end":1925,"column_start":5,"column_end":77}},{"value":"/ panic is finally propagated.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":93849,"byte_end":93881,"line_start":1926,"line_end":1926,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":93886,"byte_end":93889,"line_start":1927,"line_end":1927,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":93894,"byte_end":93913,"line_start":1928,"line_end":1928,"column_start":5,"column_end":24}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":93918,"byte_end":93944,"line_start":1929,"line_end":1929,"column_start":5,"column_end":31}},{"value":"/ use std::{thread, time};","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":93949,"byte_end":93977,"line_start":1930,"line_end":1930,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":93982,"byte_end":93985,"line_start":1931,"line_end":1931,"column_start":5,"column_end":8}},{"value":"/ (0..1_000_000)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":93990,"byte_end":94008,"line_start":1932,"line_end":1932,"column_start":5,"column_end":23}},{"value":"/     .into_par_iter()","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":94013,"byte_end":94037,"line_start":1933,"line_end":1933,"column_start":5,"column_end":29}},{"value":"/     .panic_fuse()","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":94042,"byte_end":94063,"line_start":1934,"line_end":1934,"column_start":5,"column_end":26}},{"value":"/     .for_each(|i| {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":94068,"byte_end":94091,"line_start":1935,"line_end":1935,"column_start":5,"column_end":28}},{"value":"/         // simulate some work","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":94096,"byte_end":94129,"line_start":1936,"line_end":1936,"column_start":5,"column_end":38}},{"value":"/         thread::sleep(time::Duration::from_secs(1));","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":94134,"byte_end":94190,"line_start":1937,"line_end":1937,"column_start":5,"column_end":61}},{"value":"/         assert!(i > 0); // oops!","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":94195,"byte_end":94231,"line_start":1938,"line_end":1938,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":94236,"byte_end":94247,"line_start":1939,"line_end":1939,"column_start":5,"column_end":16}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":94252,"byte_end":94259,"line_start":1940,"line_end":1940,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4673},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":95317,"byte_end":95324,"line_start":1969,"line_end":1969,"column_start":8,"column_end":15},"name":"collect","qualname":"::iter::ParallelIterator::collect","value":"pub fn collect<C>(Self) -> C where C: FromParallelIterator<Self::Item>","parent":{"krate":0,"index":4491},"children":[],"decl_id":null,"docs":" Creates a fresh collection containing all the elements produced\n by this parallel iterator.","sig":null,"attributes":[{"value":"/ Creates a fresh collection containing all the elements produced","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":94345,"byte_end":94412,"line_start":1945,"line_end":1945,"column_start":5,"column_end":72}},{"value":"/ by this parallel iterator.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":94417,"byte_end":94447,"line_start":1946,"line_end":1946,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":94452,"byte_end":94455,"line_start":1947,"line_end":1947,"column_start":5,"column_end":8}},{"value":"/ You may prefer [`collect_into_vec()`] implemented on","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":94460,"byte_end":94516,"line_start":1948,"line_end":1948,"column_start":5,"column_end":61}},{"value":"/ [`IndexedParallelIterator`], if your underlying iterator also implements","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":94521,"byte_end":94597,"line_start":1949,"line_end":1949,"column_start":5,"column_end":81}},{"value":"/ it. [`collect_into_vec()`] allocates efficiently with precise knowledge","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":94602,"byte_end":94677,"line_start":1950,"line_end":1950,"column_start":5,"column_end":80}},{"value":"/ of how many elements the iterator contains, and even allows you to reuse","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":94682,"byte_end":94758,"line_start":1951,"line_end":1951,"column_start":5,"column_end":81}},{"value":"/ an existing vector's backing store rather than allocating a fresh vector.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":94763,"byte_end":94840,"line_start":1952,"line_end":1952,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":94845,"byte_end":94848,"line_start":1953,"line_end":1953,"column_start":5,"column_end":8}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":94853,"byte_end":94920,"line_start":1954,"line_end":1954,"column_start":5,"column_end":72}},{"value":"/ [`collect_into_vec()`]:","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":94925,"byte_end":94952,"line_start":1955,"line_end":1955,"column_start":5,"column_end":32}},{"value":"/     trait.IndexedParallelIterator.html#method.collect_into_vec","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":94957,"byte_end":95023,"line_start":1956,"line_end":1956,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":95028,"byte_end":95031,"line_start":1957,"line_end":1957,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":95036,"byte_end":95050,"line_start":1958,"line_end":1958,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":95055,"byte_end":95058,"line_start":1959,"line_end":1959,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":95063,"byte_end":95070,"line_start":1960,"line_end":1960,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":95075,"byte_end":95101,"line_start":1961,"line_end":1961,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":95106,"byte_end":95109,"line_start":1962,"line_end":1962,"column_start":5,"column_end":8}},{"value":"/ let sync_vec: Vec<_> = (0..100).into_iter().collect();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":95114,"byte_end":95172,"line_start":1963,"line_end":1963,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":95177,"byte_end":95180,"line_start":1964,"line_end":1964,"column_start":5,"column_end":8}},{"value":"/ let async_vec: Vec<_> = (0..100).into_par_iter().collect();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":95185,"byte_end":95248,"line_start":1965,"line_end":1965,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":95253,"byte_end":95256,"line_start":1966,"line_end":1966,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(sync_vec, async_vec);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":95261,"byte_end":95297,"line_start":1967,"line_end":1967,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":95302,"byte_end":95309,"line_start":1968,"line_end":1968,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4675},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":96576,"byte_end":96581,"line_start":2010,"line_end":2010,"column_start":8,"column_end":13},"name":"unzip","qualname":"::iter::ParallelIterator::unzip","value":"pub fn unzip<A, B, FromA, FromB>(Self) -> (FromA, FromB) where\nSelf: ParallelIterator<Item = (A, B)>, FromA: Default + Send +\nParallelExtend<A>, FromB: Default + Send + ParallelExtend<B>, A: Send, B: Send","parent":{"krate":0,"index":4491},"children":[],"decl_id":null,"docs":" Unzips the items of a parallel iterator into a pair of arbitrary\n `ParallelExtend` containers.","sig":null,"attributes":[{"value":"/ Unzips the items of a parallel iterator into a pair of arbitrary","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":95442,"byte_end":95510,"line_start":1976,"line_end":1976,"column_start":5,"column_end":73}},{"value":"/ `ParallelExtend` containers.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":95515,"byte_end":95547,"line_start":1977,"line_end":1977,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":95552,"byte_end":95555,"line_start":1978,"line_end":1978,"column_start":5,"column_end":8}},{"value":"/ You may prefer to use `unzip_into_vecs()`, which allocates more","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":95560,"byte_end":95627,"line_start":1979,"line_end":1979,"column_start":5,"column_end":72}},{"value":"/ efficiently with precise knowledge of how many elements the","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":95632,"byte_end":95695,"line_start":1980,"line_end":1980,"column_start":5,"column_end":68}},{"value":"/ iterator contains, and even allows you to reuse existing","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":95700,"byte_end":95760,"line_start":1981,"line_end":1981,"column_start":5,"column_end":65}},{"value":"/ vectors' backing stores rather than allocating fresh vectors.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":95765,"byte_end":95830,"line_start":1982,"line_end":1982,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":95835,"byte_end":95838,"line_start":1983,"line_end":1983,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":95843,"byte_end":95857,"line_start":1984,"line_end":1984,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":95862,"byte_end":95865,"line_start":1985,"line_end":1985,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":95870,"byte_end":95877,"line_start":1986,"line_end":1986,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":95882,"byte_end":95908,"line_start":1987,"line_end":1987,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":95913,"byte_end":95916,"line_start":1988,"line_end":1988,"column_start":5,"column_end":8}},{"value":"/ let a = [(0, 1), (1, 2), (2, 3), (3, 4)];","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":95921,"byte_end":95966,"line_start":1989,"line_end":1989,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":95971,"byte_end":95974,"line_start":1990,"line_end":1990,"column_start":5,"column_end":8}},{"value":"/ let (left, right): (Vec<_>, Vec<_>) = a.par_iter().cloned().unzip();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":95979,"byte_end":96051,"line_start":1991,"line_end":1991,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":96056,"byte_end":96059,"line_start":1992,"line_end":1992,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(left, [0, 1, 2, 3]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":96064,"byte_end":96099,"line_start":1993,"line_end":1993,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(right, [1, 2, 3, 4]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":96104,"byte_end":96140,"line_start":1994,"line_end":1994,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":96145,"byte_end":96152,"line_start":1995,"line_end":1995,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":96157,"byte_end":96160,"line_start":1996,"line_end":1996,"column_start":5,"column_end":8}},{"value":"/ Nested pairs can be unzipped too.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":96165,"byte_end":96202,"line_start":1997,"line_end":1997,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":96207,"byte_end":96210,"line_start":1998,"line_end":1998,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":96215,"byte_end":96222,"line_start":1999,"line_end":1999,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":96227,"byte_end":96253,"line_start":2000,"line_end":2000,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":96258,"byte_end":96261,"line_start":2001,"line_end":2001,"column_start":5,"column_end":8}},{"value":"/ let (values, (squares, cubes)): (Vec<_>, (Vec<_>, Vec<_>)) = (0..4).into_par_iter()","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":96266,"byte_end":96353,"line_start":2002,"line_end":2002,"column_start":5,"column_end":92}},{"value":"/     .map(|i| (i, (i * i, i * i * i)))","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":96358,"byte_end":96399,"line_start":2003,"line_end":2003,"column_start":5,"column_end":46}},{"value":"/     .unzip();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":96404,"byte_end":96421,"line_start":2004,"line_end":2004,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":96426,"byte_end":96429,"line_start":2005,"line_end":2005,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(values, [0, 1, 2, 3]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":96434,"byte_end":96471,"line_start":2006,"line_end":2006,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(squares, [0, 1, 4, 9]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":96476,"byte_end":96514,"line_start":2007,"line_end":2007,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(cubes, [0, 1, 8, 27]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":96519,"byte_end":96556,"line_start":2008,"line_end":2008,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":96561,"byte_end":96568,"line_start":2009,"line_end":2009,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4680},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":97687,"byte_end":97696,"line_start":2040,"line_end":2040,"column_start":8,"column_end":17},"name":"partition","qualname":"::iter::ParallelIterator::partition","value":"pub fn partition<A, B, P>(Self, P) -> (A, B) where A: Default + Send +\nParallelExtend<Self::Item>, B: Default + Send + ParallelExtend<Self::Item>,\nP: Fn(&Self::Item) -> bool + Sync + Send","parent":{"krate":0,"index":4491},"children":[],"decl_id":null,"docs":" Partitions the items of a parallel iterator into a pair of arbitrary\n `ParallelExtend` containers.  Items for which the `predicate` returns\n true go into the first container, and the rest go into the second.","sig":null,"attributes":[{"value":"/ Partitions the items of a parallel iterator into a pair of arbitrary","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":96863,"byte_end":96935,"line_start":2021,"line_end":2021,"column_start":5,"column_end":77}},{"value":"/ `ParallelExtend` containers.  Items for which the `predicate` returns","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":96940,"byte_end":97013,"line_start":2022,"line_end":2022,"column_start":5,"column_end":78}},{"value":"/ true go into the first container, and the rest go into the second.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":97018,"byte_end":97088,"line_start":2023,"line_end":2023,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":97093,"byte_end":97096,"line_start":2024,"line_end":2024,"column_start":5,"column_end":8}},{"value":"/ Note: unlike the standard `Iterator::partition`, this allows distinct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":97101,"byte_end":97174,"line_start":2025,"line_end":2025,"column_start":5,"column_end":78}},{"value":"/ collection types for the left and right items.  This is more flexible,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":97179,"byte_end":97253,"line_start":2026,"line_end":2026,"column_start":5,"column_end":79}},{"value":"/ but may require new type annotations when converting sequential code","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":97258,"byte_end":97330,"line_start":2027,"line_end":2027,"column_start":5,"column_end":77}},{"value":"/ that used type inferrence assuming the two were the same.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":97335,"byte_end":97396,"line_start":2028,"line_end":2028,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":97401,"byte_end":97404,"line_start":2029,"line_end":2029,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":97409,"byte_end":97423,"line_start":2030,"line_end":2030,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":97428,"byte_end":97431,"line_start":2031,"line_end":2031,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":97436,"byte_end":97443,"line_start":2032,"line_end":2032,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":97448,"byte_end":97474,"line_start":2033,"line_end":2033,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":97479,"byte_end":97482,"line_start":2034,"line_end":2034,"column_start":5,"column_end":8}},{"value":"/ let (left, right): (Vec<_>, Vec<_>) = (0..8).into_par_iter().partition(|x| x % 2 == 0);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":97487,"byte_end":97578,"line_start":2035,"line_end":2035,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":97583,"byte_end":97586,"line_start":2036,"line_end":2036,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(left, [0, 2, 4, 6]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":97591,"byte_end":97626,"line_start":2037,"line_end":2037,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(right, [1, 3, 5, 7]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":97631,"byte_end":97667,"line_start":2038,"line_end":2038,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":97672,"byte_end":97679,"line_start":2039,"line_end":2039,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4684},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":99416,"byte_end":99429,"line_start":2092,"line_end":2092,"column_start":8,"column_end":21},"name":"partition_map","qualname":"::iter::ParallelIterator::partition_map","value":"pub fn partition_map<A, B, P, L, R>(Self, P) -> (A, B) where A: Default +\nSend + ParallelExtend<L>, B: Default + Send + ParallelExtend<R>,\nP: Fn(Self::Item) -> Either<L, R> + Sync + Send, L: Send, R: Send","parent":{"krate":0,"index":4491},"children":[],"decl_id":null,"docs":" Partitions and maps the items of a parallel iterator into a pair of\n arbitrary `ParallelExtend` containers.  `Either::Left` items go into\n the first container, and `Either::Right` items go into the second.","sig":null,"attributes":[{"value":"/ Partitions and maps the items of a parallel iterator into a pair of","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":97967,"byte_end":98038,"line_start":2049,"line_end":2049,"column_start":5,"column_end":76}},{"value":"/ arbitrary `ParallelExtend` containers.  `Either::Left` items go into","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":98043,"byte_end":98115,"line_start":2050,"line_end":2050,"column_start":5,"column_end":77}},{"value":"/ the first container, and `Either::Right` items go into the second.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":98120,"byte_end":98190,"line_start":2051,"line_end":2051,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":98195,"byte_end":98198,"line_start":2052,"line_end":2052,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":98203,"byte_end":98217,"line_start":2053,"line_end":2053,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":98222,"byte_end":98225,"line_start":2054,"line_end":2054,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":98230,"byte_end":98237,"line_start":2055,"line_end":2055,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":98242,"byte_end":98268,"line_start":2056,"line_end":2056,"column_start":5,"column_end":31}},{"value":"/ use rayon::iter::Either;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":98273,"byte_end":98301,"line_start":2057,"line_end":2057,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":98306,"byte_end":98309,"line_start":2058,"line_end":2058,"column_start":5,"column_end":8}},{"value":"/ let (left, right): (Vec<_>, Vec<_>) = (0..8).into_par_iter()","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":98314,"byte_end":98378,"line_start":2059,"line_end":2059,"column_start":5,"column_end":69}},{"value":"/     .partition_map(|x| {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":98383,"byte_end":98411,"line_start":2060,"line_end":2060,"column_start":5,"column_end":33}},{"value":"/         if x % 2 == 0 {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":98416,"byte_end":98443,"line_start":2061,"line_end":2061,"column_start":5,"column_end":32}},{"value":"/             Either::Left(x * 4)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":98448,"byte_end":98483,"line_start":2062,"line_end":2062,"column_start":5,"column_end":40}},{"value":"/         } else {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":98488,"byte_end":98508,"line_start":2063,"line_end":2063,"column_start":5,"column_end":25}},{"value":"/             Either::Right(x * 3)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":98513,"byte_end":98549,"line_start":2064,"line_end":2064,"column_start":5,"column_end":41}},{"value":"/         }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":98554,"byte_end":98567,"line_start":2065,"line_end":2065,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":98572,"byte_end":98583,"line_start":2066,"line_end":2066,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":98588,"byte_end":98591,"line_start":2067,"line_end":2067,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(left, [0, 8, 16, 24]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":98596,"byte_end":98633,"line_start":2068,"line_end":2068,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(right, [3, 9, 15, 21]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":98638,"byte_end":98676,"line_start":2069,"line_end":2069,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":98681,"byte_end":98688,"line_start":2070,"line_end":2070,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":98693,"byte_end":98696,"line_start":2071,"line_end":2071,"column_start":5,"column_end":8}},{"value":"/ Nested `Either` enums can be split as well.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":98701,"byte_end":98748,"line_start":2072,"line_end":2072,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":98753,"byte_end":98756,"line_start":2073,"line_end":2073,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":98761,"byte_end":98768,"line_start":2074,"line_end":2074,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":98773,"byte_end":98799,"line_start":2075,"line_end":2075,"column_start":5,"column_end":31}},{"value":"/ use rayon::iter::Either::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":98804,"byte_end":98835,"line_start":2076,"line_end":2076,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":98840,"byte_end":98843,"line_start":2077,"line_end":2077,"column_start":5,"column_end":8}},{"value":"/ let ((fizzbuzz, fizz), (buzz, other)): ((Vec<_>, Vec<_>), (Vec<_>, Vec<_>)) = (1..20)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":98848,"byte_end":98937,"line_start":2078,"line_end":2078,"column_start":5,"column_end":94}},{"value":"/     .into_par_iter()","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":98942,"byte_end":98966,"line_start":2079,"line_end":2079,"column_start":5,"column_end":29}},{"value":"/     .partition_map(|x| match (x % 3, x % 5) {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":98971,"byte_end":99020,"line_start":2080,"line_end":2080,"column_start":5,"column_end":54}},{"value":"/         (0, 0) => Left(Left(x)),","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":99025,"byte_end":99061,"line_start":2081,"line_end":2081,"column_start":5,"column_end":41}},{"value":"/         (0, _) => Left(Right(x)),","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":99066,"byte_end":99103,"line_start":2082,"line_end":2082,"column_start":5,"column_end":42}},{"value":"/         (_, 0) => Right(Left(x)),","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":99108,"byte_end":99145,"line_start":2083,"line_end":2083,"column_start":5,"column_end":42}},{"value":"/         (_, _) => Right(Right(x)),","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":99150,"byte_end":99188,"line_start":2084,"line_end":2084,"column_start":5,"column_end":43}},{"value":"/     });","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":99193,"byte_end":99204,"line_start":2085,"line_end":2085,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":99209,"byte_end":99212,"line_start":2086,"line_end":2086,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(fizzbuzz, [15]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":99217,"byte_end":99248,"line_start":2087,"line_end":2087,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(fizz, [3, 6, 9, 12, 18]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":99253,"byte_end":99293,"line_start":2088,"line_end":2088,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(buzz, [5, 10]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":99298,"byte_end":99328,"line_start":2089,"line_end":2089,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(other, [1, 2, 4, 7, 8, 11, 13, 14, 16, 17, 19]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":99333,"byte_end":99396,"line_start":2090,"line_end":2090,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":99401,"byte_end":99408,"line_start":2091,"line_end":2091,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4690},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":100062,"byte_end":100073,"line_start":2115,"line_end":2115,"column_start":8,"column_end":19},"name":"intersperse","qualname":"::iter::ParallelIterator::intersperse","value":"pub fn intersperse(Self, Self::Item) -> Intersperse<Self> where\nSelf::Item: Clone","parent":{"krate":0,"index":4491},"children":[],"decl_id":null,"docs":" Intersperses clones of an element between items of this iterator.","sig":null,"attributes":[{"value":"/ Intersperses clones of an element between items of this iterator.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":99733,"byte_end":99802,"line_start":2103,"line_end":2103,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":99807,"byte_end":99810,"line_start":2104,"line_end":2104,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":99815,"byte_end":99829,"line_start":2105,"line_end":2105,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":99834,"byte_end":99837,"line_start":2106,"line_end":2106,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":99842,"byte_end":99849,"line_start":2107,"line_end":2107,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":99854,"byte_end":99880,"line_start":2108,"line_end":2108,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":99885,"byte_end":99888,"line_start":2109,"line_end":2109,"column_start":5,"column_end":8}},{"value":"/ let x = vec![1, 2, 3];","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":99893,"byte_end":99919,"line_start":2110,"line_end":2110,"column_start":5,"column_end":31}},{"value":"/ let r: Vec<_> = x.into_par_iter().intersperse(-1).collect();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":99924,"byte_end":99988,"line_start":2111,"line_end":2111,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":99993,"byte_end":99996,"line_start":2112,"line_end":2112,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(r, vec![1, -1, 2, -1, 3]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":100001,"byte_end":100042,"line_start":2113,"line_end":2113,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":100047,"byte_end":100054,"line_start":2114,"line_end":2114,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4691},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":100735,"byte_end":100750,"line_start":2134,"line_end":2134,"column_start":8,"column_end":23},"name":"drive_unindexed","qualname":"::iter::ParallelIterator::drive_unindexed","value":"pub fn drive_unindexed<C>(Self, C) -> C::Result where\nC: UnindexedConsumer<Self::Item>","parent":{"krate":0,"index":4491},"children":[],"decl_id":null,"docs":" Internal method used to define the behavior of this parallel\n iterator. You should not need to call this directly.","sig":null,"attributes":[{"value":"/ Internal method used to define the behavior of this parallel","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":100216,"byte_end":100280,"line_start":2122,"line_end":2122,"column_start":5,"column_end":69}},{"value":"/ iterator. You should not need to call this directly.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":100285,"byte_end":100341,"line_start":2123,"line_end":2123,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":100346,"byte_end":100349,"line_start":2124,"line_end":2124,"column_start":5,"column_end":8}},{"value":"/ This method causes the iterator `self` to start producing","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":100354,"byte_end":100415,"line_start":2125,"line_end":2125,"column_start":5,"column_end":66}},{"value":"/ items and to feed them to the consumer `consumer` one by one.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":100420,"byte_end":100485,"line_start":2126,"line_end":2126,"column_start":5,"column_end":70}},{"value":"/ It may split the consumer before doing so to create the","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":100490,"byte_end":100549,"line_start":2127,"line_end":2127,"column_start":5,"column_end":64}},{"value":"/ opportunity to produce in parallel.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":100554,"byte_end":100593,"line_start":2128,"line_end":2128,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":100598,"byte_end":100601,"line_start":2129,"line_end":2129,"column_start":5,"column_end":8}},{"value":"/ See the [README] for more details on the internals of parallel","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":100606,"byte_end":100672,"line_start":2130,"line_end":2130,"column_start":5,"column_end":71}},{"value":"/ iterators.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":100677,"byte_end":100691,"line_start":2131,"line_end":2131,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":100696,"byte_end":100699,"line_start":2132,"line_end":2132,"column_start":5,"column_end":8}},{"value":"/ [README]: README.md","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":100704,"byte_end":100727,"line_start":2133,"line_end":2133,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":4693},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":101637,"byte_end":101644,"line_start":2152,"line_end":2152,"column_start":8,"column_end":15},"name":"opt_len","qualname":"::iter::ParallelIterator::opt_len","value":"pub fn opt_len(&Self) -> Option<usize>","parent":{"krate":0,"index":4491},"children":[],"decl_id":null,"docs":" Internal method used to define the behavior of this parallel\n iterator. You should not need to call this directly.","sig":null,"attributes":[{"value":"/ Internal method used to define the behavior of this parallel","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":100843,"byte_end":100907,"line_start":2138,"line_end":2138,"column_start":5,"column_end":69}},{"value":"/ iterator. You should not need to call this directly.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":100912,"byte_end":100968,"line_start":2139,"line_end":2139,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":100973,"byte_end":100976,"line_start":2140,"line_end":2140,"column_start":5,"column_end":8}},{"value":"/ Returns the number of items produced by this iterator, if known","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":100981,"byte_end":101048,"line_start":2141,"line_end":2141,"column_start":5,"column_end":72}},{"value":"/ statically. This can be used by consumers to trigger special fast","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":101053,"byte_end":101122,"line_start":2142,"line_end":2142,"column_start":5,"column_end":74}},{"value":"/ paths. Therefore, if `Some(_)` is returned, this iterator must only","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":101127,"byte_end":101198,"line_start":2143,"line_end":2143,"column_start":5,"column_end":76}},{"value":"/ use the (indexed) `Consumer` methods when driving a consumer, such","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":101203,"byte_end":101273,"line_start":2144,"line_end":2144,"column_start":5,"column_end":75}},{"value":"/ as `split_at()`. Calling `UnindexedConsumer::split_off_left()` or","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":101278,"byte_end":101347,"line_start":2145,"line_end":2145,"column_start":5,"column_end":74}},{"value":"/ other `UnindexedConsumer` methods -- or returning an inaccurate","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":101352,"byte_end":101419,"line_start":2146,"line_end":2146,"column_start":5,"column_end":72}},{"value":"/ value -- may result in panics.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":101424,"byte_end":101458,"line_start":2147,"line_end":2147,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":101463,"byte_end":101466,"line_start":2148,"line_end":2148,"column_start":5,"column_end":8}},{"value":"/ This method is currently used to optimize `collect` for want","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":101471,"byte_end":101535,"line_start":2149,"line_end":2149,"column_start":5,"column_end":69}},{"value":"/ of true Rust specialization; it may be removed when","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":101540,"byte_end":101595,"line_start":2150,"line_end":2150,"column_start":5,"column_end":60}},{"value":"/ specialization is stable.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":101600,"byte_end":101629,"line_start":2151,"line_end":2151,"column_start":5,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":4699},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":102087,"byte_end":102110,"line_start":2171,"line_end":2171,"column_start":11,"column_end":34},"name":"IndexedParallelIterator","qualname":"::iter::IndexedParallelIterator","value":"IndexedParallelIterator: ParallelIterator","parent":null,"children":[{"krate":0,"index":4700},{"krate":0,"index":4701},{"krate":0,"index":4704},{"krate":0,"index":4706},{"krate":0,"index":4708},{"krate":0,"index":4710},{"krate":0,"index":4712},{"krate":0,"index":4713},{"krate":0,"index":4718},{"krate":0,"index":4724},{"krate":0,"index":4729},{"krate":0,"index":4731},{"krate":0,"index":4733},{"krate":0,"index":4735},{"krate":0,"index":4737},{"krate":0,"index":4739},{"krate":0,"index":4740},{"krate":0,"index":4741},{"krate":0,"index":4742},{"krate":0,"index":4743},{"krate":0,"index":4746},{"krate":0,"index":4749},{"krate":0,"index":4752},{"krate":0,"index":4754},{"krate":0,"index":4756},{"krate":0,"index":4757},{"krate":0,"index":4758},{"krate":0,"index":4759},{"krate":0,"index":4760},{"krate":0,"index":4762}],"decl_id":null,"docs":" An iterator that supports \"random access\" to its data, meaning\n that you can split it at arbitrary indices and draw data from\n those points.","sig":null,"attributes":[{"value":"/ An iterator that supports \"random access\" to its data, meaning","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":101849,"byte_end":101915,"line_start":2166,"line_end":2166,"column_start":1,"column_end":67}},{"value":"/ that you can split it at arbitrary indices and draw data from","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":101916,"byte_end":101981,"line_start":2167,"line_end":2167,"column_start":1,"column_end":66}},{"value":"/ those points.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":101982,"byte_end":101999,"line_start":2168,"line_end":2168,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":102000,"byte_end":102003,"line_start":2169,"line_end":2169,"column_start":1,"column_end":4}},{"value":"/ **Note:** Not implemented for `u64`, `i64`, `u128`, or `i128` ranges","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":102004,"byte_end":102076,"line_start":2170,"line_end":2170,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":4700},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":102719,"byte_end":102735,"line_start":2190,"line_end":2190,"column_start":8,"column_end":24},"name":"collect_into_vec","qualname":"::iter::IndexedParallelIterator::collect_into_vec","value":"pub fn collect_into_vec(Self, &mut Vec<Self::Item>)","parent":{"krate":0,"index":4699},"children":[],"decl_id":null,"docs":" Collects the results of the iterator into the specified\n vector. The vector is always truncated before execution\n begins. If possible, reusing the vector across calls can lead\n to better performance since it reuses the same backing buffer.","sig":null,"attributes":[{"value":"/ Collects the results of the iterator into the specified","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":102135,"byte_end":102194,"line_start":2172,"line_end":2172,"column_start":5,"column_end":64}},{"value":"/ vector. The vector is always truncated before execution","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":102199,"byte_end":102258,"line_start":2173,"line_end":2173,"column_start":5,"column_end":64}},{"value":"/ begins. If possible, reusing the vector across calls can lead","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":102263,"byte_end":102328,"line_start":2174,"line_end":2174,"column_start":5,"column_end":70}},{"value":"/ to better performance since it reuses the same backing buffer.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":102333,"byte_end":102399,"line_start":2175,"line_end":2175,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":102404,"byte_end":102407,"line_start":2176,"line_end":2176,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":102412,"byte_end":102426,"line_start":2177,"line_end":2177,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":102431,"byte_end":102434,"line_start":2178,"line_end":2178,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":102439,"byte_end":102446,"line_start":2179,"line_end":2179,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":102451,"byte_end":102477,"line_start":2180,"line_end":2180,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":102482,"byte_end":102485,"line_start":2181,"line_end":2181,"column_start":5,"column_end":8}},{"value":"/ // any prior data will be truncated","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":102490,"byte_end":102529,"line_start":2182,"line_end":2182,"column_start":5,"column_end":44}},{"value":"/ let mut vec = vec![-1, -2, -3];","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":102534,"byte_end":102569,"line_start":2183,"line_end":2183,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":102574,"byte_end":102577,"line_start":2184,"line_end":2184,"column_start":5,"column_end":8}},{"value":"/ (0..5).into_par_iter()","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":102582,"byte_end":102608,"line_start":2185,"line_end":2185,"column_start":5,"column_end":31}},{"value":"/     .collect_into_vec(&mut vec);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":102613,"byte_end":102649,"line_start":2186,"line_end":2186,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":102654,"byte_end":102657,"line_start":2187,"line_end":2187,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec, [0, 1, 2, 3, 4]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":102662,"byte_end":102699,"line_start":2188,"line_end":2188,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":102704,"byte_end":102711,"line_start":2189,"line_end":2189,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4701},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":103545,"byte_end":103560,"line_start":2215,"line_end":2215,"column_start":8,"column_end":23},"name":"unzip_into_vecs","qualname":"::iter::IndexedParallelIterator::unzip_into_vecs","value":"pub fn unzip_into_vecs<A, B>(Self, &mut Vec<A>, &mut Vec<B>) where\nSelf: IndexedParallelIterator<Item = (A, B)>, A: Send, B: Send","parent":{"krate":0,"index":4699},"children":[],"decl_id":null,"docs":" Unzips the results of the iterator into the specified\n vectors. The vectors are always truncated before execution\n begins. If possible, reusing the vectors across calls can lead\n to better performance since they reuse the same backing buffer.","sig":null,"attributes":[{"value":"/ Unzips the results of the iterator into the specified","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":102834,"byte_end":102891,"line_start":2194,"line_end":2194,"column_start":5,"column_end":62}},{"value":"/ vectors. The vectors are always truncated before execution","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":102896,"byte_end":102958,"line_start":2195,"line_end":2195,"column_start":5,"column_end":67}},{"value":"/ begins. If possible, reusing the vectors across calls can lead","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":102963,"byte_end":103029,"line_start":2196,"line_end":2196,"column_start":5,"column_end":71}},{"value":"/ to better performance since they reuse the same backing buffer.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":103034,"byte_end":103101,"line_start":2197,"line_end":2197,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":103106,"byte_end":103109,"line_start":2198,"line_end":2198,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":103114,"byte_end":103128,"line_start":2199,"line_end":2199,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":103133,"byte_end":103136,"line_start":2200,"line_end":2200,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":103141,"byte_end":103148,"line_start":2201,"line_end":2201,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":103153,"byte_end":103179,"line_start":2202,"line_end":2202,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":103184,"byte_end":103187,"line_start":2203,"line_end":2203,"column_start":5,"column_end":8}},{"value":"/ // any prior data will be truncated","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":103192,"byte_end":103231,"line_start":2204,"line_end":2204,"column_start":5,"column_end":44}},{"value":"/ let mut left = vec![42; 10];","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":103236,"byte_end":103268,"line_start":2205,"line_end":2205,"column_start":5,"column_end":37}},{"value":"/ let mut right = vec![-1; 10];","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":103273,"byte_end":103306,"line_start":2206,"line_end":2206,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":103311,"byte_end":103314,"line_start":2207,"line_end":2207,"column_start":5,"column_end":8}},{"value":"/ (10..15).into_par_iter()","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":103319,"byte_end":103347,"line_start":2208,"line_end":2208,"column_start":5,"column_end":33}},{"value":"/     .enumerate()","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":103352,"byte_end":103372,"line_start":2209,"line_end":2209,"column_start":5,"column_end":25}},{"value":"/     .unzip_into_vecs(&mut left, &mut right);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":103377,"byte_end":103425,"line_start":2210,"line_end":2210,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":103430,"byte_end":103433,"line_start":2211,"line_end":2211,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(left, [0, 1, 2, 3, 4]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":103438,"byte_end":103476,"line_start":2212,"line_end":2212,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(right, [10, 11, 12, 13, 14]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":103481,"byte_end":103525,"line_start":2213,"line_end":2213,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":103530,"byte_end":103537,"line_start":2214,"line_end":2214,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4704},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":104372,"byte_end":104375,"line_start":2242,"line_end":2242,"column_start":8,"column_end":11},"name":"zip","qualname":"::iter::IndexedParallelIterator::zip","value":"pub fn zip<Z>(Self, Z) -> Zip<Self, Z::Iter> where Z: IntoParallelIterator,\nZ::Iter: IndexedParallelIterator","parent":{"krate":0,"index":4699},"children":[],"decl_id":null,"docs":" Iterates over tuples `(A, B)`, where the items `A` are from\n this iterator and `B` are from the iterator given as argument.\n Like the `zip` method on ordinary iterators, if the two\n iterators are of unequal length, you only get the items they\n have in common.","sig":null,"attributes":[{"value":"/ Iterates over tuples `(A, B)`, where the items `A` are from","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":103780,"byte_end":103843,"line_start":2224,"line_end":2224,"column_start":5,"column_end":68}},{"value":"/ this iterator and `B` are from the iterator given as argument.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":103848,"byte_end":103914,"line_start":2225,"line_end":2225,"column_start":5,"column_end":71}},{"value":"/ Like the `zip` method on ordinary iterators, if the two","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":103919,"byte_end":103978,"line_start":2226,"line_end":2226,"column_start":5,"column_end":64}},{"value":"/ iterators are of unequal length, you only get the items they","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":103983,"byte_end":104047,"line_start":2227,"line_end":2227,"column_start":5,"column_end":69}},{"value":"/ have in common.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":104052,"byte_end":104071,"line_start":2228,"line_end":2228,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":104076,"byte_end":104079,"line_start":2229,"line_end":2229,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":104084,"byte_end":104098,"line_start":2230,"line_end":2230,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":104103,"byte_end":104106,"line_start":2231,"line_end":2231,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":104111,"byte_end":104118,"line_start":2232,"line_end":2232,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":104123,"byte_end":104149,"line_start":2233,"line_end":2233,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":104154,"byte_end":104157,"line_start":2234,"line_end":2234,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = (1..4)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":104162,"byte_end":104193,"line_start":2235,"line_end":2235,"column_start":5,"column_end":36}},{"value":"/     .into_par_iter()","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":104198,"byte_end":104222,"line_start":2236,"line_end":2236,"column_start":5,"column_end":29}},{"value":"/     .zip(vec!['a', 'b', 'c'])","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":104227,"byte_end":104260,"line_start":2237,"line_end":2237,"column_start":5,"column_end":38}},{"value":"/     .collect();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":104265,"byte_end":104284,"line_start":2238,"line_end":2238,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":104289,"byte_end":104292,"line_start":2239,"line_end":2239,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, [(1, 'a'), (2, 'b'), (3, 'c')]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":104297,"byte_end":104352,"line_start":2240,"line_end":2240,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":104357,"byte_end":104364,"line_start":2241,"line_end":2241,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4706},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":105149,"byte_end":105155,"line_start":2269,"line_end":2269,"column_start":8,"column_end":14},"name":"zip_eq","qualname":"::iter::IndexedParallelIterator::zip_eq","value":"pub fn zip_eq<Z>(Self, Z) -> ZipEq<Self, Z::Iter> where\nZ: IntoParallelIterator, Z::Iter: IndexedParallelIterator","parent":{"krate":0,"index":4699},"children":[],"decl_id":null,"docs":" The same as `Zip`, but requires that both iterators have the same length.","sig":null,"attributes":[{"value":"/ The same as `Zip`, but requires that both iterators have the same length.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":104567,"byte_end":104644,"line_start":2250,"line_end":2250,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":104649,"byte_end":104652,"line_start":2251,"line_end":2251,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":104657,"byte_end":104669,"line_start":2252,"line_end":2252,"column_start":5,"column_end":17}},{"value":"/ Will panic if `self` and `zip_op` are not the same length.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":104674,"byte_end":104736,"line_start":2253,"line_end":2253,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":104741,"byte_end":104744,"line_start":2254,"line_end":2254,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":104749,"byte_end":104768,"line_start":2255,"line_end":2255,"column_start":5,"column_end":24}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":104773,"byte_end":104799,"line_start":2256,"line_end":2256,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":104804,"byte_end":104807,"line_start":2257,"line_end":2257,"column_start":5,"column_end":8}},{"value":"/ let one = [1u8];","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":104812,"byte_end":104832,"line_start":2258,"line_end":2258,"column_start":5,"column_end":25}},{"value":"/ let two = [2u8, 2];","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":104837,"byte_end":104860,"line_start":2259,"line_end":2259,"column_start":5,"column_end":28}},{"value":"/ let one_iter = one.par_iter();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":104865,"byte_end":104899,"line_start":2260,"line_end":2260,"column_start":5,"column_end":39}},{"value":"/ let two_iter = two.par_iter();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":104904,"byte_end":104938,"line_start":2261,"line_end":2261,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":104943,"byte_end":104946,"line_start":2262,"line_end":2262,"column_start":5,"column_end":8}},{"value":"/ // this will panic","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":104951,"byte_end":104973,"line_start":2263,"line_end":2263,"column_start":5,"column_end":27}},{"value":"/ let zipped: Vec<(&u8, &u8)> = one_iter.zip_eq(two_iter).collect();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":104978,"byte_end":105048,"line_start":2264,"line_end":2264,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":105053,"byte_end":105056,"line_start":2265,"line_end":2265,"column_start":5,"column_end":8}},{"value":"/ // we should never get here","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":105061,"byte_end":105092,"line_start":2266,"line_end":2266,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(1, zipped.len());","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":105097,"byte_end":105129,"line_start":2267,"line_end":2267,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":105134,"byte_end":105141,"line_start":2268,"line_end":2268,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4708},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":106002,"byte_end":106012,"line_start":2293,"line_end":2293,"column_start":8,"column_end":18},"name":"interleave","qualname":"::iter::IndexedParallelIterator::interleave","value":"pub fn interleave<I>(Self, I) -> Interleave<Self, I::Iter> where\nI: IntoParallelIterator<Item = Self::Item>,\nI::Iter: IndexedParallelIterator<Item = Self::Item>","parent":{"krate":0,"index":4699},"children":[],"decl_id":null,"docs":" Interleaves elements of this iterator and the other given\n iterator. Alternately yields elements from this iterator and\n the given iterator, until both are exhausted. If one iterator\n is exhausted before the other, the last elements are provided\n from the other.","sig":null,"attributes":[{"value":"/ Interleaves elements of this iterator and the other given","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":105441,"byte_end":105502,"line_start":2279,"line_end":2279,"column_start":5,"column_end":66}},{"value":"/ iterator. Alternately yields elements from this iterator and","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":105507,"byte_end":105571,"line_start":2280,"line_end":2280,"column_start":5,"column_end":69}},{"value":"/ the given iterator, until both are exhausted. If one iterator","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":105576,"byte_end":105641,"line_start":2281,"line_end":2281,"column_start":5,"column_end":70}},{"value":"/ is exhausted before the other, the last elements are provided","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":105646,"byte_end":105711,"line_start":2282,"line_end":2282,"column_start":5,"column_end":70}},{"value":"/ from the other.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":105716,"byte_end":105735,"line_start":2283,"line_end":2283,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":105740,"byte_end":105743,"line_start":2284,"line_end":2284,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":105748,"byte_end":105762,"line_start":2285,"line_end":2285,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":105767,"byte_end":105770,"line_start":2286,"line_end":2286,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":105775,"byte_end":105782,"line_start":2287,"line_end":2287,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":105787,"byte_end":105813,"line_start":2288,"line_end":2288,"column_start":5,"column_end":31}},{"value":"/ let (x, y) = (vec![1, 2], vec![3, 4, 5, 6]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":105818,"byte_end":105866,"line_start":2289,"line_end":2289,"column_start":5,"column_end":53}},{"value":"/ let r: Vec<i32> = x.into_par_iter().interleave(y).collect();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":105871,"byte_end":105935,"line_start":2290,"line_end":2290,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(r, vec![1, 3, 2, 4, 5, 6]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":105940,"byte_end":105982,"line_start":2291,"line_end":2291,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":105987,"byte_end":105994,"line_start":2292,"line_end":2292,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4710},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":106630,"byte_end":106649,"line_start":2312,"line_end":2312,"column_start":8,"column_end":27},"name":"interleave_shortest","qualname":"::iter::IndexedParallelIterator::interleave_shortest","value":"pub fn interleave_shortest<I>(Self, I) -> InterleaveShortest<Self, I::Iter>\nwhere I: IntoParallelIterator<Item = Self::Item>,\nI::Iter: IndexedParallelIterator<Item = Self::Item>","parent":{"krate":0,"index":4699},"children":[],"decl_id":null,"docs":" Interleaves elements of this iterator and the other given\n iterator, until one is exhausted.","sig":null,"attributes":[{"value":"/ Interleaves elements of this iterator and the other given","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":106254,"byte_end":106315,"line_start":2301,"line_end":2301,"column_start":5,"column_end":66}},{"value":"/ iterator, until one is exhausted.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":106320,"byte_end":106357,"line_start":2302,"line_end":2302,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":106362,"byte_end":106365,"line_start":2303,"line_end":2303,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":106370,"byte_end":106384,"line_start":2304,"line_end":2304,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":106389,"byte_end":106392,"line_start":2305,"line_end":2305,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":106397,"byte_end":106404,"line_start":2306,"line_end":2306,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":106409,"byte_end":106435,"line_start":2307,"line_end":2307,"column_start":5,"column_end":31}},{"value":"/ let (x, y) = (vec![1, 2, 3, 4], vec![5, 6]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":106440,"byte_end":106488,"line_start":2308,"line_end":2308,"column_start":5,"column_end":53}},{"value":"/ let r: Vec<i32> = x.into_par_iter().interleave_shortest(y).collect();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":106493,"byte_end":106566,"line_start":2309,"line_end":2309,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(r, vec![1, 5, 2, 6, 3]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":106571,"byte_end":106610,"line_start":2310,"line_end":2310,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":106615,"byte_end":106622,"line_start":2311,"line_end":2311,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4712},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":107830,"byte_end":107836,"line_start":2340,"line_end":2340,"column_start":8,"column_end":14},"name":"chunks","qualname":"::iter::IndexedParallelIterator::chunks","value":"pub fn chunks(Self, usize) -> Chunks<Self>","parent":{"krate":0,"index":4699},"children":[],"decl_id":null,"docs":" Splits an iterator up into fixed-size chunks.","sig":null,"attributes":[{"value":"/ Splits an iterator up into fixed-size chunks.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":106907,"byte_end":106956,"line_start":2320,"line_end":2320,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":106961,"byte_end":106964,"line_start":2321,"line_end":2321,"column_start":5,"column_end":8}},{"value":"/ Returns an iterator that returns `Vec`s of the given number of elements.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":106969,"byte_end":107045,"line_start":2322,"line_end":2322,"column_start":5,"column_end":81}},{"value":"/ If the number of elements in the iterator is not divisible by `chunk_size`,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":107050,"byte_end":107129,"line_start":2323,"line_end":2323,"column_start":5,"column_end":84}},{"value":"/ the last chunk may be shorter than `chunk_size`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":107134,"byte_end":107186,"line_start":2324,"line_end":2324,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":107191,"byte_end":107194,"line_start":2325,"line_end":2325,"column_start":5,"column_end":8}},{"value":"/ See also [`par_chunks()`] and [`par_chunks_mut()`] for similar behavior on","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":107199,"byte_end":107277,"line_start":2326,"line_end":2326,"column_start":5,"column_end":83}},{"value":"/ slices, without having to allocate intermediate `Vec`s for the chunks.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":107282,"byte_end":107356,"line_start":2327,"line_end":2327,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":107361,"byte_end":107364,"line_start":2328,"line_end":2328,"column_start":5,"column_end":8}},{"value":"/ [`par_chunks()`]: ../slice/trait.ParallelSlice.html#method.par_chunks","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":107369,"byte_end":107442,"line_start":2329,"line_end":2329,"column_start":5,"column_end":78}},{"value":"/ [`par_chunks_mut()`]: ../slice/trait.ParallelSliceMut.html#method.par_chunks_mut","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":107447,"byte_end":107531,"line_start":2330,"line_end":2330,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":107536,"byte_end":107539,"line_start":2331,"line_end":2331,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":107544,"byte_end":107558,"line_start":2332,"line_end":2332,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":107563,"byte_end":107566,"line_start":2333,"line_end":2333,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":107571,"byte_end":107578,"line_start":2334,"line_end":2334,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":107583,"byte_end":107609,"line_start":2335,"line_end":2335,"column_start":5,"column_end":31}},{"value":"/ let a = vec![1, 2, 3, 4, 5, 6, 7, 8, 9, 10];","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":107614,"byte_end":107662,"line_start":2336,"line_end":2336,"column_start":5,"column_end":53}},{"value":"/ let r: Vec<Vec<i32>> = a.into_par_iter().chunks(3).collect();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":107667,"byte_end":107732,"line_start":2337,"line_end":2337,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(r, vec![vec![1,2,3], vec![4,5,6], vec![7,8,9], vec![10]]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":107737,"byte_end":107810,"line_start":2338,"line_end":2338,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":107815,"byte_end":107822,"line_start":2339,"line_end":2339,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4713},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":108448,"byte_end":108451,"line_start":2359,"line_end":2359,"column_start":8,"column_end":11},"name":"cmp","qualname":"::iter::IndexedParallelIterator::cmp","value":"pub fn cmp<I>(Self, I) -> Ordering where I: IntoParallelIterator<Item =\nSelf::Item>, I::Iter: IndexedParallelIterator, Self::Item: Ord","parent":{"krate":0,"index":4699},"children":[],"decl_id":null,"docs":" Lexicographically compares the elements of this `ParallelIterator` with those of\n another.","sig":null,"attributes":[{"value":"/ Lexicographically compares the elements of this `ParallelIterator` with those of","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":107994,"byte_end":108078,"line_start":2345,"line_end":2345,"column_start":5,"column_end":89}},{"value":"/ another.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":108083,"byte_end":108095,"line_start":2346,"line_end":2346,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":108100,"byte_end":108103,"line_start":2347,"line_end":2347,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":108108,"byte_end":108122,"line_start":2348,"line_end":2348,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":108127,"byte_end":108130,"line_start":2349,"line_end":2349,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":108135,"byte_end":108142,"line_start":2350,"line_end":2350,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":108147,"byte_end":108173,"line_start":2351,"line_end":2351,"column_start":5,"column_end":31}},{"value":"/ use std::cmp::Ordering::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":108178,"byte_end":108208,"line_start":2352,"line_end":2352,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":108213,"byte_end":108216,"line_start":2353,"line_end":2353,"column_start":5,"column_end":8}},{"value":"/ let x = vec![1, 2, 3];","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":108221,"byte_end":108247,"line_start":2354,"line_end":2354,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(x.par_iter().cmp(&vec![1, 3, 0]), Less);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":108252,"byte_end":108307,"line_start":2355,"line_end":2355,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(x.par_iter().cmp(&vec![1, 2, 3]), Equal);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":108312,"byte_end":108368,"line_start":2356,"line_end":2356,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(x.par_iter().cmp(&vec![1, 2]), Greater);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":108373,"byte_end":108428,"line_start":2357,"line_end":2357,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":108433,"byte_end":108440,"line_start":2358,"line_end":2358,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4718},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":109680,"byte_end":109691,"line_start":2399,"line_end":2399,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"::iter::IndexedParallelIterator::partial_cmp","value":"pub fn partial_cmp<I>(Self, I) -> Option<Ordering> where\nI: IntoParallelIterator, I::Iter: IndexedParallelIterator,\nSelf::Item: PartialOrd<I::Item>","parent":{"krate":0,"index":4699},"children":[],"decl_id":null,"docs":" Lexicographically compares the elements of this `ParallelIterator` with those of\n another.","sig":null,"attributes":[{"value":"/ Lexicographically compares the elements of this `ParallelIterator` with those of","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":109066,"byte_end":109150,"line_start":2383,"line_end":2383,"column_start":5,"column_end":89}},{"value":"/ another.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":109155,"byte_end":109167,"line_start":2384,"line_end":2384,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":109172,"byte_end":109175,"line_start":2385,"line_end":2385,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":109180,"byte_end":109194,"line_start":2386,"line_end":2386,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":109199,"byte_end":109202,"line_start":2387,"line_end":2387,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":109207,"byte_end":109214,"line_start":2388,"line_end":2388,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":109219,"byte_end":109245,"line_start":2389,"line_end":2389,"column_start":5,"column_end":31}},{"value":"/ use std::cmp::Ordering::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":109250,"byte_end":109280,"line_start":2390,"line_end":2390,"column_start":5,"column_end":35}},{"value":"/ use std::f64::NAN;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":109285,"byte_end":109307,"line_start":2391,"line_end":2391,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":109312,"byte_end":109315,"line_start":2392,"line_end":2392,"column_start":5,"column_end":8}},{"value":"/ let x = vec![1.0, 2.0, 3.0];","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":109320,"byte_end":109352,"line_start":2393,"line_end":2393,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(x.par_iter().partial_cmp(&vec![1.0, 3.0, 0.0]), Some(Less));","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":109357,"byte_end":109432,"line_start":2394,"line_end":2394,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(x.par_iter().partial_cmp(&vec![1.0, 2.0, 3.0]), Some(Equal));","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":109437,"byte_end":109513,"line_start":2395,"line_end":2395,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(x.par_iter().partial_cmp(&vec![1.0, 2.0]), Some(Greater));","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":109518,"byte_end":109591,"line_start":2396,"line_end":2396,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(x.par_iter().partial_cmp(&vec![1.0, NAN]), None);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":109596,"byte_end":109660,"line_start":2397,"line_end":2397,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":109665,"byte_end":109672,"line_start":2398,"line_end":2398,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4724},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":110470,"byte_end":110472,"line_start":2425,"line_end":2425,"column_start":8,"column_end":10},"name":"eq","qualname":"::iter::IndexedParallelIterator::eq","value":"pub fn eq<I>(Self, I) -> bool where I: IntoParallelIterator,\nI::Iter: IndexedParallelIterator, Self::Item: PartialEq<I::Item>","parent":{"krate":0,"index":4699},"children":[],"decl_id":null,"docs":" Determines if the elements of this `ParallelIterator`\n are equal to those of another\n","sig":null,"attributes":[{"value":"/ Determines if the elements of this `ParallelIterator`","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":110367,"byte_end":110424,"line_start":2423,"line_end":2423,"column_start":5,"column_end":62}},{"value":"/ are equal to those of another","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":110429,"byte_end":110462,"line_start":2424,"line_end":2424,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":4729},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":110974,"byte_end":110976,"line_start":2442,"line_end":2442,"column_start":8,"column_end":10},"name":"ne","qualname":"::iter::IndexedParallelIterator::ne","value":"pub fn ne<I>(Self, I) -> bool where I: IntoParallelIterator,\nI::Iter: IndexedParallelIterator, Self::Item: PartialEq<I::Item>","parent":{"krate":0,"index":4699},"children":[],"decl_id":null,"docs":" Determines if the elements of this `ParallelIterator`\n are unequal to those of another\n","sig":null,"attributes":[{"value":"/ Determines if the elements of this `ParallelIterator`","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":110869,"byte_end":110926,"line_start":2440,"line_end":2440,"column_start":5,"column_end":62}},{"value":"/ are unequal to those of another","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":110931,"byte_end":110966,"line_start":2441,"line_end":2441,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4731},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":111293,"byte_end":111295,"line_start":2453,"line_end":2453,"column_start":8,"column_end":10},"name":"lt","qualname":"::iter::IndexedParallelIterator::lt","value":"pub fn lt<I>(Self, I) -> bool where I: IntoParallelIterator,\nI::Iter: IndexedParallelIterator, Self::Item: PartialOrd<I::Item>","parent":{"krate":0,"index":4699},"children":[],"decl_id":null,"docs":" Determines if the elements of this `ParallelIterator`\n are lexicographically less than those of another.\n","sig":null,"attributes":[{"value":"/ Determines if the elements of this `ParallelIterator`","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":111170,"byte_end":111227,"line_start":2451,"line_end":2451,"column_start":5,"column_end":62}},{"value":"/ are lexicographically less than those of another.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":111232,"byte_end":111285,"line_start":2452,"line_end":2452,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":4733},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":111634,"byte_end":111636,"line_start":2464,"line_end":2464,"column_start":8,"column_end":10},"name":"le","qualname":"::iter::IndexedParallelIterator::le","value":"pub fn le<I>(Self, I) -> bool where I: IntoParallelIterator,\nI::Iter: IndexedParallelIterator, Self::Item: PartialOrd<I::Item>","parent":{"krate":0,"index":4699},"children":[],"decl_id":null,"docs":" Determines if the elements of this `ParallelIterator`\n are less or equal to those of another.\n","sig":null,"attributes":[{"value":"/ Determines if the elements of this `ParallelIterator`","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":111522,"byte_end":111579,"line_start":2462,"line_end":2462,"column_start":5,"column_end":62}},{"value":"/ are less or equal to those of another.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":111584,"byte_end":111626,"line_start":2463,"line_end":2463,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":4735},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":112044,"byte_end":112046,"line_start":2476,"line_end":2476,"column_start":8,"column_end":10},"name":"gt","qualname":"::iter::IndexedParallelIterator::gt","value":"pub fn gt<I>(Self, I) -> bool where I: IntoParallelIterator,\nI::Iter: IndexedParallelIterator, Self::Item: PartialOrd<I::Item>","parent":{"krate":0,"index":4699},"children":[],"decl_id":null,"docs":" Determines if the elements of this `ParallelIterator`\n are lexicographically greater than those of another.\n","sig":null,"attributes":[{"value":"/ Determines if the elements of this `ParallelIterator`","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":111918,"byte_end":111975,"line_start":2474,"line_end":2474,"column_start":5,"column_end":62}},{"value":"/ are lexicographically greater than those of another.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":111980,"byte_end":112036,"line_start":2475,"line_end":2475,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":4737},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":112388,"byte_end":112390,"line_start":2487,"line_end":2487,"column_start":8,"column_end":10},"name":"ge","qualname":"::iter::IndexedParallelIterator::ge","value":"pub fn ge<I>(Self, I) -> bool where I: IntoParallelIterator,\nI::Iter: IndexedParallelIterator, Self::Item: PartialOrd<I::Item>","parent":{"krate":0,"index":4699},"children":[],"decl_id":null,"docs":" Determines if the elements of this `ParallelIterator`\n are less or equal to those of another.\n","sig":null,"attributes":[{"value":"/ Determines if the elements of this `ParallelIterator`","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":112276,"byte_end":112333,"line_start":2485,"line_end":2485,"column_start":5,"column_end":62}},{"value":"/ are less or equal to those of another.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":112338,"byte_end":112380,"line_start":2486,"line_end":2486,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":4739},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":113044,"byte_end":113053,"line_start":2512,"line_end":2512,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::iter::IndexedParallelIterator::enumerate","value":"pub fn enumerate(Self) -> Enumerate<Self>","parent":{"krate":0,"index":4699},"children":[],"decl_id":null,"docs":" Yields an index along with each item.","sig":null,"attributes":[{"value":"/ Yields an index along with each item.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":112675,"byte_end":112716,"line_start":2497,"line_end":2497,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":112721,"byte_end":112724,"line_start":2498,"line_end":2498,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":112729,"byte_end":112743,"line_start":2499,"line_end":2499,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":112748,"byte_end":112751,"line_start":2500,"line_end":2500,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":112756,"byte_end":112763,"line_start":2501,"line_end":2501,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":112768,"byte_end":112794,"line_start":2502,"line_end":2502,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":112799,"byte_end":112802,"line_start":2503,"line_end":2503,"column_start":5,"column_end":8}},{"value":"/ let chars = vec!['a', 'b', 'c'];","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":112807,"byte_end":112843,"line_start":2504,"line_end":2504,"column_start":5,"column_end":41}},{"value":"/ let result: Vec<_> = chars","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":112848,"byte_end":112878,"line_start":2505,"line_end":2505,"column_start":5,"column_end":35}},{"value":"/     .into_par_iter()","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":112883,"byte_end":112907,"line_start":2506,"line_end":2506,"column_start":5,"column_end":29}},{"value":"/     .enumerate()","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":112912,"byte_end":112932,"line_start":2507,"line_end":2507,"column_start":5,"column_end":25}},{"value":"/     .collect();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":112937,"byte_end":112956,"line_start":2508,"line_end":2508,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":112961,"byte_end":112964,"line_start":2509,"line_end":2509,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, [(0, 'a'), (1, 'b'), (2, 'c')]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":112969,"byte_end":113024,"line_start":2510,"line_end":2510,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":113029,"byte_end":113036,"line_start":2511,"line_end":2511,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4740},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":113589,"byte_end":113596,"line_start":2536,"line_end":2536,"column_start":8,"column_end":15},"name":"step_by","qualname":"::iter::IndexedParallelIterator::step_by","value":"pub fn step_by(Self, usize) -> StepBy<Self>","parent":{"krate":0,"index":4699},"children":[],"decl_id":null,"docs":" Creates an iterator that steps by the given amount","sig":null,"attributes":[{"value":"/ Creates an iterator that steps by the given amount","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":113121,"byte_end":113175,"line_start":2516,"line_end":2516,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":113180,"byte_end":113183,"line_start":2517,"line_end":2517,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":113188,"byte_end":113202,"line_start":2518,"line_end":2518,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":113207,"byte_end":113210,"line_start":2519,"line_end":2519,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":113215,"byte_end":113222,"line_start":2520,"line_end":2520,"column_start":5,"column_end":12}},{"value":"/use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":113227,"byte_end":113252,"line_start":2521,"line_end":2521,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":113257,"byte_end":113260,"line_start":2522,"line_end":2522,"column_start":5,"column_end":8}},{"value":"/ let range = (3..10);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":113265,"byte_end":113289,"line_start":2523,"line_end":2523,"column_start":5,"column_end":29}},{"value":"/ let result: Vec<i32> = range","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":113294,"byte_end":113326,"line_start":2524,"line_end":2524,"column_start":5,"column_end":37}},{"value":"/    .into_par_iter()","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":113331,"byte_end":113354,"line_start":2525,"line_end":2525,"column_start":5,"column_end":28}},{"value":"/    .step_by(3)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":113359,"byte_end":113377,"line_start":2526,"line_end":2526,"column_start":5,"column_end":23}},{"value":"/    .collect();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":113382,"byte_end":113400,"line_start":2527,"line_end":2527,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":113405,"byte_end":113408,"line_start":2528,"line_end":2528,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, [3, 6, 9])","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":113413,"byte_end":113446,"line_start":2529,"line_end":2529,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":113451,"byte_end":113458,"line_start":2530,"line_end":2530,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":113463,"byte_end":113466,"line_start":2531,"line_end":2531,"column_start":5,"column_end":8}},{"value":"/ # Compatibility","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":113471,"byte_end":113490,"line_start":2532,"line_end":2532,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":113495,"byte_end":113498,"line_start":2533,"line_end":2533,"column_start":5,"column_end":8}},{"value":"/ This method is only available on Rust 1.38 or greater.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":113503,"byte_end":113561,"line_start":2534,"line_end":2534,"column_start":5,"column_end":63}},{"value":"cfg(step_by)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":113566,"byte_end":113581,"line_start":2535,"line_end":2535,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4741},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":114012,"byte_end":114016,"line_start":2554,"line_end":2554,"column_start":8,"column_end":12},"name":"skip","qualname":"::iter::IndexedParallelIterator::skip","value":"pub fn skip(Self, usize) -> Skip<Self>","parent":{"krate":0,"index":4699},"children":[],"decl_id":null,"docs":" Creates an iterator that skips the first `n` elements.","sig":null,"attributes":[{"value":"/ Creates an iterator that skips the first `n` elements.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":113677,"byte_end":113735,"line_start":2540,"line_end":2540,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":113740,"byte_end":113743,"line_start":2541,"line_end":2541,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":113748,"byte_end":113762,"line_start":2542,"line_end":2542,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":113767,"byte_end":113770,"line_start":2543,"line_end":2543,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":113775,"byte_end":113782,"line_start":2544,"line_end":2544,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":113787,"byte_end":113813,"line_start":2545,"line_end":2545,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":113818,"byte_end":113821,"line_start":2546,"line_end":2546,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = (0..100)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":113826,"byte_end":113859,"line_start":2547,"line_end":2547,"column_start":5,"column_end":38}},{"value":"/     .into_par_iter()","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":113864,"byte_end":113888,"line_start":2548,"line_end":2548,"column_start":5,"column_end":29}},{"value":"/     .skip(95)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":113893,"byte_end":113910,"line_start":2549,"line_end":2549,"column_start":5,"column_end":22}},{"value":"/     .collect();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":113915,"byte_end":113934,"line_start":2550,"line_end":2550,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":113939,"byte_end":113942,"line_start":2551,"line_end":2551,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, [95, 96, 97, 98, 99]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":113947,"byte_end":113992,"line_start":2552,"line_end":2552,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":113997,"byte_end":114004,"line_start":2553,"line_end":2553,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4742},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":114417,"byte_end":114421,"line_start":2572,"line_end":2572,"column_start":8,"column_end":12},"name":"take","qualname":"::iter::IndexedParallelIterator::take","value":"pub fn take(Self, usize) -> Take<Self>","parent":{"krate":0,"index":4699},"children":[],"decl_id":null,"docs":" Creates an iterator that yields the first `n` elements.","sig":null,"attributes":[{"value":"/ Creates an iterator that yields the first `n` elements.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":114087,"byte_end":114146,"line_start":2558,"line_end":2558,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":114151,"byte_end":114154,"line_start":2559,"line_end":2559,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":114159,"byte_end":114173,"line_start":2560,"line_end":2560,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":114178,"byte_end":114181,"line_start":2561,"line_end":2561,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":114186,"byte_end":114193,"line_start":2562,"line_end":2562,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":114198,"byte_end":114224,"line_start":2563,"line_end":2563,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":114229,"byte_end":114232,"line_start":2564,"line_end":2564,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = (0..100)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":114237,"byte_end":114270,"line_start":2565,"line_end":2565,"column_start":5,"column_end":38}},{"value":"/     .into_par_iter()","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":114275,"byte_end":114299,"line_start":2566,"line_end":2566,"column_start":5,"column_end":29}},{"value":"/     .take(5)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":114304,"byte_end":114320,"line_start":2567,"line_end":2567,"column_start":5,"column_end":21}},{"value":"/     .collect();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":114325,"byte_end":114344,"line_start":2568,"line_end":2568,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":114349,"byte_end":114352,"line_start":2569,"line_end":2569,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, [0, 1, 2, 3, 4]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":114357,"byte_end":114397,"line_start":2570,"line_end":2570,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":114402,"byte_end":114409,"line_start":2571,"line_end":2571,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4743},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":115135,"byte_end":115147,"line_start":2594,"line_end":2594,"column_start":8,"column_end":20},"name":"position_any","qualname":"::iter::IndexedParallelIterator::position_any","value":"pub fn position_any<P>(Self, P) -> Option<usize> where P: Fn(Self::Item) ->\nbool + Sync + Send","parent":{"krate":0,"index":4699},"children":[],"decl_id":null,"docs":" Searches for **some** item in the parallel iterator that\n matches the given predicate, and returns its index.  Like\n `ParallelIterator::find_any`, the parallel search will not\n necessarily find the **first** match, and once a match is\n found we'll attempt to stop processing any more.","sig":null,"attributes":[{"value":"/ Searches for **some** item in the parallel iterator that","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":114492,"byte_end":114552,"line_start":2576,"line_end":2576,"column_start":5,"column_end":65}},{"value":"/ matches the given predicate, and returns its index.  Like","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":114557,"byte_end":114618,"line_start":2577,"line_end":2577,"column_start":5,"column_end":66}},{"value":"/ `ParallelIterator::find_any`, the parallel search will not","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":114623,"byte_end":114685,"line_start":2578,"line_end":2578,"column_start":5,"column_end":67}},{"value":"/ necessarily find the **first** match, and once a match is","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":114690,"byte_end":114751,"line_start":2579,"line_end":2579,"column_start":5,"column_end":66}},{"value":"/ found we'll attempt to stop processing any more.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":114756,"byte_end":114808,"line_start":2580,"line_end":2580,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":114813,"byte_end":114816,"line_start":2581,"line_end":2581,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":114821,"byte_end":114835,"line_start":2582,"line_end":2582,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":114840,"byte_end":114843,"line_start":2583,"line_end":2583,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":114848,"byte_end":114855,"line_start":2584,"line_end":2584,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":114860,"byte_end":114886,"line_start":2585,"line_end":2585,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":114891,"byte_end":114894,"line_start":2586,"line_end":2586,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3, 3];","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":114899,"byte_end":114924,"line_start":2587,"line_end":2587,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":114929,"byte_end":114932,"line_start":2588,"line_end":2588,"column_start":5,"column_end":8}},{"value":"/ let i = a.par_iter().position_any(|&x| x == 3).expect(\"found\");","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":114937,"byte_end":115004,"line_start":2589,"line_end":2589,"column_start":5,"column_end":72}},{"value":"/ assert!(i == 2 || i == 3);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":115009,"byte_end":115039,"line_start":2590,"line_end":2590,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":115044,"byte_end":115047,"line_start":2591,"line_end":2591,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().position_any(|&x| x == 100), None);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":115052,"byte_end":115115,"line_start":2592,"line_end":2592,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":115120,"byte_end":115127,"line_start":2593,"line_end":2593,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4746},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":116388,"byte_end":116402,"line_start":2631,"line_end":2631,"column_start":8,"column_end":22},"name":"position_first","qualname":"::iter::IndexedParallelIterator::position_first","value":"pub fn position_first<P>(Self, P) -> Option<usize> where P: Fn(Self::Item) ->\nbool + Sync + Send","parent":{"krate":0,"index":4699},"children":[],"decl_id":null,"docs":" Searches for the sequentially **first** item in the parallel iterator\n that matches the given predicate, and returns its index.","sig":null,"attributes":[{"value":"/ Searches for the sequentially **first** item in the parallel iterator","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":115446,"byte_end":115519,"line_start":2607,"line_end":2607,"column_start":5,"column_end":78}},{"value":"/ that matches the given predicate, and returns its index.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":115524,"byte_end":115584,"line_start":2608,"line_end":2608,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":115589,"byte_end":115592,"line_start":2609,"line_end":2609,"column_start":5,"column_end":8}},{"value":"/ Like `ParallelIterator::find_first`, once a match is found,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":115597,"byte_end":115660,"line_start":2610,"line_end":2610,"column_start":5,"column_end":68}},{"value":"/ all attempts to the right of the match will be stopped, while","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":115665,"byte_end":115730,"line_start":2611,"line_end":2611,"column_start":5,"column_end":70}},{"value":"/ attempts to the left must continue in case an earlier match","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":115735,"byte_end":115798,"line_start":2612,"line_end":2612,"column_start":5,"column_end":68}},{"value":"/ is found.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":115803,"byte_end":115816,"line_start":2613,"line_end":2613,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":115821,"byte_end":115824,"line_start":2614,"line_end":2614,"column_start":5,"column_end":8}},{"value":"/ Note that not all parallel iterators have a useful order, much like","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":115829,"byte_end":115900,"line_start":2615,"line_end":2615,"column_start":5,"column_end":76}},{"value":"/ sequential `HashMap` iteration, so \"first\" may be nebulous.  If you","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":115905,"byte_end":115976,"line_start":2616,"line_end":2616,"column_start":5,"column_end":76}},{"value":"/ just want the first match that discovered anywhere in the iterator,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":115981,"byte_end":116052,"line_start":2617,"line_end":2617,"column_start":5,"column_end":76}},{"value":"/ `position_any` is a better choice.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":116057,"byte_end":116095,"line_start":2618,"line_end":2618,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":116100,"byte_end":116103,"line_start":2619,"line_end":2619,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":116108,"byte_end":116122,"line_start":2620,"line_end":2620,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":116127,"byte_end":116130,"line_start":2621,"line_end":2621,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":116135,"byte_end":116142,"line_start":2622,"line_end":2622,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":116147,"byte_end":116173,"line_start":2623,"line_end":2623,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":116178,"byte_end":116181,"line_start":2624,"line_end":2624,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3, 3];","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":116186,"byte_end":116211,"line_start":2625,"line_end":2625,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":116216,"byte_end":116219,"line_start":2626,"line_end":2626,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().position_first(|&x| x == 3), Some(2));","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":116224,"byte_end":116290,"line_start":2627,"line_end":2627,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":116295,"byte_end":116298,"line_start":2628,"line_end":2628,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().position_first(|&x| x == 100), None);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":116303,"byte_end":116368,"line_start":2629,"line_end":2629,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":116373,"byte_end":116380,"line_start":2630,"line_end":2630,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4749},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":117609,"byte_end":117622,"line_start":2668,"line_end":2668,"column_start":8,"column_end":21},"name":"position_last","qualname":"::iter::IndexedParallelIterator::position_last","value":"pub fn position_last<P>(Self, P) -> Option<usize> where P: Fn(Self::Item) ->\nbool + Sync + Send","parent":{"krate":0,"index":4699},"children":[],"decl_id":null,"docs":" Searches for the sequentially **last** item in the parallel iterator\n that matches the given predicate, and returns its index.","sig":null,"attributes":[{"value":"/ Searches for the sequentially **last** item in the parallel iterator","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":116703,"byte_end":116775,"line_start":2644,"line_end":2644,"column_start":5,"column_end":77}},{"value":"/ that matches the given predicate, and returns its index.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":116780,"byte_end":116840,"line_start":2645,"line_end":2645,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":116845,"byte_end":116848,"line_start":2646,"line_end":2646,"column_start":5,"column_end":8}},{"value":"/ Like `ParallelIterator::find_last`, once a match is found,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":116853,"byte_end":116915,"line_start":2647,"line_end":2647,"column_start":5,"column_end":67}},{"value":"/ all attempts to the left of the match will be stopped, while","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":116920,"byte_end":116984,"line_start":2648,"line_end":2648,"column_start":5,"column_end":69}},{"value":"/ attempts to the right must continue in case a later match","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":116989,"byte_end":117050,"line_start":2649,"line_end":2649,"column_start":5,"column_end":66}},{"value":"/ is found.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":117055,"byte_end":117068,"line_start":2650,"line_end":2650,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":117073,"byte_end":117076,"line_start":2651,"line_end":2651,"column_start":5,"column_end":8}},{"value":"/ Note that not all parallel iterators have a useful order, much like","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":117081,"byte_end":117152,"line_start":2652,"line_end":2652,"column_start":5,"column_end":76}},{"value":"/ sequential `HashMap` iteration, so \"last\" may be nebulous.  When the","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":117157,"byte_end":117229,"line_start":2653,"line_end":2653,"column_start":5,"column_end":77}},{"value":"/ order doesn't actually matter to you, `position_any` is a better","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":117234,"byte_end":117302,"line_start":2654,"line_end":2654,"column_start":5,"column_end":73}},{"value":"/ choice.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":117307,"byte_end":117318,"line_start":2655,"line_end":2655,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":117323,"byte_end":117326,"line_start":2656,"line_end":2656,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":117331,"byte_end":117345,"line_start":2657,"line_end":2657,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":117350,"byte_end":117353,"line_start":2658,"line_end":2658,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":117358,"byte_end":117365,"line_start":2659,"line_end":2659,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":117370,"byte_end":117396,"line_start":2660,"line_end":2660,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":117401,"byte_end":117404,"line_start":2661,"line_end":2661,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3, 3];","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":117409,"byte_end":117434,"line_start":2662,"line_end":2662,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":117439,"byte_end":117442,"line_start":2663,"line_end":2663,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().position_last(|&x| x == 3), Some(3));","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":117447,"byte_end":117512,"line_start":2664,"line_end":2664,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":117517,"byte_end":117520,"line_start":2665,"line_end":2665,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().position_last(|&x| x == 100), None);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":117525,"byte_end":117589,"line_start":2666,"line_end":2666,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":117594,"byte_end":117601,"line_start":2667,"line_end":2667,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4752},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":118110,"byte_end":118118,"line_start":2686,"line_end":2686,"column_start":8,"column_end":16},"name":"position","qualname":"::iter::IndexedParallelIterator::position","value":"pub fn position<P>(Self, P) -> Option<usize> where P: Fn(Self::Item) -> bool +\nSync + Send","parent":{"krate":0,"index":4699},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note =\n             \"parallel `position` does not search in order -- use `position_any`, \\\\\n                `position_first`, or `position_last`\")","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":117941,"byte_end":118102,"line_start":2682,"line_end":2685,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":4754},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":119009,"byte_end":119018,"line_start":2711,"line_end":2711,"column_start":8,"column_end":17},"name":"positions","qualname":"::iter::IndexedParallelIterator::positions","value":"pub fn positions<P>(Self, P) -> Positions<Self, P> where P: Fn(Self::Item) ->\nbool + Sync + Send","parent":{"krate":0,"index":4699},"children":[],"decl_id":null,"docs":" Searches for items in the parallel iterator that match the given\n predicate, and returns their indices.","sig":null,"attributes":[{"value":"/ Searches for items in the parallel iterator that match the given","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":118272,"byte_end":118340,"line_start":2693,"line_end":2693,"column_start":5,"column_end":73}},{"value":"/ predicate, and returns their indices.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":118345,"byte_end":118386,"line_start":2694,"line_end":2694,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":118391,"byte_end":118394,"line_start":2695,"line_end":2695,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":118399,"byte_end":118413,"line_start":2696,"line_end":2696,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":118418,"byte_end":118421,"line_start":2697,"line_end":2697,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":118426,"byte_end":118433,"line_start":2698,"line_end":2698,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":118438,"byte_end":118464,"line_start":2699,"line_end":2699,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":118469,"byte_end":118472,"line_start":2700,"line_end":2700,"column_start":5,"column_end":8}},{"value":"/ let primes = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29];","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":118477,"byte_end":118535,"line_start":2701,"line_end":2701,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":118540,"byte_end":118543,"line_start":2702,"line_end":2702,"column_start":5,"column_end":8}},{"value":"/ // Find the positions of primes congruent to 1 modulo 6","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":118548,"byte_end":118607,"line_start":2703,"line_end":2703,"column_start":5,"column_end":64}},{"value":"/ let p1mod6: Vec<_> = primes.par_iter().positions(|&p| p % 6 == 1).collect();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":118612,"byte_end":118692,"line_start":2704,"line_end":2704,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(p1mod6, [3, 5, 7]); // primes 7, 13, and 19","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":118697,"byte_end":118755,"line_start":2705,"line_end":2705,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":118760,"byte_end":118763,"line_start":2706,"line_end":2706,"column_start":5,"column_end":8}},{"value":"/ // Find the positions of primes congruent to 5 modulo 6","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":118768,"byte_end":118827,"line_start":2707,"line_end":2707,"column_start":5,"column_end":64}},{"value":"/ let p5mod6: Vec<_> = primes.par_iter().positions(|&p| p % 6 == 5).collect();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":118832,"byte_end":118912,"line_start":2708,"line_end":2708,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(p5mod6, [2, 4, 6, 8, 9]); // primes 5, 11, 17, 23, and 29","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":118917,"byte_end":118989,"line_start":2709,"line_end":2709,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":118994,"byte_end":119001,"line_start":2710,"line_end":2710,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4756},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":119535,"byte_end":119538,"line_start":2733,"line_end":2733,"column_start":8,"column_end":11},"name":"rev","qualname":"::iter::IndexedParallelIterator::rev","value":"pub fn rev(Self) -> Rev<Self>","parent":{"krate":0,"index":4699},"children":[],"decl_id":null,"docs":" Produces a new iterator with the elements of this iterator in\n reverse order.","sig":null,"attributes":[{"value":"/ Produces a new iterator with the elements of this iterator in","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":119180,"byte_end":119245,"line_start":2718,"line_end":2718,"column_start":5,"column_end":70}},{"value":"/ reverse order.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":119250,"byte_end":119268,"line_start":2719,"line_end":2719,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":119273,"byte_end":119276,"line_start":2720,"line_end":2720,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":119281,"byte_end":119295,"line_start":2721,"line_end":2721,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":119300,"byte_end":119303,"line_start":2722,"line_end":2722,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":119308,"byte_end":119315,"line_start":2723,"line_end":2723,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":119320,"byte_end":119346,"line_start":2724,"line_end":2724,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":119351,"byte_end":119354,"line_start":2725,"line_end":2725,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = (0..5)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":119359,"byte_end":119390,"line_start":2726,"line_end":2726,"column_start":5,"column_end":36}},{"value":"/     .into_par_iter()","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":119395,"byte_end":119419,"line_start":2727,"line_end":2727,"column_start":5,"column_end":29}},{"value":"/     .rev()","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":119424,"byte_end":119438,"line_start":2728,"line_end":2728,"column_start":5,"column_end":19}},{"value":"/     .collect();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":119443,"byte_end":119462,"line_start":2729,"line_end":2729,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":119467,"byte_end":119470,"line_start":2730,"line_end":2730,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, [4, 3, 2, 1, 0]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":119475,"byte_end":119515,"line_start":2731,"line_end":2731,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":119520,"byte_end":119527,"line_start":2732,"line_end":2732,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4757},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":120355,"byte_end":120367,"line_start":2759,"line_end":2759,"column_start":8,"column_end":20},"name":"with_min_len","qualname":"::iter::IndexedParallelIterator::with_min_len","value":"pub fn with_min_len(Self, usize) -> MinLen<Self>","parent":{"krate":0,"index":4699},"children":[],"decl_id":null,"docs":" Sets the minimum length of iterators desired to process in each\n thread.  Rayon will not split any smaller than this length, but\n of course an iterator could already be smaller to begin with.","sig":null,"attributes":[{"value":"/ Sets the minimum length of iterators desired to process in each","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":119594,"byte_end":119661,"line_start":2737,"line_end":2737,"column_start":5,"column_end":72}},{"value":"/ thread.  Rayon will not split any smaller than this length, but","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":119666,"byte_end":119733,"line_start":2738,"line_end":2738,"column_start":5,"column_end":72}},{"value":"/ of course an iterator could already be smaller to begin with.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":119738,"byte_end":119803,"line_start":2739,"line_end":2739,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":119808,"byte_end":119811,"line_start":2740,"line_end":2740,"column_start":5,"column_end":8}},{"value":"/ Producers like `zip` and `interleave` will use greater of the two","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":119816,"byte_end":119885,"line_start":2741,"line_end":2741,"column_start":5,"column_end":74}},{"value":"/ minimums.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":119890,"byte_end":119903,"line_start":2742,"line_end":2742,"column_start":5,"column_end":18}},{"value":"/ Chained iterators and iterators inside `flat_map` may each use","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":119908,"byte_end":119974,"line_start":2743,"line_end":2743,"column_start":5,"column_end":71}},{"value":"/ their own minimum length.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":119979,"byte_end":120008,"line_start":2744,"line_end":2744,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":120013,"byte_end":120016,"line_start":2745,"line_end":2745,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":120021,"byte_end":120035,"line_start":2746,"line_end":2746,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":120040,"byte_end":120043,"line_start":2747,"line_end":2747,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":120048,"byte_end":120055,"line_start":2748,"line_end":2748,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":120060,"byte_end":120086,"line_start":2749,"line_end":2749,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":120091,"byte_end":120094,"line_start":2750,"line_end":2750,"column_start":5,"column_end":8}},{"value":"/ let min = (0..1_000_000)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":120099,"byte_end":120127,"line_start":2751,"line_end":2751,"column_start":5,"column_end":33}},{"value":"/     .into_par_iter()","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":120132,"byte_end":120156,"line_start":2752,"line_end":2752,"column_start":5,"column_end":29}},{"value":"/     .with_min_len(1234)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":120161,"byte_end":120188,"line_start":2753,"line_end":2753,"column_start":5,"column_end":32}},{"value":"/     .fold(|| 0, |acc, _| acc + 1) // count how many are in this segment","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":120193,"byte_end":120268,"line_start":2754,"line_end":2754,"column_start":5,"column_end":80}},{"value":"/     .min().unwrap();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":120273,"byte_end":120297,"line_start":2755,"line_end":2755,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":120302,"byte_end":120305,"line_start":2756,"line_end":2756,"column_start":5,"column_end":8}},{"value":"/ assert!(min >= 1234);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":120310,"byte_end":120335,"line_start":2757,"line_end":2757,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":120340,"byte_end":120347,"line_start":2758,"line_end":2758,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4758},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":121306,"byte_end":121318,"line_start":2787,"line_end":2787,"column_start":8,"column_end":20},"name":"with_max_len","qualname":"::iter::IndexedParallelIterator::with_max_len","value":"pub fn with_max_len(Self, usize) -> MaxLen<Self>","parent":{"krate":0,"index":4699},"children":[],"decl_id":null,"docs":" Sets the maximum length of iterators desired to process in each\n thread.  Rayon will try to split at least below this length,\n unless that would put it below the length from `with_min_len()`.\n For example, given min=10 and max=15, a length of 16 will not be\n split any further.","sig":null,"attributes":[{"value":"/ Sets the maximum length of iterators desired to process in each","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":120446,"byte_end":120513,"line_start":2763,"line_end":2763,"column_start":5,"column_end":72}},{"value":"/ thread.  Rayon will try to split at least below this length,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":120518,"byte_end":120582,"line_start":2764,"line_end":2764,"column_start":5,"column_end":69}},{"value":"/ unless that would put it below the length from `with_min_len()`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":120587,"byte_end":120655,"line_start":2765,"line_end":2765,"column_start":5,"column_end":73}},{"value":"/ For example, given min=10 and max=15, a length of 16 will not be","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":120660,"byte_end":120728,"line_start":2766,"line_end":2766,"column_start":5,"column_end":73}},{"value":"/ split any further.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":120733,"byte_end":120755,"line_start":2767,"line_end":2767,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":120760,"byte_end":120763,"line_start":2768,"line_end":2768,"column_start":5,"column_end":8}},{"value":"/ Producers like `zip` and `interleave` will use lesser of the two","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":120768,"byte_end":120836,"line_start":2769,"line_end":2769,"column_start":5,"column_end":73}},{"value":"/ maximums.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":120841,"byte_end":120854,"line_start":2770,"line_end":2770,"column_start":5,"column_end":18}},{"value":"/ Chained iterators and iterators inside `flat_map` may each use","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":120859,"byte_end":120925,"line_start":2771,"line_end":2771,"column_start":5,"column_end":71}},{"value":"/ their own maximum length.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":120930,"byte_end":120959,"line_start":2772,"line_end":2772,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":120964,"byte_end":120967,"line_start":2773,"line_end":2773,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":120972,"byte_end":120986,"line_start":2774,"line_end":2774,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":120991,"byte_end":120994,"line_start":2775,"line_end":2775,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":120999,"byte_end":121006,"line_start":2776,"line_end":2776,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":121011,"byte_end":121037,"line_start":2777,"line_end":2777,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":121042,"byte_end":121045,"line_start":2778,"line_end":2778,"column_start":5,"column_end":8}},{"value":"/ let max = (0..1_000_000)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":121050,"byte_end":121078,"line_start":2779,"line_end":2779,"column_start":5,"column_end":33}},{"value":"/     .into_par_iter()","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":121083,"byte_end":121107,"line_start":2780,"line_end":2780,"column_start":5,"column_end":29}},{"value":"/     .with_max_len(1234)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":121112,"byte_end":121139,"line_start":2781,"line_end":2781,"column_start":5,"column_end":32}},{"value":"/     .fold(|| 0, |acc, _| acc + 1) // count how many are in this segment","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":121144,"byte_end":121219,"line_start":2782,"line_end":2782,"column_start":5,"column_end":80}},{"value":"/     .max().unwrap();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":121224,"byte_end":121248,"line_start":2783,"line_end":2783,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":121253,"byte_end":121256,"line_start":2784,"line_end":2784,"column_start":5,"column_end":8}},{"value":"/ assert!(max <= 1234);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":121261,"byte_end":121286,"line_start":2785,"line_end":2785,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":121291,"byte_end":121298,"line_start":2786,"line_end":2786,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4759},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":121806,"byte_end":121809,"line_start":2805,"line_end":2805,"column_start":8,"column_end":11},"name":"len","qualname":"::iter::IndexedParallelIterator::len","value":"pub fn len(&Self) -> usize","parent":{"krate":0,"index":4699},"children":[],"decl_id":null,"docs":" Produces an exact count of how many items this iterator will\n produce, presuming no panic occurs.","sig":null,"attributes":[{"value":"/ Produces an exact count of how many items this iterator will","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":121397,"byte_end":121461,"line_start":2791,"line_end":2791,"column_start":5,"column_end":69}},{"value":"/ produce, presuming no panic occurs.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":121466,"byte_end":121505,"line_start":2792,"line_end":2792,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":121510,"byte_end":121513,"line_start":2793,"line_end":2793,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":121518,"byte_end":121532,"line_start":2794,"line_end":2794,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":121537,"byte_end":121540,"line_start":2795,"line_end":2795,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":121545,"byte_end":121552,"line_start":2796,"line_end":2796,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":121557,"byte_end":121583,"line_start":2797,"line_end":2797,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":121588,"byte_end":121591,"line_start":2798,"line_end":2798,"column_start":5,"column_end":8}},{"value":"/ let par_iter = (0..100).into_par_iter().zip(vec![0; 10]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":121596,"byte_end":121657,"line_start":2799,"line_end":2799,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(par_iter.len(), 10);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":121662,"byte_end":121697,"line_start":2800,"line_end":2800,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":121702,"byte_end":121705,"line_start":2801,"line_end":2801,"column_start":5,"column_end":8}},{"value":"/ let vec: Vec<_> = par_iter.collect();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":121710,"byte_end":121751,"line_start":2802,"line_end":2802,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(vec.len(), 10);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":121756,"byte_end":121786,"line_start":2803,"line_end":2803,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":121791,"byte_end":121798,"line_start":2804,"line_end":2804,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4760},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":122509,"byte_end":122514,"line_start":2821,"line_end":2821,"column_start":8,"column_end":13},"name":"drive","qualname":"::iter::IndexedParallelIterator::drive","value":"pub fn drive<C: Consumer<Self::Item>>(Self, C) -> C::Result","parent":{"krate":0,"index":4699},"children":[],"decl_id":null,"docs":" Internal method used to define the behavior of this parallel\n iterator. You should not need to call this directly.","sig":null,"attributes":[{"value":"/ Internal method used to define the behavior of this parallel","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":121832,"byte_end":121896,"line_start":2807,"line_end":2807,"column_start":5,"column_end":69}},{"value":"/ iterator. You should not need to call this directly.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":121901,"byte_end":121957,"line_start":2808,"line_end":2808,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":121962,"byte_end":121965,"line_start":2809,"line_end":2809,"column_start":5,"column_end":8}},{"value":"/ This method causes the iterator `self` to start producing","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":121970,"byte_end":122031,"line_start":2810,"line_end":2810,"column_start":5,"column_end":66}},{"value":"/ items and to feed them to the consumer `consumer` one by one.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":122036,"byte_end":122101,"line_start":2811,"line_end":2811,"column_start":5,"column_end":70}},{"value":"/ It may split the consumer before doing so to create the","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":122106,"byte_end":122165,"line_start":2812,"line_end":2812,"column_start":5,"column_end":64}},{"value":"/ opportunity to produce in parallel. If a split does happen, it","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":122170,"byte_end":122236,"line_start":2813,"line_end":2813,"column_start":5,"column_end":71}},{"value":"/ will inform the consumer of the index where the split should","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":122241,"byte_end":122305,"line_start":2814,"line_end":2814,"column_start":5,"column_end":69}},{"value":"/ occur (unlike `ParallelIterator::drive_unindexed()`).","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":122310,"byte_end":122367,"line_start":2815,"line_end":2815,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":122372,"byte_end":122375,"line_start":2816,"line_end":2816,"column_start":5,"column_end":8}},{"value":"/ See the [README] for more details on the internals of parallel","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":122380,"byte_end":122446,"line_start":2817,"line_end":2817,"column_start":5,"column_end":71}},{"value":"/ iterators.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":122451,"byte_end":122465,"line_start":2818,"line_end":2818,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":122470,"byte_end":122473,"line_start":2819,"line_end":2819,"column_start":5,"column_end":8}},{"value":"/ [README]: README.md","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":122478,"byte_end":122501,"line_start":2820,"line_end":2820,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":4762},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":123290,"byte_end":123303,"line_start":2838,"line_end":2838,"column_start":8,"column_end":21},"name":"with_producer","qualname":"::iter::IndexedParallelIterator::with_producer","value":"pub fn with_producer<CB: ProducerCallback<Self::Item>>(Self, CB) -> CB::Output","parent":{"krate":0,"index":4699},"children":[],"decl_id":null,"docs":" Internal method used to define the behavior of this parallel\n iterator. You should not need to call this directly.","sig":null,"attributes":[{"value":"/ Internal method used to define the behavior of this parallel","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":122578,"byte_end":122642,"line_start":2823,"line_end":2823,"column_start":5,"column_end":69}},{"value":"/ iterator. You should not need to call this directly.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":122647,"byte_end":122703,"line_start":2824,"line_end":2824,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":122708,"byte_end":122711,"line_start":2825,"line_end":2825,"column_start":5,"column_end":8}},{"value":"/ This method converts the iterator into a producer P and then","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":122716,"byte_end":122780,"line_start":2826,"line_end":2826,"column_start":5,"column_end":69}},{"value":"/ invokes `callback.callback()` with P. Note that the type of","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":122785,"byte_end":122848,"line_start":2827,"line_end":2827,"column_start":5,"column_end":68}},{"value":"/ this producer is not defined as part of the API, since","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":122853,"byte_end":122911,"line_start":2828,"line_end":2828,"column_start":5,"column_end":63}},{"value":"/ `callback` must be defined generically for all producers. This","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":122916,"byte_end":122982,"line_start":2829,"line_end":2829,"column_start":5,"column_end":71}},{"value":"/ allows the producer type to contain references; it also means","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":122987,"byte_end":123052,"line_start":2830,"line_end":2830,"column_start":5,"column_end":70}},{"value":"/ that parallel iterators can adjust that type without causing a","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":123057,"byte_end":123123,"line_start":2831,"line_end":2831,"column_start":5,"column_end":71}},{"value":"/ breaking change.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":123128,"byte_end":123148,"line_start":2832,"line_end":2832,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":123153,"byte_end":123156,"line_start":2833,"line_end":2833,"column_start":5,"column_end":8}},{"value":"/ See the [README] for more details on the internals of parallel","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":123161,"byte_end":123227,"line_start":2834,"line_end":2834,"column_start":5,"column_end":71}},{"value":"/ iterators.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":123232,"byte_end":123246,"line_start":2835,"line_end":2835,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":123251,"byte_end":123254,"line_start":2836,"line_end":2836,"column_start":5,"column_end":8}},{"value":"/ [README]: README.md","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":123259,"byte_end":123282,"line_start":2837,"line_end":2837,"column_start":5,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":4764},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":124453,"byte_end":124473,"line_start":2877,"line_end":2877,"column_start":11,"column_end":31},"name":"FromParallelIterator","qualname":"::iter::FromParallelIterator","value":"FromParallelIterator<T>","parent":null,"children":[{"krate":0,"index":4766}],"decl_id":null,"docs":" `FromParallelIterator` implements the creation of a collection\n from a [`ParallelIterator`]. By implementing\n `FromParallelIterator` for a given type, you define how it will be\n created from an iterator.","sig":null,"attributes":[{"value":"/ `FromParallelIterator` implements the creation of a collection","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":123376,"byte_end":123442,"line_start":2841,"line_end":2841,"column_start":1,"column_end":67}},{"value":"/ from a [`ParallelIterator`]. By implementing","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":123443,"byte_end":123491,"line_start":2842,"line_end":2842,"column_start":1,"column_end":49}},{"value":"/ `FromParallelIterator` for a given type, you define how it will be","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":123492,"byte_end":123562,"line_start":2843,"line_end":2843,"column_start":1,"column_end":71}},{"value":"/ created from an iterator.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":123563,"byte_end":123592,"line_start":2844,"line_end":2844,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":123593,"byte_end":123596,"line_start":2845,"line_end":2845,"column_start":1,"column_end":4}},{"value":"/ `FromParallelIterator` is used through [`ParallelIterator`]'s [`collect()`] method.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":123597,"byte_end":123684,"line_start":2846,"line_end":2846,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":123685,"byte_end":123688,"line_start":2847,"line_end":2847,"column_start":1,"column_end":4}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":123689,"byte_end":123742,"line_start":2848,"line_end":2848,"column_start":1,"column_end":54}},{"value":"/ [`collect()`]: trait.ParallelIterator.html#method.collect","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":123743,"byte_end":123804,"line_start":2849,"line_end":2849,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":123805,"byte_end":123808,"line_start":2850,"line_end":2850,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":123809,"byte_end":123823,"line_start":2851,"line_end":2851,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":123824,"byte_end":123827,"line_start":2852,"line_end":2852,"column_start":1,"column_end":4}},{"value":"/ Implementing `FromParallelIterator` for your type:","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":123828,"byte_end":123882,"line_start":2853,"line_end":2853,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":123883,"byte_end":123886,"line_start":2854,"line_end":2854,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":123887,"byte_end":123894,"line_start":2855,"line_end":2855,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":123895,"byte_end":123921,"line_start":2856,"line_end":2856,"column_start":1,"column_end":27}},{"value":"/ use std::mem;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":123922,"byte_end":123939,"line_start":2857,"line_end":2857,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":123940,"byte_end":123943,"line_start":2858,"line_end":2858,"column_start":1,"column_end":4}},{"value":"/ struct BlackHole {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":123944,"byte_end":123966,"line_start":2859,"line_end":2859,"column_start":1,"column_end":23}},{"value":"/     mass: usize,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":123967,"byte_end":123987,"line_start":2860,"line_end":2860,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":123988,"byte_end":123993,"line_start":2861,"line_end":2861,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":123994,"byte_end":123997,"line_start":2862,"line_end":2862,"column_start":1,"column_end":4}},{"value":"/ impl<T: Send> FromParallelIterator<T> for BlackHole {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":123998,"byte_end":124055,"line_start":2863,"line_end":2863,"column_start":1,"column_end":58}},{"value":"/     fn from_par_iter<I>(par_iter: I) -> Self","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":124056,"byte_end":124104,"line_start":2864,"line_end":2864,"column_start":1,"column_end":49}},{"value":"/         where I: IntoParallelIterator<Item = T>","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":124105,"byte_end":124156,"line_start":2865,"line_end":2865,"column_start":1,"column_end":52}},{"value":"/     {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":124157,"byte_end":124166,"line_start":2866,"line_end":2866,"column_start":1,"column_end":10}},{"value":"/         let par_iter = par_iter.into_par_iter();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":124167,"byte_end":124219,"line_start":2867,"line_end":2867,"column_start":1,"column_end":53}},{"value":"/         BlackHole {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":124220,"byte_end":124243,"line_start":2868,"line_end":2868,"column_start":1,"column_end":24}},{"value":"/             mass: par_iter.count() * mem::size_of::<T>(),","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":124244,"byte_end":124305,"line_start":2869,"line_end":2869,"column_start":1,"column_end":62}},{"value":"/         }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":124306,"byte_end":124319,"line_start":2870,"line_end":2870,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":124320,"byte_end":124329,"line_start":2871,"line_end":2871,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":124330,"byte_end":124335,"line_start":2872,"line_end":2872,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":124336,"byte_end":124339,"line_start":2873,"line_end":2873,"column_start":1,"column_end":4}},{"value":"/ let bh: BlackHole = (0i32..1000).into_par_iter().collect();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":124340,"byte_end":124403,"line_start":2874,"line_end":2874,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(bh.mass, 4000);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":124404,"byte_end":124434,"line_start":2875,"line_end":2875,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":124435,"byte_end":124442,"line_start":2876,"line_end":2876,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4766},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":125451,"byte_end":125464,"line_start":2896,"line_end":2896,"column_start":8,"column_end":21},"name":"from_par_iter","qualname":"::iter::FromParallelIterator::from_par_iter","value":"pub fn from_par_iter<I>(I) -> Self where I: IntoParallelIterator<Item = T>","parent":{"krate":0,"index":4764},"children":[],"decl_id":null,"docs":" Creates an instance of the collection from the parallel iterator `par_iter`.","sig":null,"attributes":[{"value":"/ Creates an instance of the collection from the parallel iterator `par_iter`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":124502,"byte_end":124582,"line_start":2881,"line_end":2881,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":124587,"byte_end":124590,"line_start":2882,"line_end":2882,"column_start":5,"column_end":8}},{"value":"/ If your collection is not naturally parallel, the easiest (and","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":124595,"byte_end":124661,"line_start":2883,"line_end":2883,"column_start":5,"column_end":71}},{"value":"/ fastest) way to do this is often to collect `par_iter` into a","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":124666,"byte_end":124731,"line_start":2884,"line_end":2884,"column_start":5,"column_end":70}},{"value":"/ [`LinkedList`] or other intermediate data structure and then","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":124736,"byte_end":124800,"line_start":2885,"line_end":2885,"column_start":5,"column_end":69}},{"value":"/ sequentially extend your collection. However, a more 'native'","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":124805,"byte_end":124870,"line_start":2886,"line_end":2886,"column_start":5,"column_end":70}},{"value":"/ technique is to use the [`par_iter.fold`] or","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":124875,"byte_end":124923,"line_start":2887,"line_end":2887,"column_start":5,"column_end":53}},{"value":"/ [`par_iter.fold_with`] methods to create the collection.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":124928,"byte_end":124988,"line_start":2888,"line_end":2888,"column_start":5,"column_end":65}},{"value":"/ Alternatively, if your collection is 'natively' parallel, you","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":124993,"byte_end":125058,"line_start":2889,"line_end":2889,"column_start":5,"column_end":70}},{"value":"/ can use `par_iter.for_each` to process each element in turn.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":125063,"byte_end":125127,"line_start":2890,"line_end":2890,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":125132,"byte_end":125135,"line_start":2891,"line_end":2891,"column_start":5,"column_end":8}},{"value":"/ [`LinkedList`]: https://doc.rust-lang.org/std/collections/struct.LinkedList.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":125140,"byte_end":125224,"line_start":2892,"line_end":2892,"column_start":5,"column_end":89}},{"value":"/ [`par_iter.fold`]: trait.ParallelIterator.html#method.fold","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":125229,"byte_end":125291,"line_start":2893,"line_end":2893,"column_start":5,"column_end":67}},{"value":"/ [`par_iter.fold_with`]: trait.ParallelIterator.html#method.fold_with","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":125296,"byte_end":125368,"line_start":2894,"line_end":2894,"column_start":5,"column_end":77}},{"value":"/ [`par_iter.for_each`]: trait.ParallelIterator.html#method.for_each","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":125373,"byte_end":125443,"line_start":2895,"line_end":2895,"column_start":5,"column_end":75}}]},{"kind":"Trait","id":{"krate":0,"index":4768},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":126363,"byte_end":126377,"line_start":2932,"line_end":2932,"column_start":11,"column_end":25},"name":"ParallelExtend","qualname":"::iter::ParallelExtend","value":"ParallelExtend<T>","parent":null,"children":[{"krate":0,"index":4770}],"decl_id":null,"docs":" `ParallelExtend` extends an existing collection with items from a [`ParallelIterator`].","sig":null,"attributes":[{"value":"/ `ParallelExtend` extends an existing collection with items from a [`ParallelIterator`].","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":125545,"byte_end":125636,"line_start":2901,"line_end":2901,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":125637,"byte_end":125640,"line_start":2902,"line_end":2902,"column_start":1,"column_end":4}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":125641,"byte_end":125694,"line_start":2903,"line_end":2903,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":125695,"byte_end":125698,"line_start":2904,"line_end":2904,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":125699,"byte_end":125713,"line_start":2905,"line_end":2905,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":125714,"byte_end":125717,"line_start":2906,"line_end":2906,"column_start":1,"column_end":4}},{"value":"/ Implementing `ParallelExtend` for your type:","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":125718,"byte_end":125766,"line_start":2907,"line_end":2907,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":125767,"byte_end":125770,"line_start":2908,"line_end":2908,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":125771,"byte_end":125778,"line_start":2909,"line_end":2909,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":125779,"byte_end":125805,"line_start":2910,"line_end":2910,"column_start":1,"column_end":27}},{"value":"/ use std::mem;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":125806,"byte_end":125823,"line_start":2911,"line_end":2911,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":125824,"byte_end":125827,"line_start":2912,"line_end":2912,"column_start":1,"column_end":4}},{"value":"/ struct BlackHole {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":125828,"byte_end":125850,"line_start":2913,"line_end":2913,"column_start":1,"column_end":23}},{"value":"/     mass: usize,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":125851,"byte_end":125871,"line_start":2914,"line_end":2914,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":125872,"byte_end":125877,"line_start":2915,"line_end":2915,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":125878,"byte_end":125881,"line_start":2916,"line_end":2916,"column_start":1,"column_end":4}},{"value":"/ impl<T: Send> ParallelExtend<T> for BlackHole {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":125882,"byte_end":125933,"line_start":2917,"line_end":2917,"column_start":1,"column_end":52}},{"value":"/     fn par_extend<I>(&mut self, par_iter: I)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":125934,"byte_end":125982,"line_start":2918,"line_end":2918,"column_start":1,"column_end":49}},{"value":"/         where I: IntoParallelIterator<Item = T>","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":125983,"byte_end":126034,"line_start":2919,"line_end":2919,"column_start":1,"column_end":52}},{"value":"/     {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":126035,"byte_end":126044,"line_start":2920,"line_end":2920,"column_start":1,"column_end":10}},{"value":"/         let par_iter = par_iter.into_par_iter();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":126045,"byte_end":126097,"line_start":2921,"line_end":2921,"column_start":1,"column_end":53}},{"value":"/         self.mass += par_iter.count() * mem::size_of::<T>();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":126098,"byte_end":126162,"line_start":2922,"line_end":2922,"column_start":1,"column_end":65}},{"value":"/     }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":126163,"byte_end":126172,"line_start":2923,"line_end":2923,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":126173,"byte_end":126178,"line_start":2924,"line_end":2924,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":126179,"byte_end":126182,"line_start":2925,"line_end":2925,"column_start":1,"column_end":4}},{"value":"/ let mut bh = BlackHole { mass: 0 };","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":126183,"byte_end":126222,"line_start":2926,"line_end":2926,"column_start":1,"column_end":40}},{"value":"/ bh.par_extend(0i32..1000);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":126223,"byte_end":126253,"line_start":2927,"line_end":2927,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(bh.mass, 4000);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":126254,"byte_end":126284,"line_start":2928,"line_end":2928,"column_start":1,"column_end":31}},{"value":"/ bh.par_extend(0i64..10);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":126285,"byte_end":126313,"line_start":2929,"line_end":2929,"column_start":1,"column_end":29}},{"value":"/ assert_eq!(bh.mass, 4080);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":126314,"byte_end":126344,"line_start":2930,"line_end":2930,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":126345,"byte_end":126352,"line_start":2931,"line_end":2931,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4770},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":126805,"byte_end":126815,"line_start":2949,"line_end":2949,"column_start":8,"column_end":18},"name":"par_extend","qualname":"::iter::ParallelExtend::par_extend","value":"pub fn par_extend<I>(&mut Self, I) where I: IntoParallelIterator<Item = T>","parent":{"krate":0,"index":4768},"children":[],"decl_id":null,"docs":" Extends an instance of the collection with the elements drawn\n from the parallel iterator `par_iter`.","sig":null,"attributes":[{"value":"/ Extends an instance of the collection with the elements drawn","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":126406,"byte_end":126471,"line_start":2936,"line_end":2936,"column_start":5,"column_end":70}},{"value":"/ from the parallel iterator `par_iter`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":126476,"byte_end":126518,"line_start":2937,"line_end":2937,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":126523,"byte_end":126526,"line_start":2938,"line_end":2938,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":126531,"byte_end":126545,"line_start":2939,"line_end":2939,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":126550,"byte_end":126553,"line_start":2940,"line_end":2940,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":126558,"byte_end":126565,"line_start":2941,"line_end":2941,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":126570,"byte_end":126596,"line_start":2942,"line_end":2942,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":126601,"byte_end":126604,"line_start":2943,"line_end":2943,"column_start":5,"column_end":8}},{"value":"/ let mut vec = vec![];","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":126609,"byte_end":126634,"line_start":2944,"line_end":2944,"column_start":5,"column_end":30}},{"value":"/ vec.par_extend(0..5);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":126639,"byte_end":126664,"line_start":2945,"line_end":2945,"column_start":5,"column_end":30}},{"value":"/ vec.par_extend((0..5).into_par_iter().map(|i| i * i));","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":126669,"byte_end":126727,"line_start":2946,"line_end":2946,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(vec, [0, 1, 2, 3, 4, 0, 1, 4, 9, 16]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":126732,"byte_end":126785,"line_start":2947,"line_end":2947,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":126790,"byte_end":126797,"line_start":2948,"line_end":2948,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":4772},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":127243,"byte_end":127260,"line_start":2961,"line_end":2961,"column_start":11,"column_end":28},"name":"ParallelDrainFull","qualname":"::iter::ParallelDrainFull","value":"ParallelDrainFull","parent":null,"children":[{"krate":0,"index":4773},{"krate":0,"index":4774},{"krate":0,"index":4775}],"decl_id":null,"docs":" `ParallelDrainFull` creates a parallel iterator that moves all items\n from a collection while retaining the original capacity.","sig":null,"attributes":[{"value":"/ `ParallelDrainFull` creates a parallel iterator that moves all items","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":126899,"byte_end":126971,"line_start":2954,"line_end":2954,"column_start":1,"column_end":73}},{"value":"/ from a collection while retaining the original capacity.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":126972,"byte_end":127032,"line_start":2955,"line_end":2955,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":127033,"byte_end":127036,"line_start":2956,"line_end":2956,"column_start":1,"column_end":4}},{"value":"/ Types which are indexable typically implement [`ParallelDrainRange`]","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":127037,"byte_end":127109,"line_start":2957,"line_end":2957,"column_start":1,"column_end":73}},{"value":"/ instead, where you can drain fully with `par_drain(..)`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":127110,"byte_end":127170,"line_start":2958,"line_end":2958,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":127171,"byte_end":127174,"line_start":2959,"line_end":2959,"column_start":1,"column_end":4}},{"value":"/ [`ParallelDrainRange`]: trait.ParallelDrainRange.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":127175,"byte_end":127232,"line_start":2960,"line_end":2960,"column_start":1,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":4773},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":127338,"byte_end":127342,"line_start":2963,"line_end":2963,"column_start":10,"column_end":14},"name":"Iter","qualname":"::iter::ParallelDrainFull::Iter","value":"type Iter: ParallelIterator<Item = Self::Item>;","parent":{"krate":0,"index":4772},"children":[],"decl_id":null,"docs":" The draining parallel iterator type that will be created.\n","sig":null,"attributes":[{"value":"/ The draining parallel iterator type that will be created.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":127267,"byte_end":127328,"line_start":2962,"line_end":2962,"column_start":5,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":4774},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":127523,"byte_end":127527,"line_start":2967,"line_end":2967,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::ParallelDrainFull::Item","value":"type Item: Send;","parent":{"krate":0,"index":4772},"children":[],"decl_id":null,"docs":" The type of item that the parallel iterator will produce.\n This is usually the same as `IntoParallelIterator::Item`.\n","sig":null,"attributes":[{"value":"/ The type of item that the parallel iterator will produce.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":127386,"byte_end":127447,"line_start":2965,"line_end":2965,"column_start":5,"column_end":66}},{"value":"/ This is usually the same as `IntoParallelIterator::Item`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":127452,"byte_end":127513,"line_start":2966,"line_end":2966,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":4775},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":128467,"byte_end":128476,"line_start":2994,"line_end":2994,"column_start":8,"column_end":17},"name":"par_drain","qualname":"::iter::ParallelDrainFull::par_drain","value":"pub fn par_drain(Self) -> Self::Iter","parent":{"krate":0,"index":4772},"children":[],"decl_id":null,"docs":" Returns a draining parallel iterator over an entire collection.","sig":null,"attributes":[{"value":"/ Returns a draining parallel iterator over an entire collection.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":127540,"byte_end":127607,"line_start":2969,"line_end":2969,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":127612,"byte_end":127615,"line_start":2970,"line_end":2970,"column_start":5,"column_end":8}},{"value":"/ When the iterator is dropped, all items are removed, even if the","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":127620,"byte_end":127688,"line_start":2971,"line_end":2971,"column_start":5,"column_end":73}},{"value":"/ iterator was not fully consumed. If the iterator is leaked, for example","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":127693,"byte_end":127768,"line_start":2972,"line_end":2972,"column_start":5,"column_end":80}},{"value":"/ using `std::mem::forget`, it is unspecified how many items are removed.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":127773,"byte_end":127848,"line_start":2973,"line_end":2973,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":127853,"byte_end":127856,"line_start":2974,"line_end":2974,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":127861,"byte_end":127875,"line_start":2975,"line_end":2975,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":127880,"byte_end":127883,"line_start":2976,"line_end":2976,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":127888,"byte_end":127895,"line_start":2977,"line_end":2977,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":127900,"byte_end":127926,"line_start":2978,"line_end":2978,"column_start":5,"column_end":31}},{"value":"/ use std::collections::{BinaryHeap, HashSet};","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":127931,"byte_end":127979,"line_start":2979,"line_end":2979,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":127984,"byte_end":127987,"line_start":2980,"line_end":2980,"column_start":5,"column_end":8}},{"value":"/ let squares: HashSet<i32> = (0..10).map(|x| x * x).collect();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":127992,"byte_end":128057,"line_start":2981,"line_end":2981,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":128062,"byte_end":128065,"line_start":2982,"line_end":2982,"column_start":5,"column_end":8}},{"value":"/ let mut heap: BinaryHeap<_> = squares.iter().copied().collect();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":128070,"byte_end":128138,"line_start":2983,"line_end":2983,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":128143,"byte_end":128158,"line_start":2984,"line_end":2984,"column_start":5,"column_end":20}},{"value":"/     // heaps are drained in arbitrary order","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":128163,"byte_end":128210,"line_start":2985,"line_end":2985,"column_start":5,"column_end":52}},{"value":"/     heap.par_drain()","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":128215,"byte_end":128239,"line_start":2986,"line_end":2986,"column_start":5,"column_end":29}},{"value":"/         .inspect(|x| assert!(squares.contains(x)))","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":128244,"byte_end":128298,"line_start":2987,"line_end":2987,"column_start":5,"column_end":59}},{"value":"/         .count(),","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":128303,"byte_end":128324,"line_start":2988,"line_end":2988,"column_start":5,"column_end":26}},{"value":"/     squares.len(),","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":128329,"byte_end":128351,"line_start":2989,"line_end":2989,"column_start":5,"column_end":27}},{"value":"/ );","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":128356,"byte_end":128362,"line_start":2990,"line_end":2990,"column_start":5,"column_end":11}},{"value":"/ assert!(heap.is_empty());","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":128367,"byte_end":128396,"line_start":2991,"line_end":2991,"column_start":5,"column_end":34}},{"value":"/ assert!(heap.capacity() >= squares.len());","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":128401,"byte_end":128447,"line_start":2992,"line_end":2992,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":128452,"byte_end":128459,"line_start":2993,"line_end":2993,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":4776},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":128796,"byte_end":128814,"line_start":3003,"line_end":3003,"column_start":11,"column_end":29},"name":"ParallelDrainRange","qualname":"::iter::ParallelDrainRange","value":"ParallelDrainRange<Idx = usize>","parent":null,"children":[{"krate":0,"index":4778},{"krate":0,"index":4779},{"krate":0,"index":4780}],"decl_id":null,"docs":" `ParallelDrainRange` creates a parallel iterator that moves a range of items\n from a collection while retaining the original capacity.","sig":null,"attributes":[{"value":"/ `ParallelDrainRange` creates a parallel iterator that moves a range of items","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":128501,"byte_end":128581,"line_start":2997,"line_end":2997,"column_start":1,"column_end":81}},{"value":"/ from a collection while retaining the original capacity.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":128582,"byte_end":128642,"line_start":2998,"line_end":2998,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":128643,"byte_end":128646,"line_start":2999,"line_end":2999,"column_start":1,"column_end":4}},{"value":"/ Types which are not indexable may implement [`ParallelDrainFull`] instead.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":128647,"byte_end":128725,"line_start":3000,"line_end":3000,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":128726,"byte_end":128729,"line_start":3001,"line_end":3001,"column_start":1,"column_end":4}},{"value":"/ [`ParallelDrainFull`]: trait.ParallelDrainFull.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":128730,"byte_end":128785,"line_start":3002,"line_end":3002,"column_start":1,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":4778},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":128905,"byte_end":128909,"line_start":3005,"line_end":3005,"column_start":10,"column_end":14},"name":"Iter","qualname":"::iter::ParallelDrainRange::Iter","value":"type Iter: ParallelIterator<Item = Self::Item>;","parent":{"krate":0,"index":4776},"children":[],"decl_id":null,"docs":" The draining parallel iterator type that will be created.\n","sig":null,"attributes":[{"value":"/ The draining parallel iterator type that will be created.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":128834,"byte_end":128895,"line_start":3004,"line_end":3004,"column_start":5,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":4779},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":129090,"byte_end":129094,"line_start":3009,"line_end":3009,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::ParallelDrainRange::Item","value":"type Item: Send;","parent":{"krate":0,"index":4776},"children":[],"decl_id":null,"docs":" The type of item that the parallel iterator will produce.\n This is usually the same as `IntoParallelIterator::Item`.\n","sig":null,"attributes":[{"value":"/ The type of item that the parallel iterator will produce.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":128953,"byte_end":129014,"line_start":3007,"line_end":3007,"column_start":5,"column_end":66}},{"value":"/ This is usually the same as `IntoParallelIterator::Item`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":129019,"byte_end":129080,"line_start":3008,"line_end":3008,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":4780},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":131305,"byte_end":131314,"line_start":3069,"line_end":3069,"column_start":8,"column_end":17},"name":"par_drain","qualname":"::iter::ParallelDrainRange::par_drain","value":"pub fn par_drain<R: RangeBounds<Idx>>(Self, R) -> Self::Iter","parent":{"krate":0,"index":4776},"children":[],"decl_id":null,"docs":" Returns a draining parallel iterator over a range of the collection.","sig":null,"attributes":[{"value":"/ Returns a draining parallel iterator over a range of the collection.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":129107,"byte_end":129179,"line_start":3011,"line_end":3011,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":129184,"byte_end":129187,"line_start":3012,"line_end":3012,"column_start":5,"column_end":8}},{"value":"/ When the iterator is dropped, all items in the range are removed, even","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":129192,"byte_end":129266,"line_start":3013,"line_end":3013,"column_start":5,"column_end":79}},{"value":"/ if the iterator was not fully consumed. If the iterator is leaked, for","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":129271,"byte_end":129345,"line_start":3014,"line_end":3014,"column_start":5,"column_end":79}},{"value":"/ example using `std::mem::forget`, it is unspecified how many items are","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":129350,"byte_end":129424,"line_start":3015,"line_end":3015,"column_start":5,"column_end":79}},{"value":"/ removed.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":129429,"byte_end":129441,"line_start":3016,"line_end":3016,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":129446,"byte_end":129449,"line_start":3017,"line_end":3017,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":129454,"byte_end":129468,"line_start":3018,"line_end":3018,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":129473,"byte_end":129476,"line_start":3019,"line_end":3019,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":129481,"byte_end":129488,"line_start":3020,"line_end":3020,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":129493,"byte_end":129519,"line_start":3021,"line_end":3021,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":129524,"byte_end":129527,"line_start":3022,"line_end":3022,"column_start":5,"column_end":8}},{"value":"/ let squares: Vec<i32> = (0..10).map(|x| x * x).collect();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":129532,"byte_end":129593,"line_start":3023,"line_end":3023,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":129598,"byte_end":129601,"line_start":3024,"line_end":3024,"column_start":5,"column_end":8}},{"value":"/ println!(\"RangeFull\");","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":129606,"byte_end":129632,"line_start":3025,"line_end":3025,"column_start":5,"column_end":31}},{"value":"/ let mut vec = squares.clone();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":129637,"byte_end":129671,"line_start":3026,"line_end":3026,"column_start":5,"column_end":39}},{"value":"/ assert!(vec.par_drain(..)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":129676,"byte_end":129705,"line_start":3027,"line_end":3027,"column_start":5,"column_end":34}},{"value":"/            .eq(squares.par_iter().copied()));","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":129710,"byte_end":129759,"line_start":3028,"line_end":3028,"column_start":5,"column_end":54}},{"value":"/ assert!(vec.is_empty());","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":129764,"byte_end":129792,"line_start":3029,"line_end":3029,"column_start":5,"column_end":33}},{"value":"/ assert!(vec.capacity() >= squares.len());","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":129797,"byte_end":129842,"line_start":3030,"line_end":3030,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":129847,"byte_end":129850,"line_start":3031,"line_end":3031,"column_start":5,"column_end":8}},{"value":"/ println!(\"RangeFrom\");","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":129855,"byte_end":129881,"line_start":3032,"line_end":3032,"column_start":5,"column_end":31}},{"value":"/ let mut vec = squares.clone();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":129886,"byte_end":129920,"line_start":3033,"line_end":3033,"column_start":5,"column_end":39}},{"value":"/ assert!(vec.par_drain(5..)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":129925,"byte_end":129955,"line_start":3034,"line_end":3034,"column_start":5,"column_end":35}},{"value":"/            .eq(squares[5..].par_iter().copied()));","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":129960,"byte_end":130014,"line_start":3035,"line_end":3035,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(&vec[..], &squares[..5]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":130019,"byte_end":130059,"line_start":3036,"line_end":3036,"column_start":5,"column_end":45}},{"value":"/ assert!(vec.capacity() >= squares.len());","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":130064,"byte_end":130109,"line_start":3037,"line_end":3037,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":130114,"byte_end":130117,"line_start":3038,"line_end":3038,"column_start":5,"column_end":8}},{"value":"/ println!(\"RangeTo\");","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":130122,"byte_end":130146,"line_start":3039,"line_end":3039,"column_start":5,"column_end":29}},{"value":"/ let mut vec = squares.clone();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":130151,"byte_end":130185,"line_start":3040,"line_end":3040,"column_start":5,"column_end":39}},{"value":"/ assert!(vec.par_drain(..5)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":130190,"byte_end":130220,"line_start":3041,"line_end":3041,"column_start":5,"column_end":35}},{"value":"/            .eq(squares[..5].par_iter().copied()));","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":130225,"byte_end":130279,"line_start":3042,"line_end":3042,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(&vec[..], &squares[5..]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":130284,"byte_end":130324,"line_start":3043,"line_end":3043,"column_start":5,"column_end":45}},{"value":"/ assert!(vec.capacity() >= squares.len());","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":130329,"byte_end":130374,"line_start":3044,"line_end":3044,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":130379,"byte_end":130382,"line_start":3045,"line_end":3045,"column_start":5,"column_end":8}},{"value":"/ println!(\"RangeToInclusive\");","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":130387,"byte_end":130420,"line_start":3046,"line_end":3046,"column_start":5,"column_end":38}},{"value":"/ let mut vec = squares.clone();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":130425,"byte_end":130459,"line_start":3047,"line_end":3047,"column_start":5,"column_end":39}},{"value":"/ assert!(vec.par_drain(..=5)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":130464,"byte_end":130495,"line_start":3048,"line_end":3048,"column_start":5,"column_end":36}},{"value":"/            .eq(squares[..=5].par_iter().copied()));","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":130500,"byte_end":130555,"line_start":3049,"line_end":3049,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(&vec[..], &squares[6..]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":130560,"byte_end":130600,"line_start":3050,"line_end":3050,"column_start":5,"column_end":45}},{"value":"/ assert!(vec.capacity() >= squares.len());","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":130605,"byte_end":130650,"line_start":3051,"line_end":3051,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":130655,"byte_end":130658,"line_start":3052,"line_end":3052,"column_start":5,"column_end":8}},{"value":"/ println!(\"Range\");","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":130663,"byte_end":130685,"line_start":3053,"line_end":3053,"column_start":5,"column_end":27}},{"value":"/ let mut vec = squares.clone();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":130690,"byte_end":130724,"line_start":3054,"line_end":3054,"column_start":5,"column_end":39}},{"value":"/ assert!(vec.par_drain(3..7)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":130729,"byte_end":130760,"line_start":3055,"line_end":3055,"column_start":5,"column_end":36}},{"value":"/            .eq(squares[3..7].par_iter().copied()));","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":130765,"byte_end":130820,"line_start":3056,"line_end":3056,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(&vec[..3], &squares[..3]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":130825,"byte_end":130866,"line_start":3057,"line_end":3057,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(&vec[3..], &squares[7..]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":130871,"byte_end":130912,"line_start":3058,"line_end":3058,"column_start":5,"column_end":46}},{"value":"/ assert!(vec.capacity() >= squares.len());","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":130917,"byte_end":130962,"line_start":3059,"line_end":3059,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":130967,"byte_end":130970,"line_start":3060,"line_end":3060,"column_start":5,"column_end":8}},{"value":"/ println!(\"RangeInclusive\");","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":130975,"byte_end":131006,"line_start":3061,"line_end":3061,"column_start":5,"column_end":36}},{"value":"/ let mut vec = squares.clone();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":131011,"byte_end":131045,"line_start":3062,"line_end":3062,"column_start":5,"column_end":39}},{"value":"/ assert!(vec.par_drain(3..=7)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":131050,"byte_end":131082,"line_start":3063,"line_end":3063,"column_start":5,"column_end":37}},{"value":"/            .eq(squares[3..=7].par_iter().copied()));","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":131087,"byte_end":131143,"line_start":3064,"line_end":3064,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(&vec[..3], &squares[..3]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":131148,"byte_end":131189,"line_start":3065,"line_end":3065,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(&vec[3..], &squares[8..]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":131194,"byte_end":131235,"line_start":3066,"line_end":3066,"column_start":5,"column_end":46}},{"value":"/ assert!(vec.capacity() >= squares.len());","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":131240,"byte_end":131285,"line_start":3067,"line_end":3067,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":131290,"byte_end":131297,"line_start":3068,"line_end":3068,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":4783},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":131658,"byte_end":131661,"line_start":3078,"line_end":3078,"column_start":15,"column_end":18},"name":"Try","qualname":"::iter::private::Try","value":"Try","parent":null,"children":[{"krate":0,"index":7861},{"krate":0,"index":4784},{"krate":0,"index":4785},{"krate":0,"index":4786},{"krate":0,"index":4787},{"krate":0,"index":4788}],"decl_id":null,"docs":" Clone of `std::ops::Try`.","sig":null,"attributes":[{"value":"/ Clone of `std::ops::Try`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":131537,"byte_end":131566,"line_start":3075,"line_end":3075,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":131571,"byte_end":131574,"line_start":3076,"line_end":3076,"column_start":5,"column_end":8}},{"value":"/ Implementing this trait is not permitted outside of `rayon`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":131579,"byte_end":131643,"line_start":3077,"line_end":3077,"column_start":5,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":4784},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":131703,"byte_end":131705,"line_start":3081,"line_end":3081,"column_start":14,"column_end":16},"name":"Ok","qualname":"::iter::private::Try::Ok","value":"type Ok;","parent":{"krate":0,"index":4783},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4785},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":131720,"byte_end":131725,"line_start":3082,"line_end":3082,"column_start":14,"column_end":19},"name":"Error","qualname":"::iter::private::Try::Error","value":"type Error;","parent":{"krate":0,"index":4783},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4786},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":131738,"byte_end":131749,"line_start":3083,"line_end":3083,"column_start":12,"column_end":23},"name":"into_result","qualname":"::iter::private::Try::into_result","value":"pub fn into_result(Self) -> Result<Self::Ok, Self::Error>","parent":{"krate":0,"index":4783},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4787},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":131801,"byte_end":131808,"line_start":3084,"line_end":3084,"column_start":12,"column_end":19},"name":"from_ok","qualname":"::iter::private::Try::from_ok","value":"pub fn from_ok(Self::Ok) -> Self","parent":{"krate":0,"index":4783},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4788},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":131842,"byte_end":131852,"line_start":3085,"line_end":3085,"column_start":12,"column_end":22},"name":"from_error","qualname":"::iter::private::Try::from_error","value":"pub fn from_error(Self::Error) -> Self","parent":{"krate":0,"index":4783},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":4804},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/option.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"option","qualname":"::option","value":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/option.rs","parent":null,"children":[{"krate":0,"index":4805},{"krate":0,"index":4806},{"krate":0,"index":4807},{"krate":0,"index":4808},{"krate":0,"index":4811},{"krate":0,"index":7864},{"krate":0,"index":7870},{"krate":0,"index":7867},{"krate":0,"index":4814},{"krate":0,"index":4819},{"krate":0,"index":4825},{"krate":0,"index":7873},{"krate":0,"index":7877},{"krate":0,"index":4832},{"krate":0,"index":4836},{"krate":0,"index":7889},{"krate":0,"index":7881},{"krate":0,"index":7896},{"krate":0,"index":7900},{"krate":0,"index":4842},{"krate":0,"index":7912},{"krate":0,"index":7904},{"krate":0,"index":4848},{"krate":0,"index":4851},{"krate":0,"index":4857}],"decl_id":null,"docs":" Parallel iterator types for [options][std::option]","sig":null,"attributes":[{"value":"/ Parallel iterator types for [options][std::option]","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/option.rs","byte_start":415068,"byte_end":415122,"line_start":1,"line_end":1,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/option.rs","byte_start":415123,"byte_end":415126,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to interact with this module directly unless you need","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/option.rs","byte_start":415127,"byte_end":415205,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ to name one of the iterator types.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/option.rs","byte_start":415206,"byte_end":415244,"line_start":4,"line_end":4,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/option.rs","byte_start":415245,"byte_end":415248,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [std::option]: https://doc.rust-lang.org/stable/std/option/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/option.rs","byte_start":415249,"byte_end":415312,"line_start":6,"line_end":6,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":7864},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/option.rs","byte_start":415920,"byte_end":415928,"line_start":22,"line_end":22,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::option::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":7866}],"decl_id":null,"docs":" A parallel iterator over the value in [`Some`] variant of an [`Option`].","sig":null,"attributes":[{"value":"/ A parallel iterator over the value in [`Some`] variant of an [`Option`].","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/option.rs","byte_start":415412,"byte_end":415488,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/option.rs","byte_start":415489,"byte_end":415492,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The iterator yields one value if the [`Option`] is a [`Some`], otherwise none.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/option.rs","byte_start":415493,"byte_end":415575,"line_start":14,"line_end":14,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/option.rs","byte_start":415576,"byte_end":415579,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`into_par_iter`] function.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/option.rs","byte_start":415580,"byte_end":415643,"line_start":16,"line_end":16,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/option.rs","byte_start":415644,"byte_end":415647,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`Option`]: https://doc.rust-lang.org/std/option/enum.Option.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/option.rs","byte_start":415648,"byte_end":415717,"line_start":18,"line_end":18,"column_start":1,"column_end":70}},{"value":"/ [`Some`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.Some","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/option.rs","byte_start":415718,"byte_end":415798,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ [`into_par_iter`]: ../iter/trait.IntoParallelIterator.html#tymethod.into_par_iter","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/option.rs","byte_start":415799,"byte_end":415884,"line_start":20,"line_end":20,"column_start":1,"column_end":86}}]},{"kind":"Struct","id":{"krate":0,"index":7873},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/option.rs","byte_start":417570,"byte_end":417574,"line_start":87,"line_end":87,"column_start":12,"column_end":16},"name":"Iter","qualname":"::option::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":7876}],"decl_id":null,"docs":" A parallel iterator over a reference to the [`Some`] variant of an [`Option`].","sig":null,"attributes":[{"value":"/ A parallel iterator over a reference to the [`Some`] variant of an [`Option`].","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/option.rs","byte_start":417075,"byte_end":417157,"line_start":77,"line_end":77,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/option.rs","byte_start":417158,"byte_end":417161,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ The iterator yields one value if the [`Option`] is a [`Some`], otherwise none.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/option.rs","byte_start":417162,"byte_end":417244,"line_start":79,"line_end":79,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/option.rs","byte_start":417245,"byte_end":417248,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`par_iter`] function.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/option.rs","byte_start":417249,"byte_end":417307,"line_start":81,"line_end":81,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/option.rs","byte_start":417308,"byte_end":417311,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ [`Option`]: https://doc.rust-lang.org/std/option/enum.Option.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/option.rs","byte_start":417312,"byte_end":417381,"line_start":83,"line_end":83,"column_start":1,"column_end":70}},{"value":"/ [`Some`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.Some","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/option.rs","byte_start":417382,"byte_end":417462,"line_start":84,"line_end":84,"column_start":1,"column_end":81}},{"value":"/ [`par_iter`]: ../iter/trait.IntoParallelRefIterator.html#tymethod.par_iter","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/option.rs","byte_start":417463,"byte_end":417541,"line_start":85,"line_end":85,"column_start":1,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":7896},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/option.rs","byte_start":418608,"byte_end":418615,"line_start":125,"line_end":125,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::option::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":7899}],"decl_id":null,"docs":" A parallel iterator over a mutable reference to the [`Some`] variant of an [`Option`].","sig":null,"attributes":[{"value":"/ A parallel iterator over a mutable reference to the [`Some`] variant of an [`Option`].","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/option.rs","byte_start":418090,"byte_end":418180,"line_start":115,"line_end":115,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/option.rs","byte_start":418181,"byte_end":418184,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ The iterator yields one value if the [`Option`] is a [`Some`], otherwise none.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/option.rs","byte_start":418185,"byte_end":418267,"line_start":117,"line_end":117,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/option.rs","byte_start":418268,"byte_end":418271,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`par_iter_mut`] function.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/option.rs","byte_start":418272,"byte_end":418334,"line_start":119,"line_end":119,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/option.rs","byte_start":418335,"byte_end":418338,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ [`Option`]: https://doc.rust-lang.org/std/option/enum.Option.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/option.rs","byte_start":418339,"byte_end":418408,"line_start":121,"line_end":121,"column_start":1,"column_end":70}},{"value":"/ [`Some`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.Some","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/option.rs","byte_start":418409,"byte_end":418489,"line_start":122,"line_end":122,"column_start":1,"column_end":81}},{"value":"/ [`par_iter_mut`]: ../iter/trait.IntoParallelRefMutIterator.html#tymethod.par_iter_mut","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/option.rs","byte_start":418490,"byte_end":418579,"line_start":123,"line_end":123,"column_start":1,"column_end":90}}]},{"kind":"Mod","id":{"krate":0,"index":4866},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/prelude.rs","parent":null,"children":[{"krate":0,"index":4867},{"krate":0,"index":4870},{"krate":0,"index":4873},{"krate":0,"index":4876},{"krate":0,"index":4879},{"krate":0,"index":4882},{"krate":0,"index":4885},{"krate":0,"index":4888},{"krate":0,"index":4891},{"krate":0,"index":4894},{"krate":0,"index":4897},{"krate":0,"index":4900},{"krate":0,"index":4903}],"decl_id":null,"docs":" The rayon prelude imports the various `ParallelIterator` traits.\n The intention is that one can include `use rayon::prelude::*` and\n have easy access to the various traits and methods you will need.\n","sig":null,"attributes":[{"value":"/ The rayon prelude imports the various `ParallelIterator` traits.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/prelude.rs","byte_start":420507,"byte_end":420575,"line_start":1,"line_end":1,"column_start":1,"column_end":69}},{"value":"/ The intention is that one can include `use rayon::prelude::*` and","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/prelude.rs","byte_start":420576,"byte_end":420645,"line_start":2,"line_end":2,"column_start":1,"column_end":70}},{"value":"/ have easy access to the various traits and methods you will need.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/prelude.rs","byte_start":420646,"byte_end":420715,"line_start":3,"line_end":3,"column_start":1,"column_end":70}}]},{"kind":"Mod","id":{"krate":0,"index":4906},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"range","qualname":"::range","value":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range.rs","parent":null,"children":[{"krate":0,"index":4907},{"krate":0,"index":4908},{"krate":0,"index":4909},{"krate":0,"index":4912},{"krate":0,"index":4915},{"krate":0,"index":7919},{"krate":0,"index":7925},{"krate":0,"index":7922},{"krate":0,"index":4918},{"krate":0,"index":4923},{"krate":0,"index":4926},{"krate":0,"index":4932},{"krate":0,"index":7928},{"krate":0,"index":7933},{"krate":0,"index":7939},{"krate":0,"index":7944},{"krate":0,"index":7949},{"krate":0,"index":7955},{"krate":0,"index":7960},{"krate":0,"index":7965},{"krate":0,"index":7971},{"krate":0,"index":7976},{"krate":0,"index":7981},{"krate":0,"index":7987},{"krate":0,"index":7992},{"krate":0,"index":7997},{"krate":0,"index":8003},{"krate":0,"index":8008},{"krate":0,"index":8013},{"krate":0,"index":8019},{"krate":0,"index":8024},{"krate":0,"index":8029},{"krate":0,"index":8035},{"krate":0,"index":8040},{"krate":0,"index":8045},{"krate":0,"index":8051},{"krate":0,"index":8056},{"krate":0,"index":8058},{"krate":0,"index":8066},{"krate":0,"index":8071},{"krate":0,"index":8073},{"krate":0,"index":8081},{"krate":0,"index":8086},{"krate":0,"index":8088},{"krate":0,"index":8096},{"krate":0,"index":8101},{"krate":0,"index":8103},{"krate":0,"index":8111},{"krate":0,"index":4937},{"krate":0,"index":4942}],"decl_id":null,"docs":" Parallel iterator types for [ranges][std::range],\n the type for values created by `a..b` expressions","sig":null,"attributes":[{"value":"/ Parallel iterator types for [ranges][std::range],","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range.rs","byte_start":421252,"byte_end":421305,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/ the type for values created by `a..b` expressions","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range.rs","byte_start":421306,"byte_end":421359,"line_start":2,"line_end":2,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range.rs","byte_start":421360,"byte_end":421363,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to interact with this module directly unless you have","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range.rs","byte_start":421364,"byte_end":421442,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ need to name one of the iterator types.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range.rs","byte_start":421443,"byte_end":421486,"line_start":5,"line_end":5,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range.rs","byte_start":421487,"byte_end":421490,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range.rs","byte_start":421491,"byte_end":421498,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range.rs","byte_start":421499,"byte_end":421525,"line_start":8,"line_end":8,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range.rs","byte_start":421526,"byte_end":421529,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ let r = (0..100u64).into_par_iter()","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range.rs","byte_start":421530,"byte_end":421569,"line_start":10,"line_end":10,"column_start":1,"column_end":40}},{"value":"/                    .sum();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range.rs","byte_start":421570,"byte_end":421600,"line_start":11,"line_end":11,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range.rs","byte_start":421601,"byte_end":421604,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ // compare result with sequential calculation","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range.rs","byte_start":421605,"byte_end":421654,"line_start":13,"line_end":13,"column_start":1,"column_end":50}},{"value":"/ assert_eq!((0..100).sum::<u64>(), r);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range.rs","byte_start":421655,"byte_end":421696,"line_start":14,"line_end":14,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range.rs","byte_start":421697,"byte_end":421704,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range.rs","byte_start":421705,"byte_end":421708,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [std::range]: https://doc.rust-lang.org/core/ops/struct.Range.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range.rs","byte_start":421709,"byte_end":421779,"line_start":17,"line_end":17,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":7919},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range.rs","byte_start":422613,"byte_end":422617,"line_start":47,"line_end":47,"column_start":12,"column_end":16},"name":"Iter","qualname":"::range::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":7921}],"decl_id":null,"docs":" Parallel iterator over a range, implemented for all integer types.","sig":null,"attributes":[{"value":"/ Parallel iterator over a range, implemented for all integer types.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range.rs","byte_start":421884,"byte_end":421954,"line_start":25,"line_end":25,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range.rs","byte_start":421955,"byte_end":421958,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ **Note:** The `zip` operation requires `IndexedParallelIterator`","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range.rs","byte_start":421959,"byte_end":422027,"line_start":27,"line_end":27,"column_start":1,"column_end":69}},{"value":"/ which is not implemented for `u64`, `i64`, `u128`, or `i128`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range.rs","byte_start":422028,"byte_end":422093,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range.rs","byte_start":422094,"byte_end":422097,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range.rs","byte_start":422098,"byte_end":422105,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range.rs","byte_start":422106,"byte_end":422132,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range.rs","byte_start":422133,"byte_end":422136,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let p = (0..25usize).into_par_iter()","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range.rs","byte_start":422137,"byte_end":422177,"line_start":33,"line_end":33,"column_start":1,"column_end":41}},{"value":"/                   .zip(0..25usize)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range.rs","byte_start":422178,"byte_end":422216,"line_start":34,"line_end":34,"column_start":1,"column_end":39}},{"value":"/                   .filter(|&(x, y)| x % 5 == 0 || y % 5 == 0)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range.rs","byte_start":422217,"byte_end":422282,"line_start":35,"line_end":35,"column_start":1,"column_end":66}},{"value":"/                   .map(|(x, y)| x * y)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range.rs","byte_start":422283,"byte_end":422325,"line_start":36,"line_end":36,"column_start":1,"column_end":43}},{"value":"/                   .sum::<usize>();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range.rs","byte_start":422326,"byte_end":422364,"line_start":37,"line_end":37,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range.rs","byte_start":422365,"byte_end":422368,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ let s = (0..25usize).zip(0..25)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range.rs","byte_start":422369,"byte_end":422404,"line_start":39,"line_end":39,"column_start":1,"column_end":36}},{"value":"/                   .filter(|&(x, y)| x % 5 == 0 || y % 5 == 0)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range.rs","byte_start":422405,"byte_end":422470,"line_start":40,"line_end":40,"column_start":1,"column_end":66}},{"value":"/                   .map(|(x, y)| x * y)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range.rs","byte_start":422471,"byte_end":422513,"line_start":41,"line_end":41,"column_start":1,"column_end":43}},{"value":"/                   .sum();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range.rs","byte_start":422514,"byte_end":422543,"line_start":42,"line_end":42,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range.rs","byte_start":422544,"byte_end":422547,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(p, s);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range.rs","byte_start":422548,"byte_end":422569,"line_start":44,"line_end":44,"column_start":1,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range.rs","byte_start":422570,"byte_end":422577,"line_start":45,"line_end":45,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":4948},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range_inclusive.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"range_inclusive","qualname":"::range_inclusive","value":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range_inclusive.rs","parent":null,"children":[{"krate":0,"index":4949},{"krate":0,"index":4950},{"krate":0,"index":4951},{"krate":0,"index":4954},{"krate":0,"index":8122},{"krate":0,"index":8128},{"krate":0,"index":8125},{"krate":0,"index":4957},{"krate":0,"index":4960},{"krate":0,"index":8137},{"krate":0,"index":8131},{"krate":0,"index":8148},{"krate":0,"index":8142},{"krate":0,"index":8159},{"krate":0,"index":8153},{"krate":0,"index":8170},{"krate":0,"index":8164},{"krate":0,"index":8175},{"krate":0,"index":8180},{"krate":0,"index":8185},{"krate":0,"index":8190},{"krate":0,"index":8195},{"krate":0,"index":8200},{"krate":0,"index":8205},{"krate":0,"index":8210},{"krate":0,"index":4969},{"krate":0,"index":4974}],"decl_id":null,"docs":" Parallel iterator types for [inclusive ranges][std::range],\n the type for values created by `a..=b` expressions","sig":null,"attributes":[{"value":"/ Parallel iterator types for [inclusive ranges][std::range],","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range_inclusive.rs","byte_start":431990,"byte_end":432053,"line_start":1,"line_end":1,"column_start":1,"column_end":64}},{"value":"/ the type for values created by `a..=b` expressions","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range_inclusive.rs","byte_start":432054,"byte_end":432108,"line_start":2,"line_end":2,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range_inclusive.rs","byte_start":432109,"byte_end":432112,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to interact with this module directly unless you have","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range_inclusive.rs","byte_start":432113,"byte_end":432191,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ need to name one of the iterator types.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range_inclusive.rs","byte_start":432192,"byte_end":432235,"line_start":5,"line_end":5,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range_inclusive.rs","byte_start":432236,"byte_end":432239,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range_inclusive.rs","byte_start":432240,"byte_end":432247,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range_inclusive.rs","byte_start":432248,"byte_end":432274,"line_start":8,"line_end":8,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range_inclusive.rs","byte_start":432275,"byte_end":432278,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ let r = (0..=100u64).into_par_iter()","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range_inclusive.rs","byte_start":432279,"byte_end":432319,"line_start":10,"line_end":10,"column_start":1,"column_end":41}},{"value":"/                     .sum();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range_inclusive.rs","byte_start":432320,"byte_end":432351,"line_start":11,"line_end":11,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range_inclusive.rs","byte_start":432352,"byte_end":432355,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ // compare result with sequential calculation","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range_inclusive.rs","byte_start":432356,"byte_end":432405,"line_start":13,"line_end":13,"column_start":1,"column_end":50}},{"value":"/ assert_eq!((0..=100).sum::<u64>(), r);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range_inclusive.rs","byte_start":432406,"byte_end":432448,"line_start":14,"line_end":14,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range_inclusive.rs","byte_start":432449,"byte_end":432456,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range_inclusive.rs","byte_start":432457,"byte_end":432460,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [std::range]: https://doc.rust-lang.org/core/ops/struct.RangeInclusive.html","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range_inclusive.rs","byte_start":432461,"byte_end":432540,"line_start":17,"line_end":17,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":8122},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range_inclusive.rs","byte_start":433375,"byte_end":433379,"line_start":46,"line_end":46,"column_start":12,"column_end":16},"name":"Iter","qualname":"::range_inclusive::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":8124}],"decl_id":null,"docs":" Parallel iterator over an inclusive range, implemented for all integer types.","sig":null,"attributes":[{"value":"/ Parallel iterator over an inclusive range, implemented for all integer types.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range_inclusive.rs","byte_start":432638,"byte_end":432719,"line_start":24,"line_end":24,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range_inclusive.rs","byte_start":432720,"byte_end":432723,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ **Note:** The `zip` operation requires `IndexedParallelIterator`","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range_inclusive.rs","byte_start":432724,"byte_end":432792,"line_start":26,"line_end":26,"column_start":1,"column_end":69}},{"value":"/ which is only implemented for `u8`, `i8`, `u16`, and `i16`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range_inclusive.rs","byte_start":432793,"byte_end":432856,"line_start":27,"line_end":27,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range_inclusive.rs","byte_start":432857,"byte_end":432860,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range_inclusive.rs","byte_start":432861,"byte_end":432868,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range_inclusive.rs","byte_start":432869,"byte_end":432895,"line_start":30,"line_end":30,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range_inclusive.rs","byte_start":432896,"byte_end":432899,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let p = (0..=25u16).into_par_iter()","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range_inclusive.rs","byte_start":432900,"byte_end":432939,"line_start":32,"line_end":32,"column_start":1,"column_end":40}},{"value":"/                   .zip(0..=25u16)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range_inclusive.rs","byte_start":432940,"byte_end":432977,"line_start":33,"line_end":33,"column_start":1,"column_end":38}},{"value":"/                   .filter(|&(x, y)| x % 5 == 0 || y % 5 == 0)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range_inclusive.rs","byte_start":432978,"byte_end":433043,"line_start":34,"line_end":34,"column_start":1,"column_end":66}},{"value":"/                   .map(|(x, y)| x * y)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range_inclusive.rs","byte_start":433044,"byte_end":433086,"line_start":35,"line_end":35,"column_start":1,"column_end":43}},{"value":"/                   .sum::<u16>();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range_inclusive.rs","byte_start":433087,"byte_end":433123,"line_start":36,"line_end":36,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range_inclusive.rs","byte_start":433124,"byte_end":433127,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let s = (0..=25u16).zip(0..=25u16)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range_inclusive.rs","byte_start":433128,"byte_end":433166,"line_start":38,"line_end":38,"column_start":1,"column_end":39}},{"value":"/                   .filter(|&(x, y)| x % 5 == 0 || y % 5 == 0)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range_inclusive.rs","byte_start":433167,"byte_end":433232,"line_start":39,"line_end":39,"column_start":1,"column_end":66}},{"value":"/                   .map(|(x, y)| x * y)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range_inclusive.rs","byte_start":433233,"byte_end":433275,"line_start":40,"line_end":40,"column_start":1,"column_end":43}},{"value":"/                   .sum();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range_inclusive.rs","byte_start":433276,"byte_end":433305,"line_start":41,"line_end":41,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range_inclusive.rs","byte_start":433306,"byte_end":433309,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(p, s);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range_inclusive.rs","byte_start":433310,"byte_end":433331,"line_start":43,"line_end":43,"column_start":1,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range_inclusive.rs","byte_start":433332,"byte_end":433339,"line_start":44,"line_end":44,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":4980},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/result.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"result","qualname":"::result","value":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/result.rs","parent":null,"children":[{"krate":0,"index":4981},{"krate":0,"index":4982},{"krate":0,"index":4983},{"krate":0,"index":4986},{"krate":0,"index":8221},{"krate":0,"index":8227},{"krate":0,"index":8224},{"krate":0,"index":4989},{"krate":0,"index":8237},{"krate":0,"index":8230},{"krate":0,"index":8243},{"krate":0,"index":8247},{"krate":0,"index":4995},{"krate":0,"index":4999},{"krate":0,"index":8259},{"krate":0,"index":8251},{"krate":0,"index":8266},{"krate":0,"index":8270},{"krate":0,"index":5006},{"krate":0,"index":8282},{"krate":0,"index":8274},{"krate":0,"index":5013}],"decl_id":null,"docs":" Parallel iterator types for [results][std::result]","sig":null,"attributes":[{"value":"/ Parallel iterator types for [results][std::result]","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/result.rs","byte_start":440581,"byte_end":440635,"line_start":1,"line_end":1,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/result.rs","byte_start":440636,"byte_end":440639,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to interact with this module directly unless you need","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/result.rs","byte_start":440640,"byte_end":440718,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ to name one of the iterator types.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/result.rs","byte_start":440719,"byte_end":440757,"line_start":4,"line_end":4,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/result.rs","byte_start":440758,"byte_end":440761,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [std::result]: https://doc.rust-lang.org/stable/std/result/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/result.rs","byte_start":440762,"byte_end":440825,"line_start":6,"line_end":6,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":8221},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/result.rs","byte_start":440991,"byte_end":440999,"line_start":16,"line_end":16,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::result::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":8223}],"decl_id":null,"docs":" Parallel iterator over a result\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a result","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/result.rs","byte_start":440920,"byte_end":440955,"line_start":14,"line_end":14,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":8243},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/result.rs","byte_start":441441,"byte_end":441445,"line_start":38,"line_end":38,"column_start":12,"column_end":16},"name":"Iter","qualname":"::result::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":8246}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a result\n","sig":null,"attributes":[{"value":"/ Parallel iterator over an immutable reference to a result","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/result.rs","byte_start":441351,"byte_end":441412,"line_start":36,"line_end":36,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":8266},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/result.rs","byte_start":442067,"byte_end":442074,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::result::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":8269}],"decl_id":null,"docs":" Parallel iterator over a mutable reference to a result\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a mutable reference to a result","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/result.rs","byte_start":441980,"byte_end":442038,"line_start":66,"line_end":66,"column_start":1,"column_end":59}}]},{"kind":"Mod","id":{"krate":0,"index":5024},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"slice","qualname":"::slice","value":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","parent":null,"children":[{"krate":0,"index":5025},{"krate":0,"index":5116},{"krate":0,"index":5203},{"krate":0,"index":5206},{"krate":0,"index":5209},{"krate":0,"index":5210},{"krate":0,"index":5211},{"krate":0,"index":5212},{"krate":0,"index":5215},{"krate":0,"index":5218},{"krate":0,"index":5219},{"krate":0,"index":5222},{"krate":0,"index":5223},{"krate":0,"index":5225},{"krate":0,"index":5228},{"krate":0,"index":5236},{"krate":0,"index":5239},{"krate":0,"index":5262},{"krate":0,"index":5265},{"krate":0,"index":5271},{"krate":0,"index":5277},{"krate":0,"index":5283},{"krate":0,"index":8311},{"krate":0,"index":8315},{"krate":0,"index":5289},{"krate":0,"index":5293},{"krate":0,"index":5300},{"krate":0,"index":5308},{"krate":0,"index":5312},{"krate":0,"index":8319},{"krate":0,"index":8324},{"krate":0,"index":5319},{"krate":0,"index":5323},{"krate":0,"index":5330},{"krate":0,"index":5338},{"krate":0,"index":5343},{"krate":0,"index":8328},{"krate":0,"index":8334},{"krate":0,"index":5350},{"krate":0,"index":5354},{"krate":0,"index":5358},{"krate":0,"index":5365},{"krate":0,"index":5373},{"krate":0,"index":5378},{"krate":0,"index":8338},{"krate":0,"index":8343},{"krate":0,"index":5385},{"krate":0,"index":5389},{"krate":0,"index":5396},{"krate":0,"index":5404},{"krate":0,"index":5409},{"krate":0,"index":8347},{"krate":0,"index":8351},{"krate":0,"index":5416},{"krate":0,"index":5423},{"krate":0,"index":5431},{"krate":0,"index":5435},{"krate":0,"index":8355},{"krate":0,"index":8360},{"krate":0,"index":5442},{"krate":0,"index":5449},{"krate":0,"index":5457},{"krate":0,"index":5462},{"krate":0,"index":8364},{"krate":0,"index":8370},{"krate":0,"index":5469},{"krate":0,"index":5475},{"krate":0,"index":5482},{"krate":0,"index":5490},{"krate":0,"index":5495},{"krate":0,"index":5502},{"krate":0,"index":5508},{"krate":0,"index":5513},{"krate":0,"index":5518},{"krate":0,"index":5525},{"krate":0,"index":5536},{"krate":0,"index":5542},{"krate":0,"index":5547},{"krate":0,"index":5554}],"decl_id":null,"docs":" Parallel iterator types for [slices][std::slice]","sig":null,"attributes":[{"value":"/ Parallel iterator types for [slices][std::slice]","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":443991,"byte_end":444043,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":444044,"byte_end":444047,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to interact with this module directly unless you need","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":444048,"byte_end":444126,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ to name one of the iterator types.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":444127,"byte_end":444165,"line_start":4,"line_end":4,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":444166,"byte_end":444169,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [std::slice]: https://doc.rust-lang.org/stable/std/slice/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":444170,"byte_end":444231,"line_start":6,"line_end":6,"column_start":1,"column_end":62}}]},{"kind":"Trait","id":{"krate":0,"index":5228},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":444573,"byte_end":444586,"line_start":25,"line_end":25,"column_start":11,"column_end":24},"name":"ParallelSlice","qualname":"::slice::ParallelSlice","value":"ParallelSlice<T: Sync>","parent":null,"children":[{"krate":0,"index":5230},{"krate":0,"index":5231},{"krate":0,"index":5233},{"krate":0,"index":5234},{"krate":0,"index":5235}],"decl_id":null,"docs":" Parallel extensions for slices.\n","sig":null,"attributes":[{"value":"/ Parallel extensions for slices.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":444527,"byte_end":444562,"line_start":24,"line_end":24,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":5230},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":444705,"byte_end":444722,"line_start":28,"line_end":28,"column_start":8,"column_end":25},"name":"as_parallel_slice","qualname":"::slice::ParallelSlice::as_parallel_slice","value":"pub fn as_parallel_slice(&Self) -> &[T]","parent":{"krate":0,"index":5228},"children":[],"decl_id":null,"docs":" Returns a plain slice, which is used to implement the rest of the\n parallel methods.\n","sig":null,"attributes":[{"value":"/ Returns a plain slice, which is used to implement the rest of the","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":444602,"byte_end":444671,"line_start":26,"line_end":26,"column_start":5,"column_end":74}},{"value":"/ parallel methods.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":444676,"byte_end":444697,"line_start":27,"line_end":27,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":5231},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":445155,"byte_end":445164,"line_start":43,"line_end":43,"column_start":8,"column_end":17},"name":"par_split","qualname":"::slice::ParallelSlice::par_split","value":"pub fn par_split<P>(&Self, P) -> Split<, T, P> where P: Fn(&T) -> bool +\nSync + Send","parent":{"krate":0,"index":5228},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over subslices separated by elements that\n match the separator.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over subslices separated by elements that","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":444744,"byte_end":444817,"line_start":30,"line_end":30,"column_start":5,"column_end":78}},{"value":"/ match the separator.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":444822,"byte_end":444846,"line_start":31,"line_end":31,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":444851,"byte_end":444854,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":444859,"byte_end":444873,"line_start":33,"line_end":33,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":444878,"byte_end":444881,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":444886,"byte_end":444893,"line_start":35,"line_end":35,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":444898,"byte_end":444924,"line_start":36,"line_end":36,"column_start":5,"column_end":31}},{"value":"/ let smallest = [1, 2, 3, 0, 2, 4, 8, 0, 3, 6, 9]","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":444929,"byte_end":444981,"line_start":37,"line_end":37,"column_start":5,"column_end":57}},{"value":"/     .par_split(|i| *i == 0)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":444986,"byte_end":445017,"line_start":38,"line_end":38,"column_start":5,"column_end":36}},{"value":"/     .map(|numbers| numbers.iter().min().unwrap())","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":445022,"byte_end":445075,"line_start":39,"line_end":39,"column_start":5,"column_end":58}},{"value":"/     .min();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":445080,"byte_end":445095,"line_start":40,"line_end":40,"column_start":5,"column_end":20}},{"value":"/ assert_eq!(Some(&1), smallest);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":445100,"byte_end":445135,"line_start":41,"line_end":41,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":445140,"byte_end":445147,"line_start":42,"line_end":42,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5233},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":445698,"byte_end":445709,"line_start":63,"line_end":63,"column_start":8,"column_end":19},"name":"par_windows","qualname":"::slice::ParallelSlice::par_windows","value":"pub fn par_windows(&Self, usize) -> Windows<, T>","parent":{"krate":0,"index":5228},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over all contiguous windows of length\n `window_size`. The windows overlap.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over all contiguous windows of length","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":445370,"byte_end":445439,"line_start":53,"line_end":53,"column_start":5,"column_end":74}},{"value":"/ `window_size`. The windows overlap.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":445444,"byte_end":445483,"line_start":54,"line_end":54,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":445488,"byte_end":445491,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":445496,"byte_end":445510,"line_start":56,"line_end":56,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":445515,"byte_end":445518,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":445523,"byte_end":445530,"line_start":58,"line_end":58,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":445535,"byte_end":445561,"line_start":59,"line_end":59,"column_start":5,"column_end":31}},{"value":"/ let windows: Vec<_> = [1, 2, 3].par_windows(2).collect();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":445566,"byte_end":445627,"line_start":60,"line_end":60,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(vec![[1, 2], [2, 3]], windows);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":445632,"byte_end":445678,"line_start":61,"line_end":61,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":445683,"byte_end":445690,"line_start":62,"line_end":62,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5234},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":446422,"byte_end":446432,"line_start":84,"line_end":84,"column_start":8,"column_end":18},"name":"par_chunks","qualname":"::slice::ParallelSlice::par_chunks","value":"pub fn par_chunks(&Self, usize) -> Chunks<, T>","parent":{"krate":0,"index":5228},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over at most `chunk_size` elements of\n `self` at a time. The chunks do not overlap.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over at most `chunk_size` elements of","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":445866,"byte_end":445935,"line_start":70,"line_end":70,"column_start":5,"column_end":74}},{"value":"/ `self` at a time. The chunks do not overlap.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":445940,"byte_end":445988,"line_start":71,"line_end":71,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":445993,"byte_end":445996,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ If the number of elements in the iterator is not divisible by","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":446001,"byte_end":446066,"line_start":73,"line_end":73,"column_start":5,"column_end":70}},{"value":"/ `chunk_size`, the last chunk may be shorter than `chunk_size`.  All","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":446071,"byte_end":446142,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ other chunks will have that exact length.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":446147,"byte_end":446192,"line_start":75,"line_end":75,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":446197,"byte_end":446200,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":446205,"byte_end":446219,"line_start":77,"line_end":77,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":446224,"byte_end":446227,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":446232,"byte_end":446239,"line_start":79,"line_end":79,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":446244,"byte_end":446270,"line_start":80,"line_end":80,"column_start":5,"column_end":31}},{"value":"/ let chunks: Vec<_> = [1, 2, 3, 4, 5].par_chunks(2).collect();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":446275,"byte_end":446340,"line_start":81,"line_end":81,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(chunks, vec![&[1, 2][..], &[3, 4], &[5]]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":446345,"byte_end":446402,"line_start":82,"line_end":82,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":446407,"byte_end":446414,"line_start":83,"line_end":83,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5235},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":447209,"byte_end":447225,"line_start":106,"line_end":106,"column_start":8,"column_end":24},"name":"par_chunks_exact","qualname":"::slice::ParallelSlice::par_chunks_exact","value":"pub fn par_chunks_exact(&Self, usize) -> ChunksExact<, T>","parent":{"krate":0,"index":5228},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over `chunk_size` elements of\n `self` at a time. The chunks do not overlap.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over `chunk_size` elements of","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":446650,"byte_end":446711,"line_start":92,"line_end":92,"column_start":5,"column_end":66}},{"value":"/ `self` at a time. The chunks do not overlap.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":446716,"byte_end":446764,"line_start":93,"line_end":93,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":446769,"byte_end":446772,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ If `chunk_size` does not divide the length of the slice, then the","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":446777,"byte_end":446846,"line_start":95,"line_end":95,"column_start":5,"column_end":74}},{"value":"/ last up to `chunk_size-1` elements will be omitted and can be","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":446851,"byte_end":446916,"line_start":96,"line_end":96,"column_start":5,"column_end":70}},{"value":"/ retrieved from the remainder function of the iterator.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":446921,"byte_end":446979,"line_start":97,"line_end":97,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":446984,"byte_end":446987,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":446992,"byte_end":447006,"line_start":99,"line_end":99,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":447011,"byte_end":447014,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":447019,"byte_end":447026,"line_start":101,"line_end":101,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":447031,"byte_end":447057,"line_start":102,"line_end":102,"column_start":5,"column_end":31}},{"value":"/ let chunks: Vec<_> = [1, 2, 3, 4, 5].par_chunks_exact(2).collect();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":447062,"byte_end":447133,"line_start":103,"line_end":103,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(chunks, vec![&[1, 2][..], &[3, 4]]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":447138,"byte_end":447189,"line_start":104,"line_end":104,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":447194,"byte_end":447201,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":5239},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":447798,"byte_end":447814,"line_start":128,"line_end":128,"column_start":11,"column_end":27},"name":"ParallelSliceMut","qualname":"::slice::ParallelSliceMut","value":"ParallelSliceMut<T: Send>","parent":null,"children":[{"krate":0,"index":5241},{"krate":0,"index":5242},{"krate":0,"index":5244},{"krate":0,"index":5245},{"krate":0,"index":5246},{"krate":0,"index":5247},{"krate":0,"index":5250},{"krate":0,"index":5254},{"krate":0,"index":5255},{"krate":0,"index":5258}],"decl_id":null,"docs":" Parallel extensions for mutable slices.\n","sig":null,"attributes":[{"value":"/ Parallel extensions for mutable slices.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":447744,"byte_end":447787,"line_start":127,"line_end":127,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":5241},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":447941,"byte_end":447962,"line_start":131,"line_end":131,"column_start":8,"column_end":29},"name":"as_parallel_slice_mut","qualname":"::slice::ParallelSliceMut::as_parallel_slice_mut","value":"pub fn as_parallel_slice_mut(&mut Self) -> &mut [T]","parent":{"krate":0,"index":5239},"children":[],"decl_id":null,"docs":" Returns a plain mutable slice, which is used to implement the rest of\n the parallel methods.\n","sig":null,"attributes":[{"value":"/ Returns a plain mutable slice, which is used to implement the rest of","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":447830,"byte_end":447903,"line_start":129,"line_end":129,"column_start":5,"column_end":78}},{"value":"/ the parallel methods.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":447908,"byte_end":447933,"line_start":130,"line_end":130,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5242},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":448411,"byte_end":448424,"line_start":145,"line_end":145,"column_start":8,"column_end":21},"name":"par_split_mut","qualname":"::slice::ParallelSliceMut::par_split_mut","value":"pub fn par_split_mut<P>(&mut Self, P) -> SplitMut<, T, P> where P: Fn(&T) ->\nbool + Sync + Send","parent":{"krate":0,"index":5239},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over mutable subslices separated by\n elements that match the separator.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over mutable subslices separated by","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":447992,"byte_end":448059,"line_start":133,"line_end":133,"column_start":5,"column_end":72}},{"value":"/ elements that match the separator.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":448064,"byte_end":448102,"line_start":134,"line_end":134,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":448107,"byte_end":448110,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":448115,"byte_end":448129,"line_start":136,"line_end":136,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":448134,"byte_end":448137,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":448142,"byte_end":448149,"line_start":138,"line_end":138,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":448154,"byte_end":448180,"line_start":139,"line_end":139,"column_start":5,"column_end":31}},{"value":"/ let mut array = [1, 2, 3, 0, 2, 4, 8, 0, 3, 6, 9];","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":448185,"byte_end":448239,"line_start":140,"line_end":140,"column_start":5,"column_end":59}},{"value":"/ array.par_split_mut(|i| *i == 0)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":448244,"byte_end":448280,"line_start":141,"line_end":141,"column_start":5,"column_end":41}},{"value":"/      .for_each(|slice| slice.reverse());","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":448285,"byte_end":448329,"line_start":142,"line_end":142,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(array, [3, 2, 1, 0, 8, 4, 2, 0, 9, 6, 3]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":448334,"byte_end":448391,"line_start":143,"line_end":143,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":448396,"byte_end":448403,"line_start":144,"line_end":144,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5244},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":449250,"byte_end":449264,"line_start":171,"line_end":171,"column_start":8,"column_end":22},"name":"par_chunks_mut","qualname":"::slice::ParallelSliceMut::par_chunks_mut","value":"pub fn par_chunks_mut(&mut Self, usize) -> ChunksMut<, T>","parent":{"krate":0,"index":5239},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over at most `chunk_size` elements of\n `self` at a time. The chunks are mutable and do not overlap.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over at most `chunk_size` elements of","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":448644,"byte_end":448713,"line_start":155,"line_end":155,"column_start":5,"column_end":74}},{"value":"/ `self` at a time. The chunks are mutable and do not overlap.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":448718,"byte_end":448782,"line_start":156,"line_end":156,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":448787,"byte_end":448790,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ If the number of elements in the iterator is not divisible by","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":448795,"byte_end":448860,"line_start":158,"line_end":158,"column_start":5,"column_end":70}},{"value":"/ `chunk_size`, the last chunk may be shorter than `chunk_size`.  All","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":448865,"byte_end":448936,"line_start":159,"line_end":159,"column_start":5,"column_end":76}},{"value":"/ other chunks will have that exact length.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":448941,"byte_end":448986,"line_start":160,"line_end":160,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":448991,"byte_end":448994,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":448999,"byte_end":449013,"line_start":162,"line_end":162,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":449018,"byte_end":449021,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":449026,"byte_end":449033,"line_start":164,"line_end":164,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":449038,"byte_end":449064,"line_start":165,"line_end":165,"column_start":5,"column_end":31}},{"value":"/ let mut array = [1, 2, 3, 4, 5];","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":449069,"byte_end":449105,"line_start":166,"line_end":166,"column_start":5,"column_end":41}},{"value":"/ array.par_chunks_mut(2)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":449110,"byte_end":449137,"line_start":167,"line_end":167,"column_start":5,"column_end":32}},{"value":"/      .for_each(|slice| slice.reverse());","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":449142,"byte_end":449186,"line_start":168,"line_end":168,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(array, [2, 1, 4, 3, 5]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":449191,"byte_end":449230,"line_start":169,"line_end":169,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":449235,"byte_end":449242,"line_start":170,"line_end":170,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5245},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":450111,"byte_end":450131,"line_start":195,"line_end":195,"column_start":8,"column_end":28},"name":"par_chunks_exact_mut","qualname":"::slice::ParallelSliceMut::par_chunks_exact_mut","value":"pub fn par_chunks_exact_mut(&mut Self, usize) -> ChunksExactMut<, T>","parent":{"krate":0,"index":5239},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over `chunk_size` elements of\n `self` at a time. The chunks are mutable and do not overlap.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over `chunk_size` elements of","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":449496,"byte_end":449557,"line_start":179,"line_end":179,"column_start":5,"column_end":66}},{"value":"/ `self` at a time. The chunks are mutable and do not overlap.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":449562,"byte_end":449626,"line_start":180,"line_end":180,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":449631,"byte_end":449634,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ If `chunk_size` does not divide the length of the slice, then the","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":449639,"byte_end":449708,"line_start":182,"line_end":182,"column_start":5,"column_end":74}},{"value":"/ last up to `chunk_size-1` elements will be omitted and can be","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":449713,"byte_end":449778,"line_start":183,"line_end":183,"column_start":5,"column_end":70}},{"value":"/ retrieved from the remainder function of the iterator.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":449783,"byte_end":449841,"line_start":184,"line_end":184,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":449846,"byte_end":449849,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":449854,"byte_end":449868,"line_start":186,"line_end":186,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":449873,"byte_end":449876,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":449881,"byte_end":449888,"line_start":188,"line_end":188,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":449893,"byte_end":449919,"line_start":189,"line_end":189,"column_start":5,"column_end":31}},{"value":"/ let mut array = [1, 2, 3, 4, 5];","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":449924,"byte_end":449960,"line_start":190,"line_end":190,"column_start":5,"column_end":41}},{"value":"/ array.par_chunks_exact_mut(3)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":449965,"byte_end":449998,"line_start":191,"line_end":191,"column_start":5,"column_end":38}},{"value":"/      .for_each(|slice| slice.reverse());","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":450003,"byte_end":450047,"line_start":192,"line_end":192,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(array, [3, 2, 1, 4, 5]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":450052,"byte_end":450091,"line_start":193,"line_end":193,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":450096,"byte_end":450103,"line_start":194,"line_end":194,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5246},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":452008,"byte_end":452016,"line_start":241,"line_end":241,"column_start":8,"column_end":16},"name":"par_sort","qualname":"::slice::ParallelSliceMut::par_sort","value":"pub fn par_sort(&mut Self) where T: Ord","parent":{"krate":0,"index":5239},"children":[],"decl_id":null,"docs":" Sorts the slice in parallel.","sig":null,"attributes":[{"value":"/ Sorts the slice in parallel.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":450551,"byte_end":450583,"line_start":208,"line_end":208,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":450588,"byte_end":450591,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ This sort is stable (i.e. does not reorder equal elements) and `O(n log n)` worst-case.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":450596,"byte_end":450687,"line_start":210,"line_end":210,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":450692,"byte_end":450695,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ When applicable, unstable sorting is preferred because it is generally faster than stable","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":450700,"byte_end":450793,"line_start":212,"line_end":212,"column_start":5,"column_end":98}},{"value":"/ sorting and it doesn't allocate auxiliary memory.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":450798,"byte_end":450851,"line_start":213,"line_end":213,"column_start":5,"column_end":58}},{"value":"/ See [`par_sort_unstable`](#method.par_sort_unstable).","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":450856,"byte_end":450913,"line_start":214,"line_end":214,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":450918,"byte_end":450921,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ # Current implementation","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":450926,"byte_end":450954,"line_start":216,"line_end":216,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":450959,"byte_end":450962,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ The current algorithm is an adaptive merge sort inspired by","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":450967,"byte_end":451030,"line_start":218,"line_end":218,"column_start":5,"column_end":68}},{"value":"/ [timsort](https://en.wikipedia.org/wiki/Timsort).","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":451035,"byte_end":451088,"line_start":219,"line_end":219,"column_start":5,"column_end":58}},{"value":"/ It is designed to be very fast in cases where the slice is nearly sorted, or consists of","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":451093,"byte_end":451185,"line_start":220,"line_end":220,"column_start":5,"column_end":97}},{"value":"/ two or more sorted sequences concatenated one after another.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":451190,"byte_end":451254,"line_start":221,"line_end":221,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":451259,"byte_end":451262,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ Also, it allocates temporary storage the same size as `self`, but for very short slices a","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":451267,"byte_end":451360,"line_start":223,"line_end":223,"column_start":5,"column_end":98}},{"value":"/ non-allocating insertion sort is used instead.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":451365,"byte_end":451415,"line_start":224,"line_end":224,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":451420,"byte_end":451423,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ In order to sort the slice in parallel, the slice is first divided into smaller chunks and","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":451428,"byte_end":451522,"line_start":226,"line_end":226,"column_start":5,"column_end":99}},{"value":"/ all chunks are sorted in parallel. Then, adjacent chunks that together form non-descending","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":451527,"byte_end":451621,"line_start":227,"line_end":227,"column_start":5,"column_end":99}},{"value":"/ or descending runs are concatenated. Finally, the remaining chunks are merged together using","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":451626,"byte_end":451722,"line_start":228,"line_end":228,"column_start":5,"column_end":101}},{"value":"/ parallel subdivision of chunks and parallel merge operation.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":451727,"byte_end":451791,"line_start":229,"line_end":229,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":451796,"byte_end":451799,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":451804,"byte_end":451818,"line_start":231,"line_end":231,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":451823,"byte_end":451826,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":451831,"byte_end":451838,"line_start":233,"line_end":233,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":451843,"byte_end":451869,"line_start":234,"line_end":234,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":451874,"byte_end":451877,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ let mut v = [-5, 4, 1, -3, 2];","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":451882,"byte_end":451916,"line_start":236,"line_end":236,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":451921,"byte_end":451924,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ v.par_sort();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":451929,"byte_end":451946,"line_start":238,"line_end":238,"column_start":5,"column_end":22}},{"value":"/ assert_eq!(v, [-5, -3, 1, 2, 4]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":451951,"byte_end":451988,"line_start":239,"line_end":239,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":451993,"byte_end":452000,"line_start":240,"line_end":240,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5247},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":453742,"byte_end":453753,"line_start":284,"line_end":284,"column_start":8,"column_end":19},"name":"par_sort_by","qualname":"::slice::ParallelSliceMut::par_sort_by","value":"pub fn par_sort_by<F>(&mut Self, F) where F: Fn(&T, &T) -> Ordering + Sync","parent":{"krate":0,"index":5239},"children":[],"decl_id":null,"docs":" Sorts the slice in parallel with a comparator function.","sig":null,"attributes":[{"value":"/ Sorts the slice in parallel with a comparator function.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":452131,"byte_end":452190,"line_start":248,"line_end":248,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":452195,"byte_end":452198,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ This sort is stable (i.e. does not reorder equal elements) and `O(n log n)` worst-case.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":452203,"byte_end":452294,"line_start":250,"line_end":250,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":452299,"byte_end":452302,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ When applicable, unstable sorting is preferred because it is generally faster than stable","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":452307,"byte_end":452400,"line_start":252,"line_end":252,"column_start":5,"column_end":98}},{"value":"/ sorting and it doesn't allocate auxiliary memory.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":452405,"byte_end":452458,"line_start":253,"line_end":253,"column_start":5,"column_end":58}},{"value":"/ See [`par_sort_unstable_by`](#method.par_sort_unstable_by).","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":452463,"byte_end":452526,"line_start":254,"line_end":254,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":452531,"byte_end":452534,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ # Current implementation","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":452539,"byte_end":452567,"line_start":256,"line_end":256,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":452572,"byte_end":452575,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ The current algorithm is an adaptive merge sort inspired by","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":452580,"byte_end":452643,"line_start":258,"line_end":258,"column_start":5,"column_end":68}},{"value":"/ [timsort](https://en.wikipedia.org/wiki/Timsort).","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":452648,"byte_end":452701,"line_start":259,"line_end":259,"column_start":5,"column_end":58}},{"value":"/ It is designed to be very fast in cases where the slice is nearly sorted, or consists of","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":452706,"byte_end":452798,"line_start":260,"line_end":260,"column_start":5,"column_end":97}},{"value":"/ two or more sorted sequences concatenated one after another.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":452803,"byte_end":452867,"line_start":261,"line_end":261,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":452872,"byte_end":452875,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ Also, it allocates temporary storage the same size as `self`, but for very short slices a","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":452880,"byte_end":452973,"line_start":263,"line_end":263,"column_start":5,"column_end":98}},{"value":"/ non-allocating insertion sort is used instead.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":452978,"byte_end":453028,"line_start":264,"line_end":264,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":453033,"byte_end":453036,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ In order to sort the slice in parallel, the slice is first divided into smaller chunks and","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":453041,"byte_end":453135,"line_start":266,"line_end":266,"column_start":5,"column_end":99}},{"value":"/ all chunks are sorted in parallel. Then, adjacent chunks that together form non-descending","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":453140,"byte_end":453234,"line_start":267,"line_end":267,"column_start":5,"column_end":99}},{"value":"/ or descending runs are concatenated. Finally, the remaining chunks are merged together using","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":453239,"byte_end":453335,"line_start":268,"line_end":268,"column_start":5,"column_end":101}},{"value":"/ parallel subdivision of chunks and parallel merge operation.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":453340,"byte_end":453404,"line_start":269,"line_end":269,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":453409,"byte_end":453412,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":453417,"byte_end":453431,"line_start":271,"line_end":271,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":453436,"byte_end":453439,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":453444,"byte_end":453451,"line_start":273,"line_end":273,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":453456,"byte_end":453482,"line_start":274,"line_end":274,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":453487,"byte_end":453490,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ let mut v = [5, 4, 1, 3, 2];","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":453495,"byte_end":453527,"line_start":276,"line_end":276,"column_start":5,"column_end":37}},{"value":"/ v.par_sort_by(|a, b| a.cmp(b));","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":453532,"byte_end":453567,"line_start":277,"line_end":277,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(v, [1, 2, 3, 4, 5]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":453572,"byte_end":453607,"line_start":278,"line_end":278,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":453612,"byte_end":453615,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ // reverse sorting","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":453620,"byte_end":453642,"line_start":280,"line_end":280,"column_start":5,"column_end":27}},{"value":"/ v.par_sort_by(|a, b| b.cmp(a));","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":453647,"byte_end":453682,"line_start":281,"line_end":281,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(v, [5, 4, 3, 2, 1]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":453687,"byte_end":453722,"line_start":282,"line_end":282,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":453727,"byte_end":453734,"line_start":283,"line_end":283,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5250},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":455489,"byte_end":455504,"line_start":326,"line_end":326,"column_start":8,"column_end":23},"name":"par_sort_by_key","qualname":"::slice::ParallelSliceMut::par_sort_by_key","value":"pub fn par_sort_by_key<B, F>(&mut Self, F) where B: Ord, F: Fn(&T) -> B + Sync","parent":{"krate":0,"index":5239},"children":[],"decl_id":null,"docs":" Sorts the slice in parallel with a key extraction function.","sig":null,"attributes":[{"value":"/ Sorts the slice in parallel with a key extraction function.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":453966,"byte_end":454029,"line_start":293,"line_end":293,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":454034,"byte_end":454037,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ This sort is stable (i.e. does not reorder equal elements) and `O(n log n)` worst-case.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":454042,"byte_end":454133,"line_start":295,"line_end":295,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":454138,"byte_end":454141,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ When applicable, unstable sorting is preferred because it is generally faster than stable","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":454146,"byte_end":454239,"line_start":297,"line_end":297,"column_start":5,"column_end":98}},{"value":"/ sorting and it doesn't allocate auxiliary memory.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":454244,"byte_end":454297,"line_start":298,"line_end":298,"column_start":5,"column_end":58}},{"value":"/ See [`par_sort_unstable_by_key`](#method.par_sort_unstable_by_key).","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":454302,"byte_end":454373,"line_start":299,"line_end":299,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":454378,"byte_end":454381,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Current implementation","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":454386,"byte_end":454414,"line_start":301,"line_end":301,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":454419,"byte_end":454422,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ The current algorithm is an adaptive merge sort inspired by","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":454427,"byte_end":454490,"line_start":303,"line_end":303,"column_start":5,"column_end":68}},{"value":"/ [timsort](https://en.wikipedia.org/wiki/Timsort).","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":454495,"byte_end":454548,"line_start":304,"line_end":304,"column_start":5,"column_end":58}},{"value":"/ It is designed to be very fast in cases where the slice is nearly sorted, or consists of","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":454553,"byte_end":454645,"line_start":305,"line_end":305,"column_start":5,"column_end":97}},{"value":"/ two or more sorted sequences concatenated one after another.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":454650,"byte_end":454714,"line_start":306,"line_end":306,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":454719,"byte_end":454722,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ Also, it allocates temporary storage the same size as `self`, but for very short slices a","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":454727,"byte_end":454820,"line_start":308,"line_end":308,"column_start":5,"column_end":98}},{"value":"/ non-allocating insertion sort is used instead.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":454825,"byte_end":454875,"line_start":309,"line_end":309,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":454880,"byte_end":454883,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ In order to sort the slice in parallel, the slice is first divided into smaller chunks and","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":454888,"byte_end":454982,"line_start":311,"line_end":311,"column_start":5,"column_end":99}},{"value":"/ all chunks are sorted in parallel. Then, adjacent chunks that together form non-descending","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":454987,"byte_end":455081,"line_start":312,"line_end":312,"column_start":5,"column_end":99}},{"value":"/ or descending runs are concatenated. Finally, the remaining chunks are merged together using","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":455086,"byte_end":455182,"line_start":313,"line_end":313,"column_start":5,"column_end":101}},{"value":"/ parallel subdivision of chunks and parallel merge operation.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":455187,"byte_end":455251,"line_start":314,"line_end":314,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":455256,"byte_end":455259,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":455264,"byte_end":455278,"line_start":316,"line_end":316,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":455283,"byte_end":455286,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":455291,"byte_end":455298,"line_start":318,"line_end":318,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":455303,"byte_end":455329,"line_start":319,"line_end":319,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":455334,"byte_end":455337,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ let mut v = [-5i32, 4, 1, -3, 2];","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":455342,"byte_end":455379,"line_start":321,"line_end":321,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":455384,"byte_end":455387,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ v.par_sort_by_key(|k| k.abs());","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":455392,"byte_end":455427,"line_start":323,"line_end":323,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(v, [1, 2, -3, 4, -5]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":455432,"byte_end":455469,"line_start":324,"line_end":324,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":455474,"byte_end":455481,"line_start":325,"line_end":325,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5254},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":456949,"byte_end":456966,"line_start":365,"line_end":365,"column_start":8,"column_end":25},"name":"par_sort_unstable","qualname":"::slice::ParallelSliceMut::par_sort_unstable","value":"pub fn par_sort_unstable(&mut Self) where T: Ord","parent":{"krate":0,"index":5239},"children":[],"decl_id":null,"docs":" Sorts the slice in parallel, but may not preserve the order of equal elements.","sig":null,"attributes":[{"value":"/ Sorts the slice in parallel, but may not preserve the order of equal elements.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":455678,"byte_end":455760,"line_start":334,"line_end":334,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":455765,"byte_end":455768,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ This sort is unstable (i.e. may reorder equal elements), in-place (i.e. does not allocate),","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":455773,"byte_end":455868,"line_start":336,"line_end":336,"column_start":5,"column_end":100}},{"value":"/ and `O(n log n)` worst-case.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":455873,"byte_end":455905,"line_start":337,"line_end":337,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":455910,"byte_end":455913,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ # Current implementation","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":455918,"byte_end":455946,"line_start":339,"line_end":339,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":455951,"byte_end":455954,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ The current algorithm is based on Orson Peters' [pattern-defeating quicksort][pdqsort],","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":455959,"byte_end":456050,"line_start":341,"line_end":341,"column_start":5,"column_end":96}},{"value":"/ which is a quicksort variant designed to be very fast on certain kinds of patterns,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":456055,"byte_end":456142,"line_start":342,"line_end":342,"column_start":5,"column_end":92}},{"value":"/ sometimes achieving linear time. It is randomized but deterministic, and falls back to","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":456147,"byte_end":456237,"line_start":343,"line_end":343,"column_start":5,"column_end":95}},{"value":"/ heapsort on degenerate inputs.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":456242,"byte_end":456276,"line_start":344,"line_end":344,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":456281,"byte_end":456284,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ It is generally faster than stable sorting, except in a few special cases, e.g. when the","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":456289,"byte_end":456381,"line_start":346,"line_end":346,"column_start":5,"column_end":97}},{"value":"/ slice consists of several concatenated sorted sequences.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":456386,"byte_end":456446,"line_start":347,"line_end":347,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":456451,"byte_end":456454,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ All quicksorts work in two stages: partitioning into two halves followed by recursive","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":456459,"byte_end":456548,"line_start":349,"line_end":349,"column_start":5,"column_end":94}},{"value":"/ calls. The partitioning phase is sequential, but the two recursive calls are performed in","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":456553,"byte_end":456646,"line_start":350,"line_end":350,"column_start":5,"column_end":98}},{"value":"/ parallel.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":456651,"byte_end":456664,"line_start":351,"line_end":351,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":456669,"byte_end":456672,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ [pdqsort]: https://github.com/orlp/pdqsort","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":456677,"byte_end":456723,"line_start":353,"line_end":353,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":456728,"byte_end":456731,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":456736,"byte_end":456750,"line_start":355,"line_end":355,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":456755,"byte_end":456758,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":456763,"byte_end":456770,"line_start":357,"line_end":357,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":456775,"byte_end":456801,"line_start":358,"line_end":358,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":456806,"byte_end":456809,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ let mut v = [-5, 4, 1, -3, 2];","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":456814,"byte_end":456848,"line_start":360,"line_end":360,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":456853,"byte_end":456856,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ v.par_sort_unstable();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":456861,"byte_end":456887,"line_start":362,"line_end":362,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(v, [-5, -3, 1, 2, 4]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":456892,"byte_end":456929,"line_start":363,"line_end":363,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":456934,"byte_end":456941,"line_start":364,"line_end":364,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5255},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":458517,"byte_end":458537,"line_start":407,"line_end":407,"column_start":8,"column_end":28},"name":"par_sort_unstable_by","qualname":"::slice::ParallelSliceMut::par_sort_unstable_by","value":"pub fn par_sort_unstable_by<F>(&mut Self, F) where F: Fn(&T, &T) -> Ordering +\nSync","parent":{"krate":0,"index":5239},"children":[],"decl_id":null,"docs":" Sorts the slice in parallel with a comparator function, but may not preserve the order of\n equal elements.","sig":null,"attributes":[{"value":"/ Sorts the slice in parallel with a comparator function, but may not preserve the order of","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":457081,"byte_end":457174,"line_start":372,"line_end":372,"column_start":5,"column_end":98}},{"value":"/ equal elements.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":457179,"byte_end":457198,"line_start":373,"line_end":373,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":457203,"byte_end":457206,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ This sort is unstable (i.e. may reorder equal elements), in-place (i.e. does not allocate),","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":457211,"byte_end":457306,"line_start":375,"line_end":375,"column_start":5,"column_end":100}},{"value":"/ and `O(n log n)` worst-case.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":457311,"byte_end":457343,"line_start":376,"line_end":376,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":457348,"byte_end":457351,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ # Current implementation","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":457356,"byte_end":457384,"line_start":378,"line_end":378,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":457389,"byte_end":457392,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ The current algorithm is based on Orson Peters' [pattern-defeating quicksort][pdqsort],","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":457397,"byte_end":457488,"line_start":380,"line_end":380,"column_start":5,"column_end":96}},{"value":"/ which is a quicksort variant designed to be very fast on certain kinds of patterns,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":457493,"byte_end":457580,"line_start":381,"line_end":381,"column_start":5,"column_end":92}},{"value":"/ sometimes achieving linear time. It is randomized but deterministic, and falls back to","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":457585,"byte_end":457675,"line_start":382,"line_end":382,"column_start":5,"column_end":95}},{"value":"/ heapsort on degenerate inputs.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":457680,"byte_end":457714,"line_start":383,"line_end":383,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":457719,"byte_end":457722,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ It is generally faster than stable sorting, except in a few special cases, e.g. when the","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":457727,"byte_end":457819,"line_start":385,"line_end":385,"column_start":5,"column_end":97}},{"value":"/ slice consists of several concatenated sorted sequences.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":457824,"byte_end":457884,"line_start":386,"line_end":386,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":457889,"byte_end":457892,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ All quicksorts work in two stages: partitioning into two halves followed by recursive","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":457897,"byte_end":457986,"line_start":388,"line_end":388,"column_start":5,"column_end":94}},{"value":"/ calls. The partitioning phase is sequential, but the two recursive calls are performed in","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":457991,"byte_end":458084,"line_start":389,"line_end":389,"column_start":5,"column_end":98}},{"value":"/ parallel.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":458089,"byte_end":458102,"line_start":390,"line_end":390,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":458107,"byte_end":458110,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ [pdqsort]: https://github.com/orlp/pdqsort","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":458115,"byte_end":458161,"line_start":392,"line_end":392,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":458166,"byte_end":458169,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":458174,"byte_end":458188,"line_start":394,"line_end":394,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":458193,"byte_end":458196,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":458201,"byte_end":458208,"line_start":396,"line_end":396,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":458213,"byte_end":458239,"line_start":397,"line_end":397,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":458244,"byte_end":458247,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ let mut v = [5, 4, 1, 3, 2];","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":458252,"byte_end":458284,"line_start":399,"line_end":399,"column_start":5,"column_end":37}},{"value":"/ v.par_sort_unstable_by(|a, b| a.cmp(b));","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":458289,"byte_end":458333,"line_start":400,"line_end":400,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(v, [1, 2, 3, 4, 5]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":458338,"byte_end":458373,"line_start":401,"line_end":401,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":458378,"byte_end":458381,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ // reverse sorting","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":458386,"byte_end":458408,"line_start":403,"line_end":403,"column_start":5,"column_end":27}},{"value":"/ v.par_sort_unstable_by(|a, b| b.cmp(a));","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":458413,"byte_end":458457,"line_start":404,"line_end":404,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(v, [5, 4, 3, 2, 1]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":458462,"byte_end":458497,"line_start":405,"line_end":405,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":458502,"byte_end":458509,"line_start":406,"line_end":406,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5258},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":460081,"byte_end":460105,"line_start":448,"line_end":448,"column_start":8,"column_end":32},"name":"par_sort_unstable_by_key","qualname":"::slice::ParallelSliceMut::par_sort_unstable_by_key","value":"pub fn par_sort_unstable_by_key<B, F>(&mut Self, F) where B: Ord, F: Fn(&T) ->\nB + Sync","parent":{"krate":0,"index":5239},"children":[],"decl_id":null,"docs":" Sorts the slice in parallel with a key extraction function, but may not preserve the order\n of equal elements.","sig":null,"attributes":[{"value":"/ Sorts the slice in parallel with a key extraction function, but may not preserve the order","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":458750,"byte_end":458844,"line_start":416,"line_end":416,"column_start":5,"column_end":99}},{"value":"/ of equal elements.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":458849,"byte_end":458871,"line_start":417,"line_end":417,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":458876,"byte_end":458879,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ This sort is unstable (i.e. may reorder equal elements), in-place (i.e. does not allocate),","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":458884,"byte_end":458979,"line_start":419,"line_end":419,"column_start":5,"column_end":100}},{"value":"/ and `O(n log n)` worst-case.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":458984,"byte_end":459016,"line_start":420,"line_end":420,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":459021,"byte_end":459024,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ # Current implementation","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":459029,"byte_end":459057,"line_start":422,"line_end":422,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":459062,"byte_end":459065,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ The current algorithm is based on Orson Peters' [pattern-defeating quicksort][pdqsort],","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":459070,"byte_end":459161,"line_start":424,"line_end":424,"column_start":5,"column_end":96}},{"value":"/ which is a quicksort variant designed to be very fast on certain kinds of patterns,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":459166,"byte_end":459253,"line_start":425,"line_end":425,"column_start":5,"column_end":92}},{"value":"/ sometimes achieving linear time. It is randomized but deterministic, and falls back to","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":459258,"byte_end":459348,"line_start":426,"line_end":426,"column_start":5,"column_end":95}},{"value":"/ heapsort on degenerate inputs.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":459353,"byte_end":459387,"line_start":427,"line_end":427,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":459392,"byte_end":459395,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ It is generally faster than stable sorting, except in a few special cases, e.g. when the","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":459400,"byte_end":459492,"line_start":429,"line_end":429,"column_start":5,"column_end":97}},{"value":"/ slice consists of several concatenated sorted sequences.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":459497,"byte_end":459557,"line_start":430,"line_end":430,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":459562,"byte_end":459565,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ All quicksorts work in two stages: partitioning into two halves followed by recursive","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":459570,"byte_end":459659,"line_start":432,"line_end":432,"column_start":5,"column_end":94}},{"value":"/ calls. The partitioning phase is sequential, but the two recursive calls are performed in","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":459664,"byte_end":459757,"line_start":433,"line_end":433,"column_start":5,"column_end":98}},{"value":"/ parallel.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":459762,"byte_end":459775,"line_start":434,"line_end":434,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":459780,"byte_end":459783,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ [pdqsort]: https://github.com/orlp/pdqsort","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":459788,"byte_end":459834,"line_start":436,"line_end":436,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":459839,"byte_end":459842,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":459847,"byte_end":459861,"line_start":438,"line_end":438,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":459866,"byte_end":459869,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":459874,"byte_end":459881,"line_start":440,"line_end":440,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":459886,"byte_end":459912,"line_start":441,"line_end":441,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":459917,"byte_end":459920,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ let mut v = [-5i32, 4, 1, -3, 2];","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":459925,"byte_end":459962,"line_start":443,"line_end":443,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":459967,"byte_end":459970,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ v.par_sort_unstable_by_key(|k| k.abs());","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":459975,"byte_end":460019,"line_start":445,"line_end":445,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(v, [1, 2, -3, 4, -5]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":460024,"byte_end":460061,"line_start":446,"line_end":446,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":460066,"byte_end":460073,"line_start":447,"line_end":447,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8311},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":461355,"byte_end":461359,"line_start":502,"line_end":502,"column_start":12,"column_end":16},"name":"Iter","qualname":"::slice::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":8314}],"decl_id":null,"docs":" Parallel iterator over immutable items in a slice\n","sig":null,"attributes":[{"value":"/ Parallel iterator over immutable items in a slice","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":461273,"byte_end":461326,"line_start":500,"line_end":500,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":8319},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":462869,"byte_end":462875,"line_start":567,"line_end":567,"column_start":12,"column_end":18},"name":"Chunks","qualname":"::slice::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":8322},{"krate":0,"index":8323}],"decl_id":null,"docs":" Parallel iterator over immutable non-overlapping chunks of a slice\n","sig":null,"attributes":[{"value":"/ Parallel iterator over immutable non-overlapping chunks of a slice","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":462770,"byte_end":462840,"line_start":565,"line_end":565,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":8328},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":464831,"byte_end":464842,"line_start":647,"line_end":647,"column_start":12,"column_end":23},"name":"ChunksExact","qualname":"::slice::ChunksExact","value":"ChunksExact {  }","parent":null,"children":[{"krate":0,"index":8331},{"krate":0,"index":8332},{"krate":0,"index":8333}],"decl_id":null,"docs":" Parallel iterator over immutable non-overlapping chunks of a slice\n","sig":null,"attributes":[{"value":"/ Parallel iterator over immutable non-overlapping chunks of a slice","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":464732,"byte_end":464802,"line_start":645,"line_end":645,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":5353},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":465160,"byte_end":465169,"line_start":657,"line_end":657,"column_start":12,"column_end":21},"name":"remainder","qualname":"<ChunksExact>::remainder","value":"pub fn remainder(&Self) -> &'data [T]","parent":null,"children":[],"decl_id":null,"docs":" Return the remainder of the original slice that is not going to be\n returned by the iterator. The returned slice has at most `chunk_size-1`\n elements.\n","sig":null,"attributes":[{"value":"/ Return the remainder of the original slice that is not going to be","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":464980,"byte_end":465050,"line_start":654,"line_end":654,"column_start":5,"column_end":75}},{"value":"/ returned by the iterator. The returned slice has at most `chunk_size-1`","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":465055,"byte_end":465130,"line_start":655,"line_end":655,"column_start":5,"column_end":80}},{"value":"/ elements.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":465135,"byte_end":465148,"line_start":656,"line_end":656,"column_start":5,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":8338},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":467119,"byte_end":467126,"line_start":737,"line_end":737,"column_start":12,"column_end":19},"name":"Windows","qualname":"::slice::Windows","value":"Windows {  }","parent":null,"children":[{"krate":0,"index":8341},{"krate":0,"index":8342}],"decl_id":null,"docs":" Parallel iterator over immutable overlapping windows of a slice\n","sig":null,"attributes":[{"value":"/ Parallel iterator over immutable overlapping windows of a slice","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":467023,"byte_end":467090,"line_start":735,"line_end":735,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":8347},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":469163,"byte_end":469170,"line_start":819,"line_end":819,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::slice::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":8350}],"decl_id":null,"docs":" Parallel iterator over mutable items in a slice\n","sig":null,"attributes":[{"value":"/ Parallel iterator over mutable items in a slice","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":469083,"byte_end":469134,"line_start":817,"line_end":817,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":8355},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":470649,"byte_end":470658,"line_start":881,"line_end":881,"column_start":12,"column_end":21},"name":"ChunksMut","qualname":"::slice::ChunksMut","value":"ChunksMut {  }","parent":null,"children":[{"krate":0,"index":8358},{"krate":0,"index":8359}],"decl_id":null,"docs":" Parallel iterator over mutable non-overlapping chunks of a slice\n","sig":null,"attributes":[{"value":"/ Parallel iterator over mutable non-overlapping chunks of a slice","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":470552,"byte_end":470620,"line_start":879,"line_end":879,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":8364},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":472544,"byte_end":472558,"line_start":955,"line_end":955,"column_start":12,"column_end":26},"name":"ChunksExactMut","qualname":"::slice::ChunksExactMut","value":"ChunksExactMut {  }","parent":null,"children":[{"krate":0,"index":8367},{"krate":0,"index":8368},{"krate":0,"index":8369}],"decl_id":null,"docs":" Parallel iterator over mutable non-overlapping chunks of a slice\n","sig":null,"attributes":[{"value":"/ Parallel iterator over mutable non-overlapping chunks of a slice","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":472447,"byte_end":472515,"line_start":953,"line_end":953,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":5472},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":473254,"byte_end":473268,"line_start":971,"line_end":971,"column_start":12,"column_end":26},"name":"into_remainder","qualname":"<ChunksExactMut>::into_remainder","value":"pub fn into_remainder(Self) -> &'data mut [T]","parent":null,"children":[],"decl_id":null,"docs":" Return the remainder of the original slice that is not going to be\n returned by the iterator. The returned slice has at most `chunk_size-1`\n elements.","sig":null,"attributes":[{"value":"/ Return the remainder of the original slice that is not going to be","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":472707,"byte_end":472777,"line_start":962,"line_end":962,"column_start":5,"column_end":75}},{"value":"/ returned by the iterator. The returned slice has at most `chunk_size-1`","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":472782,"byte_end":472857,"line_start":963,"line_end":963,"column_start":5,"column_end":80}},{"value":"/ elements.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":472862,"byte_end":472875,"line_start":964,"line_end":964,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":472880,"byte_end":472883,"line_start":965,"line_end":965,"column_start":5,"column_end":8}},{"value":"/ Note that this has to consume `self` to return the original lifetime of","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":472888,"byte_end":472963,"line_start":966,"line_end":966,"column_start":5,"column_end":80}},{"value":"/ the data, which prevents this from actually being used as a parallel","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":472968,"byte_end":473040,"line_start":967,"line_end":967,"column_start":5,"column_end":77}},{"value":"/ iterator since that also consumes. This method is provided for parity","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":473045,"byte_end":473118,"line_start":968,"line_end":968,"column_start":5,"column_end":78}},{"value":"/ with `std::iter::ChunksExactMut`, but consider calling `remainder()` or","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":473123,"byte_end":473198,"line_start":969,"line_end":969,"column_start":5,"column_end":80}},{"value":"/ `take_remainder()` as alternatives.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":473203,"byte_end":473242,"line_start":970,"line_end":970,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":5473},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":473662,"byte_end":473671,"line_start":981,"line_end":981,"column_start":12,"column_end":21},"name":"remainder","qualname":"<ChunksExactMut>::remainder","value":"pub fn remainder(&mut Self) -> &mut [T]","parent":null,"children":[],"decl_id":null,"docs":" Return the remainder of the original slice that is not going to be\n returned by the iterator. The returned slice has at most `chunk_size-1`\n elements.","sig":null,"attributes":[{"value":"/ Return the remainder of the original slice that is not going to be","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":473323,"byte_end":473393,"line_start":975,"line_end":975,"column_start":5,"column_end":75}},{"value":"/ returned by the iterator. The returned slice has at most `chunk_size-1`","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":473398,"byte_end":473473,"line_start":976,"line_end":976,"column_start":5,"column_end":80}},{"value":"/ elements.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":473478,"byte_end":473491,"line_start":977,"line_end":977,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":473496,"byte_end":473499,"line_start":978,"line_end":978,"column_start":5,"column_end":8}},{"value":"/ Consider `take_remainder()` if you need access to the data with its","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":473504,"byte_end":473575,"line_start":979,"line_end":979,"column_start":5,"column_end":76}},{"value":"/ original lifetime, rather than borrowing through `&mut self` here.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":473580,"byte_end":473650,"line_start":980,"line_end":980,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":5474},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":473950,"byte_end":473964,"line_start":988,"line_end":988,"column_start":12,"column_end":26},"name":"take_remainder","qualname":"<ChunksExactMut>::take_remainder","value":"pub fn take_remainder(&mut Self) -> &'data mut [T]","parent":null,"children":[],"decl_id":null,"docs":" Return the remainder of the original slice that is not going to be\n returned by the iterator. The returned slice has at most `chunk_size-1`\n elements. Subsequent calls will return an empty slice.\n","sig":null,"attributes":[{"value":"/ Return the remainder of the original slice that is not going to be","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":473725,"byte_end":473795,"line_start":985,"line_end":985,"column_start":5,"column_end":75}},{"value":"/ returned by the iterator. The returned slice has at most `chunk_size-1`","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":473800,"byte_end":473875,"line_start":986,"line_end":986,"column_start":5,"column_end":80}},{"value":"/ elements. Subsequent calls will return an empty slice.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":473880,"byte_end":473938,"line_start":987,"line_end":987,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":5502},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":475847,"byte_end":475852,"line_start":1061,"line_end":1061,"column_start":12,"column_end":17},"name":"Split","qualname":"::slice::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":5506},{"krate":0,"index":5507}],"decl_id":null,"docs":" Parallel iterator over slices separated by a predicate\n","sig":null,"attributes":[{"value":"/ Parallel iterator over slices separated by a predicate","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":475777,"byte_end":475835,"line_start":1060,"line_end":1060,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":5536},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":477721,"byte_end":477729,"line_start":1137,"line_end":1137,"column_start":12,"column_end":20},"name":"SplitMut","qualname":"::slice::SplitMut","value":"SplitMut {  }","parent":null,"children":[{"krate":0,"index":5540},{"krate":0,"index":5541}],"decl_id":null,"docs":" Parallel iterator over mutable slices separated by a predicate\n","sig":null,"attributes":[{"value":"/ Parallel iterator over mutable slices separated by a predicate","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":477643,"byte_end":477709,"line_start":1136,"line_end":1136,"column_start":1,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":5565},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"str","qualname":"::str","value":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","parent":null,"children":[{"krate":0,"index":5566},{"krate":0,"index":5567},{"krate":0,"index":5568},{"krate":0,"index":5569},{"krate":0,"index":5570},{"krate":0,"index":5571},{"krate":0,"index":5572},{"krate":0,"index":5588},{"krate":0,"index":5590},{"krate":0,"index":5607},{"krate":0,"index":5610},{"krate":0,"index":5614},{"krate":0,"index":5627},{"krate":0,"index":8377},{"krate":0,"index":8383},{"krate":0,"index":8380},{"krate":0,"index":5641},{"krate":0,"index":5644},{"krate":0,"index":5649},{"krate":0,"index":8386},{"krate":0,"index":8392},{"krate":0,"index":8389},{"krate":0,"index":5655},{"krate":0,"index":5659},{"krate":0,"index":5664},{"krate":0,"index":8395},{"krate":0,"index":8401},{"krate":0,"index":8398},{"krate":0,"index":5670},{"krate":0,"index":5673},{"krate":0,"index":5678},{"krate":0,"index":8404},{"krate":0,"index":8410},{"krate":0,"index":8407},{"krate":0,"index":5684},{"krate":0,"index":5687},{"krate":0,"index":5692},{"krate":0,"index":8413},{"krate":0,"index":8422},{"krate":0,"index":8418},{"krate":0,"index":5698},{"krate":0,"index":5702},{"krate":0,"index":5708},{"krate":0,"index":8426},{"krate":0,"index":8435},{"krate":0,"index":8431},{"krate":0,"index":5718},{"krate":0,"index":5724},{"krate":0,"index":5728},{"krate":0,"index":5733},{"krate":0,"index":5739},{"krate":0,"index":8439},{"krate":0,"index":8446},{"krate":0,"index":8443},{"krate":0,"index":5748},{"krate":0,"index":5749},{"krate":0,"index":8449},{"krate":0,"index":8456},{"krate":0,"index":8453},{"krate":0,"index":5754},{"krate":0,"index":5755},{"krate":0,"index":8459},{"krate":0,"index":8468},{"krate":0,"index":8464},{"krate":0,"index":5760},{"krate":0,"index":5766},{"krate":0,"index":5772},{"krate":0,"index":8472},{"krate":0,"index":8481},{"krate":0,"index":8477},{"krate":0,"index":5780},{"krate":0,"index":5787},{"krate":0,"index":5793}],"decl_id":null,"docs":" Parallel iterator types for [strings][std::str]","sig":null,"attributes":[{"value":"/ Parallel iterator types for [strings][std::str]","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":539773,"byte_end":539824,"line_start":1,"line_end":1,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":539825,"byte_end":539828,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to interact with this module directly unless you need","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":539829,"byte_end":539907,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ to name one of the iterator types.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":539908,"byte_end":539946,"line_start":4,"line_end":4,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":539947,"byte_end":539950,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Note: [`ParallelString::par_split()`] and [`par_split_terminator()`]","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":539951,"byte_end":540023,"line_start":6,"line_end":6,"column_start":1,"column_end":73}},{"value":"/ reference a `Pattern` trait which is not visible outside this crate.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":540024,"byte_end":540096,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"/ This trait is intentionally kept private, for use only by Rayon itself.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":540097,"byte_end":540172,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ It is implemented for `char` and any `F: Fn(char) -> bool + Sync + Send`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":540173,"byte_end":540250,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":540251,"byte_end":540254,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`ParallelString::par_split()`]: trait.ParallelString.html#method.par_split","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":540255,"byte_end":540334,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ [`par_split_terminator()`]: trait.ParallelString.html#method.par_split_terminator","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":540335,"byte_end":540420,"line_start":12,"line_end":12,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":540421,"byte_end":540424,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [std::str]: https://doc.rust-lang.org/stable/std/str/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":540425,"byte_end":540482,"line_start":14,"line_end":14,"column_start":1,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":5572},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":541731,"byte_end":541745,"line_start":59,"line_end":59,"column_start":11,"column_end":25},"name":"ParallelString","qualname":"::str::ParallelString","value":"ParallelString","parent":null,"children":[{"krate":0,"index":5573},{"krate":0,"index":5574},{"krate":0,"index":5575},{"krate":0,"index":5576},{"krate":0,"index":5577},{"krate":0,"index":5578},{"krate":0,"index":5580},{"krate":0,"index":5582},{"krate":0,"index":5583},{"krate":0,"index":5584},{"krate":0,"index":5586}],"decl_id":null,"docs":" Parallel extensions for strings.\n","sig":null,"attributes":[{"value":"/ Parallel extensions for strings.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":541684,"byte_end":541720,"line_start":58,"line_end":58,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":5573},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":541862,"byte_end":541880,"line_start":62,"line_end":62,"column_start":8,"column_end":26},"name":"as_parallel_string","qualname":"::str::ParallelString::as_parallel_string","value":"pub fn as_parallel_string(&Self) -> &str","parent":{"krate":0,"index":5572},"children":[],"decl_id":null,"docs":" Returns a plain string slice, which is used to implement the rest of\n the parallel methods.\n","sig":null,"attributes":[{"value":"/ Returns a plain string slice, which is used to implement the rest of","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":541752,"byte_end":541824,"line_start":60,"line_end":60,"column_start":5,"column_end":77}},{"value":"/ the parallel methods.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":541829,"byte_end":541854,"line_start":61,"line_end":61,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5574},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":542165,"byte_end":542174,"line_start":73,"line_end":73,"column_start":8,"column_end":17},"name":"par_chars","qualname":"::str::ParallelString::par_chars","value":"pub fn par_chars(&Self) -> Chars","parent":{"krate":0,"index":5572},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over the characters of a string.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over the characters of a string.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":541902,"byte_end":541966,"line_start":64,"line_end":64,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":541971,"byte_end":541974,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":541979,"byte_end":541993,"line_start":66,"line_end":66,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":541998,"byte_end":542001,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":542006,"byte_end":542013,"line_start":68,"line_end":68,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":542018,"byte_end":542044,"line_start":69,"line_end":69,"column_start":5,"column_end":31}},{"value":"/ let max = \"hello\".par_chars().max_by_key(|c| *c as i32);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":542049,"byte_end":542109,"line_start":70,"line_end":70,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(Some('o'), max);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":542114,"byte_end":542145,"line_start":71,"line_end":71,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":542150,"byte_end":542157,"line_start":72,"line_end":72,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5575},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":542583,"byte_end":542599,"line_start":88,"line_end":88,"column_start":8,"column_end":24},"name":"par_char_indices","qualname":"::str::ParallelString::par_char_indices","value":"pub fn par_char_indices(&Self) -> CharIndices","parent":{"krate":0,"index":5572},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over the characters of a string, with their positions.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over the characters of a string, with their positions.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":542280,"byte_end":542366,"line_start":79,"line_end":79,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":542371,"byte_end":542374,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":542379,"byte_end":542393,"line_start":81,"line_end":81,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":542398,"byte_end":542401,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":542406,"byte_end":542413,"line_start":83,"line_end":83,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":542418,"byte_end":542444,"line_start":84,"line_end":84,"column_start":5,"column_end":31}},{"value":"/ let min = \"hello\".par_char_indices().min_by_key(|&(_i, c)| c as i32);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":542449,"byte_end":542522,"line_start":85,"line_end":85,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(Some((1, 'e')), min);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":542527,"byte_end":542563,"line_start":86,"line_end":86,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":542568,"byte_end":542575,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5576},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":543259,"byte_end":543268,"line_start":108,"line_end":108,"column_start":8,"column_end":17},"name":"par_bytes","qualname":"::str::ParallelString::par_bytes","value":"pub fn par_bytes(&Self) -> Bytes","parent":{"krate":0,"index":5572},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over the bytes of a string.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over the bytes of a string.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":542717,"byte_end":542776,"line_start":94,"line_end":94,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":542781,"byte_end":542784,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Note that multi-byte sequences (for code points greater than `U+007F`)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":542789,"byte_end":542863,"line_start":96,"line_end":96,"column_start":5,"column_end":79}},{"value":"/ are produced as separate items, but will not be split across threads.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":542868,"byte_end":542941,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/ If you would prefer an indexed iterator without that guarantee, consider","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":542946,"byte_end":543022,"line_start":98,"line_end":98,"column_start":5,"column_end":81}},{"value":"/ `string.as_bytes().par_iter().cloned()` instead.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":543027,"byte_end":543079,"line_start":99,"line_end":99,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":543084,"byte_end":543087,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":543092,"byte_end":543106,"line_start":101,"line_end":101,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":543111,"byte_end":543114,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":543119,"byte_end":543126,"line_start":103,"line_end":103,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":543131,"byte_end":543157,"line_start":104,"line_end":104,"column_start":5,"column_end":31}},{"value":"/ let max = \"hello\".par_bytes().max();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":543162,"byte_end":543202,"line_start":105,"line_end":105,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(Some(b'o'), max);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":543207,"byte_end":543239,"line_start":106,"line_end":106,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":543244,"byte_end":543251,"line_start":107,"line_end":107,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5577},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":543989,"byte_end":544005,"line_start":132,"line_end":132,"column_start":8,"column_end":24},"name":"par_encode_utf16","qualname":"::str::ParallelString::par_encode_utf16","value":"pub fn par_encode_utf16(&Self) -> EncodeUtf16","parent":{"krate":0,"index":5572},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over a string encoded as UTF-16.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over a string encoded as UTF-16.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":543374,"byte_end":543438,"line_start":114,"line_end":114,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":543443,"byte_end":543446,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ Note that surrogate pairs (for code points greater than `U+FFFF`) are","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":543451,"byte_end":543524,"line_start":116,"line_end":116,"column_start":5,"column_end":78}},{"value":"/ produced as separate items, but will not be split across threads.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":543529,"byte_end":543598,"line_start":117,"line_end":117,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":543603,"byte_end":543606,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":543611,"byte_end":543625,"line_start":119,"line_end":119,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":543630,"byte_end":543633,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":543638,"byte_end":543645,"line_start":121,"line_end":121,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":543650,"byte_end":543676,"line_start":122,"line_end":122,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":543681,"byte_end":543684,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ let max = \"hello\".par_encode_utf16().max();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":543689,"byte_end":543736,"line_start":124,"line_end":124,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(Some(b'o' as u16), max);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":543741,"byte_end":543780,"line_start":125,"line_end":125,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":543785,"byte_end":543788,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ let text = \"Zażółć gęślą jaźń\";","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":543793,"byte_end":543837,"line_start":127,"line_end":127,"column_start":5,"column_end":40}},{"value":"/ let utf8_len = text.len();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":543842,"byte_end":543872,"line_start":128,"line_end":128,"column_start":5,"column_end":35}},{"value":"/ let utf16_len = text.par_encode_utf16().count();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":543877,"byte_end":543929,"line_start":129,"line_end":129,"column_start":5,"column_end":57}},{"value":"/ assert!(utf16_len <= utf8_len);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":543934,"byte_end":543969,"line_start":130,"line_end":130,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":543974,"byte_end":543981,"line_start":131,"line_end":131,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5578},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":544693,"byte_end":544702,"line_start":154,"line_end":154,"column_start":8,"column_end":17},"name":"par_split","qualname":"::str::ParallelString::par_split","value":"pub fn par_split<P: Pattern>(&Self, P) -> Split<, P>","parent":{"krate":0,"index":5572},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over substrings separated by a\n given character or predicate, similar to `str::split`.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over substrings separated by a","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":544123,"byte_end":544185,"line_start":138,"line_end":138,"column_start":5,"column_end":67}},{"value":"/ given character or predicate, similar to `str::split`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":544190,"byte_end":544248,"line_start":139,"line_end":139,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":544253,"byte_end":544256,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Note: the `Pattern` trait is private, for use only by Rayon itself.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":544261,"byte_end":544332,"line_start":141,"line_end":141,"column_start":5,"column_end":76}},{"value":"/ It is implemented for `char` and any `F: Fn(char) -> bool + Sync + Send`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":544337,"byte_end":544414,"line_start":142,"line_end":142,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":544419,"byte_end":544422,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":544427,"byte_end":544441,"line_start":144,"line_end":144,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":544446,"byte_end":544449,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":544454,"byte_end":544461,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":544466,"byte_end":544492,"line_start":147,"line_end":147,"column_start":5,"column_end":31}},{"value":"/ let total = \"1, 2, buckle, 3, 4, door\"","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":544497,"byte_end":544539,"line_start":148,"line_end":148,"column_start":5,"column_end":47}},{"value":"/    .par_split(',')","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":544544,"byte_end":544566,"line_start":149,"line_end":149,"column_start":5,"column_end":27}},{"value":"/    .filter_map(|s| s.trim().parse::<i32>().ok())","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":544571,"byte_end":544623,"line_start":150,"line_end":150,"column_start":5,"column_end":57}},{"value":"/    .sum();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":544628,"byte_end":544642,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/ assert_eq!(10, total);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":544647,"byte_end":544673,"line_start":152,"line_end":152,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":544678,"byte_end":544685,"line_start":153,"line_end":153,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5580},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":545531,"byte_end":545551,"line_start":175,"line_end":175,"column_start":8,"column_end":28},"name":"par_split_terminator","qualname":"::str::ParallelString::par_split_terminator","value":"pub fn par_split_terminator<P: Pattern>(&Self, P) -> SplitTerminator<, P>","parent":{"krate":0,"index":5572},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over substrings terminated by a\n given character or predicate, similar to `str::split_terminator`.\n It's equivalent to `par_split`, except it doesn't produce an empty\n substring after a trailing terminator.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over substrings terminated by a","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":544822,"byte_end":544885,"line_start":158,"line_end":158,"column_start":5,"column_end":68}},{"value":"/ given character or predicate, similar to `str::split_terminator`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":544890,"byte_end":544959,"line_start":159,"line_end":159,"column_start":5,"column_end":74}},{"value":"/ It's equivalent to `par_split`, except it doesn't produce an empty","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":544964,"byte_end":545034,"line_start":160,"line_end":160,"column_start":5,"column_end":75}},{"value":"/ substring after a trailing terminator.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":545039,"byte_end":545081,"line_start":161,"line_end":161,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":545086,"byte_end":545089,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ Note: the `Pattern` trait is private, for use only by Rayon itself.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":545094,"byte_end":545165,"line_start":163,"line_end":163,"column_start":5,"column_end":76}},{"value":"/ It is implemented for `char` and any `F: Fn(char) -> bool + Sync + Send`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":545170,"byte_end":545247,"line_start":164,"line_end":164,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":545252,"byte_end":545255,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":545260,"byte_end":545274,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":545279,"byte_end":545282,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":545287,"byte_end":545294,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":545299,"byte_end":545325,"line_start":169,"line_end":169,"column_start":5,"column_end":31}},{"value":"/ let parts: Vec<_> = \"((1 + 3) * 2)\"","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":545330,"byte_end":545369,"line_start":170,"line_end":170,"column_start":5,"column_end":44}},{"value":"/     .par_split_terminator(|c| c == '(' || c == ')')","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":545374,"byte_end":545429,"line_start":171,"line_end":171,"column_start":5,"column_end":60}},{"value":"/     .collect();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":545434,"byte_end":545453,"line_start":172,"line_end":172,"column_start":5,"column_end":24}},{"value":"/ assert_eq!(vec![\"\", \"\", \"1 + 3\", \" * 2\"], parts);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":545458,"byte_end":545511,"line_start":173,"line_end":173,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":545516,"byte_end":545523,"line_start":174,"line_end":174,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5582},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":546222,"byte_end":546231,"line_start":194,"line_end":194,"column_start":8,"column_end":17},"name":"par_lines","qualname":"::str::ParallelString::par_lines","value":"pub fn par_lines(&Self) -> Lines","parent":{"krate":0,"index":5572},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over the lines of a string, ending with an\n optional carriage return and with a newline (`\\r\\n` or just `\\n`).\n The final line ending is optional, and line endings are not included in\n the output strings.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over the lines of a string, ending with an","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":545693,"byte_end":545767,"line_start":179,"line_end":179,"column_start":5,"column_end":79}},{"value":"/ optional carriage return and with a newline (`\\r\\n` or just `\\n`).","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":545772,"byte_end":545842,"line_start":180,"line_end":180,"column_start":5,"column_end":75}},{"value":"/ The final line ending is optional, and line endings are not included in","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":545847,"byte_end":545922,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ the output strings.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":545927,"byte_end":545950,"line_start":182,"line_end":182,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":545955,"byte_end":545958,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":545963,"byte_end":545977,"line_start":184,"line_end":184,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":545982,"byte_end":545985,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":545990,"byte_end":545997,"line_start":186,"line_end":186,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":546002,"byte_end":546028,"line_start":187,"line_end":187,"column_start":5,"column_end":31}},{"value":"/ let lengths: Vec<_> = \"hello world\\nfizbuzz\"","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":546033,"byte_end":546081,"line_start":188,"line_end":188,"column_start":5,"column_end":53}},{"value":"/     .par_lines()","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":546086,"byte_end":546106,"line_start":189,"line_end":189,"column_start":5,"column_end":25}},{"value":"/     .map(|l| l.len())","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":546111,"byte_end":546136,"line_start":190,"line_end":190,"column_start":5,"column_end":30}},{"value":"/     .collect();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":546141,"byte_end":546160,"line_start":191,"line_end":191,"column_start":5,"column_end":24}},{"value":"/ assert_eq!(vec![11, 7], lengths);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":546165,"byte_end":546202,"line_start":192,"line_end":192,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":546207,"byte_end":546214,"line_start":193,"line_end":193,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5583},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":546856,"byte_end":546876,"line_start":213,"line_end":213,"column_start":8,"column_end":28},"name":"par_split_whitespace","qualname":"::str::ParallelString::par_split_whitespace","value":"pub fn par_split_whitespace(&Self) -> SplitWhitespace","parent":{"krate":0,"index":5572},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over the sub-slices of a string that are\n separated by any amount of whitespace.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over the sub-slices of a string that are","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":546306,"byte_end":546378,"line_start":198,"line_end":198,"column_start":5,"column_end":77}},{"value":"/ separated by any amount of whitespace.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":546383,"byte_end":546425,"line_start":199,"line_end":199,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":546430,"byte_end":546433,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ As with `str::split_whitespace`, 'whitespace' is defined according to","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":546438,"byte_end":546511,"line_start":201,"line_end":201,"column_start":5,"column_end":78}},{"value":"/ the terms of the Unicode Derived Core Property `White_Space`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":546516,"byte_end":546581,"line_start":202,"line_end":202,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":546586,"byte_end":546589,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":546594,"byte_end":546608,"line_start":204,"line_end":204,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":546613,"byte_end":546616,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":546621,"byte_end":546628,"line_start":206,"line_end":206,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":546633,"byte_end":546659,"line_start":207,"line_end":207,"column_start":5,"column_end":31}},{"value":"/ let longest = \"which is the longest word?\"","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":546664,"byte_end":546710,"line_start":208,"line_end":208,"column_start":5,"column_end":51}},{"value":"/     .par_split_whitespace()","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":546715,"byte_end":546746,"line_start":209,"line_end":209,"column_start":5,"column_end":36}},{"value":"/     .max_by_key(|word| word.len());","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":546751,"byte_end":546790,"line_start":210,"line_end":210,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(Some(\"longest\"), longest);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":546795,"byte_end":546836,"line_start":211,"line_end":211,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":546841,"byte_end":546848,"line_start":212,"line_end":212,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5584},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":547553,"byte_end":547564,"line_start":233,"line_end":233,"column_start":8,"column_end":19},"name":"par_matches","qualname":"::str::ParallelString::par_matches","value":"pub fn par_matches<P: Pattern>(&Self, P) -> Matches<, P>","parent":{"krate":0,"index":5572},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over substrings that match a\n given character or predicate, similar to `str::matches`.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over substrings that match a","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":546971,"byte_end":547031,"line_start":217,"line_end":217,"column_start":5,"column_end":65}},{"value":"/ given character or predicate, similar to `str::matches`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":547036,"byte_end":547096,"line_start":218,"line_end":218,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":547101,"byte_end":547104,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Note: the `Pattern` trait is private, for use only by Rayon itself.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":547109,"byte_end":547180,"line_start":220,"line_end":220,"column_start":5,"column_end":76}},{"value":"/ It is implemented for `char` and any `F: Fn(char) -> bool + Sync + Send`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":547185,"byte_end":547262,"line_start":221,"line_end":221,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":547267,"byte_end":547270,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":547275,"byte_end":547289,"line_start":223,"line_end":223,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":547294,"byte_end":547297,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":547302,"byte_end":547309,"line_start":225,"line_end":225,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":547314,"byte_end":547340,"line_start":226,"line_end":226,"column_start":5,"column_end":31}},{"value":"/ let total = \"1, 2, buckle, 3, 4, door\"","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":547345,"byte_end":547387,"line_start":227,"line_end":227,"column_start":5,"column_end":47}},{"value":"/    .par_matches(char::is_numeric)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":547392,"byte_end":547429,"line_start":228,"line_end":228,"column_start":5,"column_end":42}},{"value":"/    .map(|s| s.parse::<i32>().expect(\"digit\"))","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":547434,"byte_end":547483,"line_start":229,"line_end":229,"column_start":5,"column_end":54}},{"value":"/    .sum();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":547488,"byte_end":547502,"line_start":230,"line_end":230,"column_start":5,"column_end":19}},{"value":"/ assert_eq!(10, total);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":547507,"byte_end":547533,"line_start":231,"line_end":231,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":547538,"byte_end":547545,"line_start":232,"line_end":232,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5586},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":548342,"byte_end":548359,"line_start":255,"line_end":255,"column_start":8,"column_end":25},"name":"par_match_indices","qualname":"::str::ParallelString::par_match_indices","value":"pub fn par_match_indices<P: Pattern>(&Self, P) -> MatchIndices<, P>","parent":{"krate":0,"index":5572},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over substrings that match a given character\n or predicate, with their positions, similar to `str::match_indices`.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over substrings that match a given character","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":547722,"byte_end":547798,"line_start":240,"line_end":240,"column_start":5,"column_end":81}},{"value":"/ or predicate, with their positions, similar to `str::match_indices`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":547803,"byte_end":547875,"line_start":241,"line_end":241,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":547880,"byte_end":547883,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ Note: the `Pattern` trait is private, for use only by Rayon itself.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":547888,"byte_end":547959,"line_start":243,"line_end":243,"column_start":5,"column_end":76}},{"value":"/ It is implemented for `char` and any `F: Fn(char) -> bool + Sync + Send`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":547964,"byte_end":548041,"line_start":244,"line_end":244,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":548046,"byte_end":548049,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":548054,"byte_end":548068,"line_start":246,"line_end":246,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":548073,"byte_end":548076,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":548081,"byte_end":548088,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":548093,"byte_end":548119,"line_start":249,"line_end":249,"column_start":5,"column_end":31}},{"value":"/ let digits: Vec<_> = \"1, 2, buckle, 3, 4, door\"","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":548124,"byte_end":548175,"line_start":250,"line_end":250,"column_start":5,"column_end":56}},{"value":"/    .par_match_indices(char::is_numeric)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":548180,"byte_end":548223,"line_start":251,"line_end":251,"column_start":5,"column_end":48}},{"value":"/    .collect();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":548228,"byte_end":548246,"line_start":252,"line_end":252,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(digits, vec![(0, \"1\"), (3, \"2\"), (14, \"3\"), (17, \"4\")]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":548251,"byte_end":548322,"line_start":253,"line_end":253,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":548327,"byte_end":548334,"line_start":254,"line_end":254,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":5594},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":549256,"byte_end":549263,"line_start":283,"line_end":283,"column_start":15,"column_end":22},"name":"Pattern","qualname":"::str::private::Pattern","value":"Pattern: Sized + Sync + Send","parent":null,"children":[{"krate":0,"index":8374},{"krate":0,"index":5595},{"krate":0,"index":5596},{"krate":0,"index":5597},{"krate":0,"index":5598},{"krate":0,"index":5601},{"krate":0,"index":5604}],"decl_id":null,"docs":" Pattern-matching trait for `ParallelString`, somewhat like a mix of\n `std::str::pattern::{Pattern, Searcher}`.","sig":null,"attributes":[{"value":"/ Pattern-matching trait for `ParallelString`, somewhat like a mix of","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":549043,"byte_end":549114,"line_start":279,"line_end":279,"column_start":5,"column_end":76}},{"value":"/ `std::str::pattern::{Pattern, Searcher}`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":549119,"byte_end":549164,"line_start":280,"line_end":280,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":549169,"byte_end":549172,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ Implementing this trait is not permitted outside of `rayon`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":549177,"byte_end":549241,"line_start":282,"line_end":282,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":5595},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":549323,"byte_end":549330,"line_start":285,"line_end":285,"column_start":12,"column_end":19},"name":"find_in","qualname":"::str::private::Pattern::find_in","value":"pub fn find_in(&Self, &str) -> Option<usize>","parent":{"krate":0,"index":5594},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5596},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":549383,"byte_end":549391,"line_start":286,"line_end":286,"column_start":12,"column_end":20},"name":"rfind_in","qualname":"::str::private::Pattern::rfind_in","value":"pub fn rfind_in(&Self, &str) -> Option<usize>","parent":{"krate":0,"index":5594},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5597},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":549444,"byte_end":549456,"line_start":287,"line_end":287,"column_start":12,"column_end":24},"name":"is_suffix_of","qualname":"::str::private::Pattern::is_suffix_of","value":"pub fn is_suffix_of(&Self, &str) -> bool","parent":{"krate":0,"index":5594},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5598},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":549500,"byte_end":549511,"line_start":288,"line_end":288,"column_start":12,"column_end":23},"name":"fold_splits","qualname":"::str::private::Pattern::fold_splits","value":"pub fn fold_splits<'ch, F>(&Self, &'ch str, F, bool) -> F where\nF: Folder<&'ch str>","parent":{"krate":0,"index":5594},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5601},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":549638,"byte_end":549650,"line_start":291,"line_end":291,"column_start":12,"column_end":24},"name":"fold_matches","qualname":"::str::private::Pattern::fold_matches","value":"pub fn fold_matches<'ch, F>(&Self, &'ch str, F) -> F where F: Folder<&'ch str>","parent":{"krate":0,"index":5594},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5604},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":549760,"byte_end":549778,"line_start":294,"line_end":294,"column_start":12,"column_end":30},"name":"fold_match_indices","qualname":"::str::private::Pattern::fold_match_indices","value":"pub fn fold_match_indices<'ch, F>(&Self, &'ch str, F, usize) -> F where\nF: Folder<(usize, &'ch str)>","parent":{"krate":0,"index":5594},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8377},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":552249,"byte_end":552254,"line_start":395,"line_end":395,"column_start":12,"column_end":17},"name":"Chars","qualname":"::str::Chars","value":"Chars {  }","parent":null,"children":[{"krate":0,"index":8379}],"decl_id":null,"docs":" Parallel iterator over the characters of a string\n","sig":null,"attributes":[{"value":"/ Parallel iterator over the characters of a string","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":552160,"byte_end":552213,"line_start":393,"line_end":393,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":8386},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":553296,"byte_end":553307,"line_start":439,"line_end":439,"column_start":12,"column_end":23},"name":"CharIndices","qualname":"::str::CharIndices","value":"CharIndices {  }","parent":null,"children":[{"krate":0,"index":8388}],"decl_id":null,"docs":" Parallel iterator over the characters of a string, with their positions\n","sig":null,"attributes":[{"value":"/ Parallel iterator over the characters of a string, with their positions","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":553185,"byte_end":553260,"line_start":437,"line_end":437,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":8395},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":554679,"byte_end":554684,"line_start":495,"line_end":495,"column_start":12,"column_end":17},"name":"Bytes","qualname":"::str::Bytes","value":"Bytes {  }","parent":null,"children":[{"krate":0,"index":8397}],"decl_id":null,"docs":" Parallel iterator over the bytes of a string\n","sig":null,"attributes":[{"value":"/ Parallel iterator over the bytes of a string","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":554595,"byte_end":554643,"line_start":493,"line_end":493,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":8404},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":555700,"byte_end":555711,"line_start":539,"line_end":539,"column_start":12,"column_end":23},"name":"EncodeUtf16","qualname":"::str::EncodeUtf16","value":"EncodeUtf16 {  }","parent":null,"children":[{"krate":0,"index":8406}],"decl_id":null,"docs":" Parallel iterator over a string encoded as UTF-16\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a string encoded as UTF-16","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":555611,"byte_end":555664,"line_start":537,"line_end":537,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":8413},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":556779,"byte_end":556784,"line_start":583,"line_end":583,"column_start":12,"column_end":17},"name":"Split","qualname":"::str::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":8416},{"krate":0,"index":8417}],"decl_id":null,"docs":" Parallel iterator over substrings separated by a pattern\n","sig":null,"attributes":[{"value":"/ Parallel iterator over substrings separated by a pattern","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":556683,"byte_end":556743,"line_start":581,"line_end":581,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":8426},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":558453,"byte_end":558468,"line_start":644,"line_end":644,"column_start":12,"column_end":27},"name":"SplitTerminator","qualname":"::str::SplitTerminator","value":"SplitTerminator {  }","parent":null,"children":[{"krate":0,"index":8429},{"krate":0,"index":8430}],"decl_id":null,"docs":" Parallel iterator over substrings separated by a terminator pattern\n","sig":null,"attributes":[{"value":"/ Parallel iterator over substrings separated by a terminator pattern","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":558346,"byte_end":558417,"line_start":642,"line_end":642,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":8439},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":560326,"byte_end":560331,"line_start":710,"line_end":710,"column_start":12,"column_end":17},"name":"Lines","qualname":"::str::Lines","value":"","parent":null,"children":[],"decl_id":null,"docs":" Parallel iterator over lines in a string\n","sig":null,"attributes":[{"value":"/ Parallel iterator over lines in a string","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":560246,"byte_end":560290,"line_start":708,"line_end":708,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":8449},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":561002,"byte_end":561017,"line_start":739,"line_end":739,"column_start":12,"column_end":27},"name":"SplitWhitespace","qualname":"::str::SplitWhitespace","value":"","parent":null,"children":[],"decl_id":null,"docs":" Parallel iterator over substrings separated by whitespace\n","sig":null,"attributes":[{"value":"/ Parallel iterator over substrings separated by whitespace","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":560905,"byte_end":560966,"line_start":737,"line_end":737,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":8459},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":561606,"byte_end":561613,"line_start":764,"line_end":764,"column_start":12,"column_end":19},"name":"Matches","qualname":"::str::Matches","value":"Matches {  }","parent":null,"children":[{"krate":0,"index":8462},{"krate":0,"index":8463}],"decl_id":null,"docs":" Parallel iterator over substrings that match a pattern\n","sig":null,"attributes":[{"value":"/ Parallel iterator over substrings that match a pattern","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":561512,"byte_end":561570,"line_start":762,"line_end":762,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":8472},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":563014,"byte_end":563026,"line_start":820,"line_end":820,"column_start":12,"column_end":24},"name":"MatchIndices","qualname":"::str::MatchIndices","value":"MatchIndices {  }","parent":null,"children":[{"krate":0,"index":8475},{"krate":0,"index":8476}],"decl_id":null,"docs":" Parallel iterator over substrings that match a pattern, with their positions\n","sig":null,"attributes":[{"value":"/ Parallel iterator over substrings that match a pattern, with their positions","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":562898,"byte_end":562978,"line_start":818,"line_end":818,"column_start":1,"column_end":81}}]},{"kind":"Mod","id":{"krate":0,"index":5801},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/string.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"string","qualname":"::string","value":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/string.rs","parent":null,"children":[{"krate":0,"index":5802},{"krate":0,"index":5803},{"krate":0,"index":5806},{"krate":0,"index":5807},{"krate":0,"index":5808},{"krate":0,"index":5811},{"krate":0,"index":5814},{"krate":0,"index":8485},{"krate":0,"index":8489},{"krate":0,"index":5820},{"krate":0,"index":5825}],"decl_id":null,"docs":" This module contains the parallel iterator types for owned strings\n (`String`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[{"value":"/ This module contains the parallel iterator types for owned strings","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/string.rs","byte_start":564404,"byte_end":564474,"line_start":1,"line_end":1,"column_start":1,"column_end":71}},{"value":"/ (`String`). You will rarely need to interact with it directly","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/string.rs","byte_start":564475,"byte_end":564540,"line_start":2,"line_end":2,"column_start":1,"column_end":66}},{"value":"/ unless you have need to name one of the iterator types.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/string.rs","byte_start":564541,"byte_end":564600,"line_start":3,"line_end":3,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":8485},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/string.rs","byte_start":565161,"byte_end":565166,"line_start":25,"line_end":25,"column_start":12,"column_end":17},"name":"Drain","qualname":"::string::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":8487},{"krate":0,"index":8488}],"decl_id":null,"docs":" Draining parallel iterator that moves a range of characters out of a string,\n but keeps the total capacity.\n","sig":null,"attributes":[{"value":"/ Draining parallel iterator that moves a range of characters out of a string,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/string.rs","byte_start":565018,"byte_end":565098,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/ but keeps the total capacity.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/string.rs","byte_start":565099,"byte_end":565132,"line_start":23,"line_end":23,"column_start":1,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":5828},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/vec.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"vec","qualname":"::vec","value":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/vec.rs","parent":null,"children":[{"krate":0,"index":5829},{"krate":0,"index":5830},{"krate":0,"index":5831},{"krate":0,"index":5834},{"krate":0,"index":5837},{"krate":0,"index":5840},{"krate":0,"index":5841},{"krate":0,"index":5844},{"krate":0,"index":5847},{"krate":0,"index":5850},{"krate":0,"index":8492},{"krate":0,"index":8498},{"krate":0,"index":8495},{"krate":0,"index":5853},{"krate":0,"index":5858},{"krate":0,"index":5864},{"krate":0,"index":5871},{"krate":0,"index":8501},{"krate":0,"index":8507},{"krate":0,"index":5878},{"krate":0,"index":5885},{"krate":0,"index":5893},{"krate":0,"index":5897},{"krate":0,"index":5901},{"krate":0,"index":5905},{"krate":0,"index":5912},{"krate":0,"index":5916},{"krate":0,"index":5920},{"krate":0,"index":5927},{"krate":0,"index":5931},{"krate":0,"index":5935},{"krate":0,"index":5938}],"decl_id":null,"docs":" Parallel iterator types for [vectors][std::vec] (`Vec<T>`)","sig":null,"attributes":[{"value":"/ Parallel iterator types for [vectors][std::vec] (`Vec<T>`)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/vec.rs","byte_start":565671,"byte_end":565733,"line_start":1,"line_end":1,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/vec.rs","byte_start":565734,"byte_end":565737,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to interact with this module directly unless you need","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/vec.rs","byte_start":565738,"byte_end":565816,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ to name one of the iterator types.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/vec.rs","byte_start":565817,"byte_end":565855,"line_start":4,"line_end":4,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/vec.rs","byte_start":565856,"byte_end":565859,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [std::vec]: https://doc.rust-lang.org/stable/std/vec/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/vec.rs","byte_start":565860,"byte_end":565917,"line_start":6,"line_end":6,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":8492},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/vec.rs","byte_start":566183,"byte_end":566191,"line_start":19,"line_end":19,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::vec::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":8494}],"decl_id":null,"docs":" Parallel iterator that moves out of a vector.\n","sig":null,"attributes":[{"value":"/ Parallel iterator that moves out of a vector.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/vec.rs","byte_start":566098,"byte_end":566147,"line_start":17,"line_end":17,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":8501},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/vec.rs","byte_start":567683,"byte_end":567688,"line_start":83,"line_end":83,"column_start":12,"column_end":17},"name":"Drain","qualname":"::vec::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":8504},{"krate":0,"index":8505},{"krate":0,"index":8506}],"decl_id":null,"docs":" Draining parallel iterator that moves a range out of a vector, but keeps the total capacity.\n","sig":null,"attributes":[{"value":"/ Draining parallel iterator that moves a range out of a vector, but keeps the total capacity.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/vec.rs","byte_start":567558,"byte_end":567654,"line_start":81,"line_end":81,"column_start":1,"column_end":97}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/split_producer.rs","byte_start":8521,"byte_end":8534,"line_start":29,"line_end":29,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/split_producer.rs","byte_start":10002,"byte_end":10015,"line_start":77,"line_end":77,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/binary_heap.rs","byte_start":14868,"byte_end":14878,"line_start":18,"line_end":18,"column_start":46,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/binary_heap.rs","byte_start":15335,"byte_end":15339,"line_start":40,"line_end":40,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/binary_heap.rs","byte_start":16110,"byte_end":16115,"line_start":76,"line_end":76,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/binary_heap.rs","byte_start":16426,"byte_end":16431,"line_start":91,"line_end":91,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":88},{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/binary_heap.rs","byte_start":16901,"byte_end":16906,"line_start":113,"line_end":113,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/btree_map.rs","byte_start":17977,"byte_end":17981,"line_start":34,"line_end":34,"column_start":44,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/btree_set.rs","byte_start":19492,"byte_end":19496,"line_start":34,"line_end":34,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/hash_map.rs","byte_start":20790,"byte_end":20794,"line_start":36,"line_end":36,"column_start":50,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/hash_set.rs","byte_start":23177,"byte_end":23181,"line_start":36,"line_end":36,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/linked_list.rs","byte_start":24936,"byte_end":24940,"line_start":34,"line_end":34,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/vec_deque.rs","byte_start":26105,"byte_end":26113,"line_start":21,"line_end":21,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/vec_deque.rs","byte_start":26663,"byte_end":26667,"line_start":43,"line_end":43,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/vec_deque.rs","byte_start":28340,"byte_end":28345,"line_start":113,"line_end":113,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/vec_deque.rs","byte_start":28650,"byte_end":28655,"line_start":128,"line_end":128,"column_start":47,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":257},{"krate":0,"index":259},{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/vec_deque.rs","byte_start":29217,"byte_end":29222,"line_start":151,"line_end":151,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/mod.rs","byte_start":13392,"byte_end":13402,"line_start":51,"line_end":51,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/mod.rs","byte_start":13819,"byte_end":13829,"line_start":65,"line_end":65,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":143746,"byte_end":143754,"line_start":263,"line_end":263,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":388},{"krate":0,"index":389}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":144883,"byte_end":144897,"line_start":302,"line_end":302,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":391},{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":147256,"byte_end":147264,"line_start":364,"line_end":364,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":403},{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chain.rs","byte_start":151977,"byte_end":151982,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":437}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chain.rs","byte_start":152211,"byte_end":152216,"line_start":34,"line_end":34,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chain.rs","byte_start":153319,"byte_end":153324,"line_start":67,"line_end":67,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":450},{"krate":0,"index":454},{"krate":0,"index":455}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chain.rs","byte_start":154259,"byte_end":154268,"line_start":103,"line_end":103,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":466},{"krate":0,"index":467}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chain.rs","byte_start":154946,"byte_end":154955,"line_start":128,"line_end":128,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":478},{"krate":0,"index":479}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chain.rs","byte_start":155624,"byte_end":155637,"line_start":158,"line_end":158,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":490}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chain.rs","byte_start":155820,"byte_end":155833,"line_start":168,"line_end":168,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chain.rs","byte_start":157445,"byte_end":157453,"line_start":227,"line_end":227,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":509}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chain.rs","byte_start":157667,"byte_end":157675,"line_start":237,"line_end":237,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chain.rs","byte_start":157971,"byte_end":157979,"line_start":253,"line_end":253,"column_start":34,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chain.rs","byte_start":158100,"byte_end":158108,"line_start":260,"line_end":260,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chunks.rs","byte_start":158878,"byte_end":158884,"line_start":23,"line_end":23,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":534}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chunks.rs","byte_start":159084,"byte_end":159090,"line_start":33,"line_end":33,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chunks.rs","byte_start":159423,"byte_end":159429,"line_start":51,"line_end":51,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":543},{"krate":0,"index":545},{"krate":0,"index":546}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chunks.rs","byte_start":160127,"byte_end":160135,"line_start":83,"line_end":83,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":556},{"krate":0,"index":557}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chunks.rs","byte_start":160708,"byte_end":160721,"line_start":112,"line_end":112,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":571}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chunks.rs","byte_start":161840,"byte_end":161848,"line_start":159,"line_end":159,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":581}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chunks.rs","byte_start":162526,"byte_end":162534,"line_start":185,"line_end":185,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":584}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chunks.rs","byte_start":162695,"byte_end":162703,"line_start":195,"line_end":195,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":587}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/cloned.rs","byte_start":163834,"byte_end":163840,"line_start":18,"line_end":18,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/cloned.rs","byte_start":164028,"byte_end":164034,"line_start":28,"line_end":28,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/cloned.rs","byte_start":164482,"byte_end":164488,"line_start":48,"line_end":48,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":609},{"krate":0,"index":611},{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/cloned.rs","byte_start":165133,"byte_end":165141,"line_start":75,"line_end":75,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":621},{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/cloned.rs","byte_start":165698,"byte_end":165712,"line_start":99,"line_end":99,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":637}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/cloned.rs","byte_start":166608,"byte_end":166622,"line_start":142,"line_end":142,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":644}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/cloned.rs","byte_start":166734,"byte_end":166748,"line_start":148,"line_end":148,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":649},{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/cloned.rs","byte_start":167396,"byte_end":167410,"line_start":177,"line_end":177,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":659},{"krate":0,"index":660}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/cloned.rs","byte_start":167730,"byte_end":167742,"line_start":195,"line_end":195,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":672},{"krate":0,"index":673}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/collect/consumer.rs","byte_start":175237,"byte_end":175252,"line_start":20,"line_end":20,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":714}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/collect/consumer.rs","byte_start":175893,"byte_end":175906,"line_start":39,"line_end":39,"column_start":29,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/collect/consumer.rs","byte_start":175944,"byte_end":175957,"line_start":41,"line_end":41,"column_start":13,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":727},{"krate":0,"index":728}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/collect/consumer.rs","byte_start":176303,"byte_end":176316,"line_start":55,"line_end":55,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":732}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/collect/consumer.rs","byte_start":176623,"byte_end":176638,"line_start":65,"line_end":65,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":739},{"krate":0,"index":740},{"krate":0,"index":741}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/collect/consumer.rs","byte_start":177717,"byte_end":177730,"line_start":101,"line_end":101,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":745},{"krate":0,"index":746},{"krate":0,"index":747},{"krate":0,"index":748}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/collect/consumer.rs","byte_start":178640,"byte_end":178655,"line_start":132,"line_end":132,"column_start":49,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":752},{"krate":0,"index":753}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/collect/consumer.rs","byte_start":179044,"byte_end":179058,"line_start":145,"line_end":145,"column_start":47,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":759}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/collect/mod.rs","byte_start":170697,"byte_end":170704,"line_start":74,"line_end":74,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":791},{"krate":0,"index":792},{"krate":0,"index":794}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/collect/mod.rs","byte_start":173693,"byte_end":173696,"line_start":144,"line_end":144,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":797}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/copied.rs","byte_start":194020,"byte_end":194026,"line_start":18,"line_end":18,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":807}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/copied.rs","byte_start":194214,"byte_end":194220,"line_start":28,"line_end":28,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":815}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/copied.rs","byte_start":194667,"byte_end":194673,"line_start":48,"line_end":48,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":820},{"krate":0,"index":822},{"krate":0,"index":823}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/copied.rs","byte_start":195317,"byte_end":195325,"line_start":75,"line_end":75,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":832},{"krate":0,"index":833}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/copied.rs","byte_start":195881,"byte_end":195895,"line_start":99,"line_end":99,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":847},{"krate":0,"index":848}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/copied.rs","byte_start":196790,"byte_end":196804,"line_start":142,"line_end":142,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":855}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/copied.rs","byte_start":196916,"byte_end":196930,"line_start":148,"line_end":148,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":865}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/copied.rs","byte_start":197577,"byte_end":197591,"line_start":177,"line_end":177,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":870},{"krate":0,"index":871}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/copied.rs","byte_start":197910,"byte_end":197922,"line_start":195,"line_end":195,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":881},{"krate":0,"index":883},{"krate":0,"index":884}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/empty.rs","byte_start":199204,"byte_end":199209,"line_start":35,"line_end":35,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":901}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/empty.rs","byte_start":199299,"byte_end":199304,"line_start":41,"line_end":41,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":904}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/empty.rs","byte_start":199440,"byte_end":199445,"line_start":47,"line_end":47,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":907},{"krate":0,"index":908},{"krate":0,"index":910}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/empty.rs","byte_start":199731,"byte_end":199736,"line_start":62,"line_end":62,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":913},{"krate":0,"index":915},{"krate":0,"index":916}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/empty.rs","byte_start":200216,"byte_end":200229,"line_start":85,"line_end":85,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/enumerate.rs","byte_start":201209,"byte_end":201218,"line_start":18,"line_end":18,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":944}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/enumerate.rs","byte_start":201412,"byte_end":201421,"line_start":28,"line_end":28,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":950}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/enumerate.rs","byte_start":201765,"byte_end":201774,"line_start":46,"line_end":46,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":953},{"krate":0,"index":955},{"krate":0,"index":956}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/enumerate.rs","byte_start":202280,"byte_end":202288,"line_start":68,"line_end":68,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":964},{"krate":0,"index":965}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/enumerate.rs","byte_start":202872,"byte_end":202889,"line_start":92,"line_end":92,"column_start":22,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":975},{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":978}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/extend.rs","byte_start":205878,"byte_end":205888,"line_start":64,"line_end":64,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1048}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/extend.rs","byte_start":206186,"byte_end":206196,"line_start":77,"line_end":77,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1053}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/extend.rs","byte_start":206509,"byte_end":206517,"line_start":90,"line_end":90,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1058}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/extend.rs","byte_start":206853,"byte_end":206861,"line_start":104,"line_end":104,"column_start":59,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1064}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/extend.rs","byte_start":207198,"byte_end":207206,"line_start":118,"line_end":118,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1068}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/extend.rs","byte_start":207501,"byte_end":207509,"line_start":131,"line_end":131,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1073}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/extend.rs","byte_start":207980,"byte_end":207987,"line_start":152,"line_end":152,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1084}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/extend.rs","byte_start":208443,"byte_end":208450,"line_start":168,"line_end":168,"column_start":62,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":1091}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/extend.rs","byte_start":208978,"byte_end":208985,"line_start":191,"line_end":191,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1100}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/extend.rs","byte_start":209318,"byte_end":209325,"line_start":205,"line_end":205,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1106}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/extend.rs","byte_start":209778,"byte_end":209788,"line_start":224,"line_end":224,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1112}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/extend.rs","byte_start":210229,"byte_end":210239,"line_start":241,"line_end":241,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1117}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/extend.rs","byte_start":210644,"byte_end":210650,"line_start":259,"line_end":259,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1121}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/extend.rs","byte_start":211306,"byte_end":211312,"line_start":278,"line_end":278,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1125}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/extend.rs","byte_start":211780,"byte_end":211786,"line_start":293,"line_end":293,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1131}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/extend.rs","byte_start":212048,"byte_end":212054,"line_start":303,"line_end":303,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1134}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/extend.rs","byte_start":212331,"byte_end":212337,"line_start":313,"line_end":313,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1138}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/extend.rs","byte_start":212709,"byte_end":212717,"line_start":327,"line_end":327,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1145}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/extend.rs","byte_start":213004,"byte_end":213012,"line_start":340,"line_end":340,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1150}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/extend.rs","byte_start":213425,"byte_end":213428,"line_start":356,"line_end":356,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1155}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/filter.rs","byte_start":214483,"byte_end":214489,"line_start":18,"line_end":18,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1173}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/filter.rs","byte_start":214649,"byte_end":214655,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1177}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/filter.rs","byte_start":214867,"byte_end":214873,"line_start":34,"line_end":34,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1181},{"krate":0,"index":1182}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/filter.rs","byte_start":215417,"byte_end":215431,"line_start":58,"line_end":58,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1194}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/filter.rs","byte_start":215582,"byte_end":215596,"line_start":64,"line_end":64,"column_start":39,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1200},{"krate":0,"index":1201},{"krate":0,"index":1202},{"krate":0,"index":1203},{"krate":0,"index":1204},{"krate":0,"index":1205}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/filter.rs","byte_start":216340,"byte_end":216354,"line_start":94,"line_end":94,"column_start":48,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1211},{"krate":0,"index":1212}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/filter.rs","byte_start":216737,"byte_end":216749,"line_start":113,"line_end":113,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1224},{"krate":0,"index":1225},{"krate":0,"index":1226},{"krate":0,"index":1227}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/filter_map.rs","byte_start":218025,"byte_end":218034,"line_start":18,"line_end":18,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1241}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/filter_map.rs","byte_start":218241,"byte_end":218250,"line_start":26,"line_end":26,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1245}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/filter_map.rs","byte_start":218440,"byte_end":218449,"line_start":33,"line_end":33,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1250},{"krate":0,"index":1251}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/filter_map.rs","byte_start":219012,"byte_end":219029,"line_start":58,"line_end":58,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1263}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/filter_map.rs","byte_start":219182,"byte_end":219199,"line_start":64,"line_end":64,"column_start":38,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1270},{"krate":0,"index":1271},{"krate":0,"index":1272},{"krate":0,"index":1273},{"krate":0,"index":1274},{"krate":0,"index":1275}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/filter_map.rs","byte_start":219985,"byte_end":220002,"line_start":95,"line_end":95,"column_start":47,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1282},{"krate":0,"index":1283}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/filter_map.rs","byte_start":220403,"byte_end":220418,"line_start":114,"line_end":114,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1296},{"krate":0,"index":1297},{"krate":0,"index":1298},{"krate":0,"index":1299}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/find.rs","byte_start":221588,"byte_end":221600,"line_start":20,"line_end":20,"column_start":13,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1321}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/find.rs","byte_start":221754,"byte_end":221766,"line_start":26,"line_end":26,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1326},{"krate":0,"index":1327},{"krate":0,"index":1328},{"krate":0,"index":1329},{"krate":0,"index":1330},{"krate":0,"index":1331}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/find.rs","byte_start":222351,"byte_end":222363,"line_start":52,"line_end":52,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1336},{"krate":0,"index":1337}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/find.rs","byte_start":222723,"byte_end":222733,"line_start":72,"line_end":72,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1349},{"krate":0,"index":1350},{"krate":0,"index":1351},{"krate":0,"index":1357},{"krate":0,"index":1358}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/find.rs","byte_start":223760,"byte_end":223771,"line_start":116,"line_end":116,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1363}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/find_first_last/mod.rs","byte_start":226293,"byte_end":226305,"line_start":69,"line_end":69,"column_start":13,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1395},{"krate":0,"index":1396}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/find_first_last/mod.rs","byte_start":226855,"byte_end":226867,"line_start":88,"line_end":88,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1401},{"krate":0,"index":1402},{"krate":0,"index":1403},{"krate":0,"index":1404},{"krate":0,"index":1405},{"krate":0,"index":1406}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/find_first_last/mod.rs","byte_start":227933,"byte_end":227945,"line_start":129,"line_end":129,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1411},{"krate":0,"index":1412}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/find_first_last/mod.rs","byte_start":229503,"byte_end":229513,"line_start":174,"line_end":174,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1426},{"krate":0,"index":1427},{"krate":0,"index":1428},{"krate":0,"index":1429}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/find_first_last/mod.rs","byte_start":231221,"byte_end":231232,"line_start":231,"line_end":231,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1434}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flat_map.rs","byte_start":232052,"byte_end":232059,"line_start":18,"line_end":18,"column_start":48,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1448}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flat_map.rs","byte_start":232238,"byte_end":232245,"line_start":24,"line_end":24,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1452}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flat_map.rs","byte_start":232426,"byte_end":232433,"line_start":31,"line_end":31,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1457},{"krate":0,"index":1458}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flat_map.rs","byte_start":232999,"byte_end":233014,"line_start":56,"line_end":56,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1470}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flat_map.rs","byte_start":233159,"byte_end":233174,"line_start":62,"line_end":62,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1477},{"krate":0,"index":1478},{"krate":0,"index":1479},{"krate":0,"index":1480},{"krate":0,"index":1481},{"krate":0,"index":1482}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flat_map.rs","byte_start":233966,"byte_end":233981,"line_start":94,"line_end":94,"column_start":47,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1489},{"krate":0,"index":1490}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flat_map.rs","byte_start":234421,"byte_end":234434,"line_start":115,"line_end":115,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1505},{"krate":0,"index":1506},{"krate":0,"index":1507},{"krate":0,"index":1508}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flat_map_iter.rs","byte_start":236026,"byte_end":236037,"line_start":18,"line_end":18,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1522}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flat_map_iter.rs","byte_start":236246,"byte_end":236257,"line_start":26,"line_end":26,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1526}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flat_map_iter.rs","byte_start":236446,"byte_end":236457,"line_start":33,"line_end":33,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1531},{"krate":0,"index":1532}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flat_map_iter.rs","byte_start":237043,"byte_end":237062,"line_start":59,"line_end":59,"column_start":16,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1544}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flat_map_iter.rs","byte_start":237211,"byte_end":237230,"line_start":65,"line_end":65,"column_start":38,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1551},{"krate":0,"index":1552},{"krate":0,"index":1553},{"krate":0,"index":1554},{"krate":0,"index":1555},{"krate":0,"index":1556}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flat_map_iter.rs","byte_start":238013,"byte_end":238032,"line_start":96,"line_end":96,"column_start":47,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":1563},{"krate":0,"index":1564}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flat_map_iter.rs","byte_start":238444,"byte_end":238461,"line_start":116,"line_end":116,"column_start":36,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1577},{"krate":0,"index":1578},{"krate":0,"index":1579},{"krate":0,"index":1581},{"krate":0,"index":1582}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flatten.rs","byte_start":239678,"byte_end":239685,"line_start":15,"line_end":15,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1588}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flatten.rs","byte_start":239903,"byte_end":239910,"line_start":26,"line_end":26,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1591},{"krate":0,"index":1592}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flatten.rs","byte_start":240422,"byte_end":240437,"line_start":49,"line_end":49,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1599}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flatten.rs","byte_start":240542,"byte_end":240557,"line_start":55,"line_end":55,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1603},{"krate":0,"index":1604},{"krate":0,"index":1605},{"krate":0,"index":1606},{"krate":0,"index":1607},{"krate":0,"index":1608}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flatten.rs","byte_start":241240,"byte_end":241255,"line_start":85,"line_end":85,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1612},{"krate":0,"index":1613}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flatten.rs","byte_start":241613,"byte_end":241626,"line_start":104,"line_end":104,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1622},{"krate":0,"index":1623},{"krate":0,"index":1624},{"krate":0,"index":1625}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flatten_iter.rs","byte_start":243042,"byte_end":243053,"line_start":15,"line_end":15,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1631}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flatten_iter.rs","byte_start":243314,"byte_end":243325,"line_start":27,"line_end":27,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1634},{"krate":0,"index":1635}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flatten_iter.rs","byte_start":243872,"byte_end":243891,"line_start":51,"line_end":51,"column_start":9,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1642}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flatten_iter.rs","byte_start":244000,"byte_end":244019,"line_start":57,"line_end":57,"column_start":28,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1646},{"krate":0,"index":1647},{"krate":0,"index":1648},{"krate":0,"index":1649},{"krate":0,"index":1650},{"krate":0,"index":1651}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flatten_iter.rs","byte_start":244693,"byte_end":244712,"line_start":86,"line_end":86,"column_start":37,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1655},{"krate":0,"index":1656}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flatten_iter.rs","byte_start":245042,"byte_end":245059,"line_start":104,"line_end":104,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1663},{"krate":0,"index":1664},{"krate":0,"index":1665},{"krate":0,"index":1667},{"krate":0,"index":1668}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/fold.rs","byte_start":245738,"byte_end":245742,"line_start":6,"line_end":6,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1684}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/fold.rs","byte_start":246539,"byte_end":246543,"line_start":35,"line_end":35,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1689}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/fold.rs","byte_start":246733,"byte_end":246737,"line_start":41,"line_end":41,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1695},{"krate":0,"index":1696}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/fold.rs","byte_start":247346,"byte_end":247358,"line_start":69,"line_end":69,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1713},{"krate":0,"index":1714},{"krate":0,"index":1715},{"krate":0,"index":1716},{"krate":0,"index":1717},{"krate":0,"index":1718}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/fold.rs","byte_start":248214,"byte_end":248226,"line_start":105,"line_end":105,"column_start":51,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1726},{"krate":0,"index":1727}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/fold.rs","byte_start":248695,"byte_end":248705,"line_start":130,"line_end":130,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1742},{"krate":0,"index":1743},{"krate":0,"index":1744},{"krate":0,"index":1752},{"krate":0,"index":1753}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/fold.rs","byte_start":249865,"byte_end":249873,"line_start":182,"line_end":182,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1758}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/fold.rs","byte_start":250662,"byte_end":250670,"line_start":210,"line_end":210,"column_start":58,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":1763}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/fold.rs","byte_start":250924,"byte_end":250932,"line_start":219,"line_end":219,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1768},{"krate":0,"index":1769}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/fold.rs","byte_start":251500,"byte_end":251516,"line_start":246,"line_end":246,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1785},{"krate":0,"index":1786},{"krate":0,"index":1787},{"krate":0,"index":1788},{"krate":0,"index":1789},{"krate":0,"index":1790}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/fold.rs","byte_start":252434,"byte_end":252450,"line_start":285,"line_end":285,"column_start":47,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1797},{"krate":0,"index":1798}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/for_each.rs","byte_start":253179,"byte_end":253194,"line_start":19,"line_end":19,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1817},{"krate":0,"index":1818},{"krate":0,"index":1819},{"krate":0,"index":1820},{"krate":0,"index":1821},{"krate":0,"index":1822}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/for_each.rs","byte_start":253590,"byte_end":253605,"line_start":40,"line_end":40,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1827},{"krate":0,"index":1828},{"krate":0,"index":1829},{"krate":0,"index":1831},{"krate":0,"index":1832}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/for_each.rs","byte_start":254029,"byte_end":254044,"line_start":66,"line_end":66,"column_start":41,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1837},{"krate":0,"index":1838}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/from_par_iter.rs","byte_start":254930,"byte_end":254933,"line_start":22,"line_end":22,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1894}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/from_par_iter.rs","byte_start":255203,"byte_end":255211,"line_start":35,"line_end":35,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1898}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/from_par_iter.rs","byte_start":255568,"byte_end":255578,"line_start":49,"line_end":49,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1902}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/from_par_iter.rs","byte_start":255888,"byte_end":255898,"line_start":63,"line_end":63,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1906}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/from_par_iter.rs","byte_start":256362,"byte_end":256369,"line_start":79,"line_end":79,"column_start":48,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1912}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/from_par_iter.rs","byte_start":256904,"byte_end":256912,"line_start":97,"line_end":97,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1917}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/from_par_iter.rs","byte_start":257212,"byte_end":257219,"line_start":111,"line_end":111,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1922}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/from_par_iter.rs","byte_start":257542,"byte_end":257550,"line_start":125,"line_end":125,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1926}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/from_par_iter.rs","byte_start":257829,"byte_end":257835,"line_start":138,"line_end":138,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1929}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/from_par_iter.rs","byte_start":258097,"byte_end":258103,"line_start":148,"line_end":148,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1933}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/from_par_iter.rs","byte_start":258371,"byte_end":258377,"line_start":158,"line_end":158,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1937}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/from_par_iter.rs","byte_start":258641,"byte_end":258647,"line_start":168,"line_end":168,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1940}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/from_par_iter.rs","byte_start":258918,"byte_end":258924,"line_start":178,"line_end":178,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1944}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/from_par_iter.rs","byte_start":259368,"byte_end":259371,"line_start":192,"line_end":192,"column_start":52,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1950}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/inspect.rs","byte_start":260905,"byte_end":260912,"line_start":21,"line_end":21,"column_start":48,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1971}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/inspect.rs","byte_start":261073,"byte_end":261080,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1975}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/inspect.rs","byte_start":261296,"byte_end":261303,"line_start":37,"line_end":37,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1979},{"krate":0,"index":1980},{"krate":0,"index":1982}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/inspect.rs","byte_start":261763,"byte_end":261770,"line_start":57,"line_end":57,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1986},{"krate":0,"index":1988},{"krate":0,"index":1989}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/inspect.rs","byte_start":262512,"byte_end":262520,"line_start":88,"line_end":88,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2000},{"krate":0,"index":2001}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/inspect.rs","byte_start":263191,"byte_end":263206,"line_start":116,"line_end":116,"column_start":29,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2013},{"krate":0,"index":2014},{"krate":0,"index":2015},{"krate":0,"index":2016},{"krate":0,"index":2017},{"krate":0,"index":2018},{"krate":0,"index":2019}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/inspect.rs","byte_start":264416,"byte_end":264431,"line_start":170,"line_end":170,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2031}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/inspect.rs","byte_start":264581,"byte_end":264596,"line_start":176,"line_end":176,"column_start":35,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2037},{"krate":0,"index":2038},{"krate":0,"index":2039},{"krate":0,"index":2040},{"krate":0,"index":2041},{"krate":0,"index":2042}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/inspect.rs","byte_start":265339,"byte_end":265354,"line_start":206,"line_end":206,"column_start":44,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2048},{"krate":0,"index":2049}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/inspect.rs","byte_start":265733,"byte_end":265746,"line_start":225,"line_end":225,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2061},{"krate":0,"index":2062},{"krate":0,"index":2063},{"krate":0,"index":2065},{"krate":0,"index":2066}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/interleave.rs","byte_start":267070,"byte_end":267080,"line_start":23,"line_end":23,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2079}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/interleave.rs","byte_start":267332,"byte_end":267342,"line_start":34,"line_end":34,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2083},{"krate":0,"index":2084},{"krate":0,"index":2086}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/interleave.rs","byte_start":267719,"byte_end":267729,"line_start":53,"line_end":53,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2090},{"krate":0,"index":2092},{"krate":0,"index":2093}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/interleave.rs","byte_start":268625,"byte_end":268634,"line_start":90,"line_end":90,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2106},{"krate":0,"index":2107}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/interleave.rs","byte_start":269444,"byte_end":269453,"line_start":119,"line_end":119,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2120},{"krate":0,"index":2121}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/interleave.rs","byte_start":270234,"byte_end":270252,"line_start":155,"line_end":155,"column_start":12,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2134}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/interleave.rs","byte_start":270572,"byte_end":270590,"line_start":171,"line_end":171,"column_start":25,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2138},{"krate":0,"index":2139},{"krate":0,"index":2140},{"krate":0,"index":2141},{"krate":0,"index":2142},{"krate":0,"index":2143}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/interleave.rs","byte_start":273455,"byte_end":273468,"line_start":267,"line_end":267,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2154},{"krate":0,"index":2155},{"krate":0,"index":2156}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/interleave.rs","byte_start":274601,"byte_end":274614,"line_start":306,"line_end":306,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2160}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/interleave.rs","byte_start":275175,"byte_end":275188,"line_start":327,"line_end":327,"column_start":34,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2164}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/interleave_shortest.rs","byte_start":276115,"byte_end":276133,"line_start":23,"line_end":23,"column_start":12,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2171}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/interleave_shortest.rs","byte_start":276775,"byte_end":276793,"line_start":44,"line_end":44,"column_start":33,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2175},{"krate":0,"index":2176},{"krate":0,"index":2178}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/interleave_shortest.rs","byte_start":277170,"byte_end":277188,"line_start":63,"line_end":63,"column_start":40,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2182},{"krate":0,"index":2184},{"krate":0,"index":2185}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/intersperse.rs","byte_start":278290,"byte_end":278301,"line_start":23,"line_end":23,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2202}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/intersperse.rs","byte_start":278532,"byte_end":278543,"line_start":34,"line_end":34,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2205},{"krate":0,"index":2206},{"krate":0,"index":2208}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/intersperse.rs","byte_start":279073,"byte_end":279084,"line_start":57,"line_end":57,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2211},{"krate":0,"index":2213},{"krate":0,"index":2214}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/intersperse.rs","byte_start":279991,"byte_end":279999,"line_start":96,"line_end":96,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2225},{"krate":0,"index":2226}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/intersperse.rs","byte_start":280566,"byte_end":280585,"line_start":124,"line_end":124,"column_start":9,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2236}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/intersperse.rs","byte_start":280826,"byte_end":280845,"line_start":138,"line_end":138,"column_start":22,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2239},{"krate":0,"index":2240},{"krate":0,"index":2241},{"krate":0,"index":2242},{"krate":0,"index":2243},{"krate":0,"index":2244},{"krate":0,"index":2245}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/intersperse.rs","byte_start":283020,"byte_end":283035,"line_start":217,"line_end":217,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2255},{"krate":0,"index":2256},{"krate":0,"index":2257}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/intersperse.rs","byte_start":283807,"byte_end":283822,"line_start":246,"line_end":246,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2260}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/intersperse.rs","byte_start":284470,"byte_end":284485,"line_start":268,"line_end":268,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2263}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/intersperse.rs","byte_start":284833,"byte_end":284852,"line_start":285,"line_end":285,"column_start":12,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2273}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/intersperse.rs","byte_start":285077,"byte_end":285096,"line_start":298,"line_end":298,"column_start":28,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2277},{"krate":0,"index":2278},{"krate":0,"index":2279},{"krate":0,"index":2280},{"krate":0,"index":2281},{"krate":0,"index":2282}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/intersperse.rs","byte_start":286174,"byte_end":286193,"line_start":335,"line_end":335,"column_start":37,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2286},{"krate":0,"index":2287}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/intersperse.rs","byte_start":286733,"byte_end":286750,"line_start":361,"line_end":361,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2297},{"krate":0,"index":2298},{"krate":0,"index":2299},{"krate":0,"index":2302},{"krate":0,"index":2303}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/len.rs","byte_start":288473,"byte_end":288479,"line_start":17,"line_end":17,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2312}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/len.rs","byte_start":288684,"byte_end":288690,"line_start":27,"line_end":27,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2315},{"krate":0,"index":2316},{"krate":0,"index":2318}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/len.rs","byte_start":289025,"byte_end":289031,"line_start":45,"line_end":45,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2321},{"krate":0,"index":2323},{"krate":0,"index":2324}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/len.rs","byte_start":289609,"byte_end":289617,"line_start":71,"line_end":71,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2333},{"krate":0,"index":2334}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/len.rs","byte_start":290252,"byte_end":290266,"line_start":98,"line_end":98,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2342},{"krate":0,"index":2343},{"krate":0,"index":2344},{"krate":0,"index":2345},{"krate":0,"index":2346},{"krate":0,"index":2347},{"krate":0,"index":2348}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/len.rs","byte_start":291558,"byte_end":291564,"line_start":151,"line_end":151,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2352}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/len.rs","byte_start":291769,"byte_end":291775,"line_start":161,"line_end":161,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2355},{"krate":0,"index":2356},{"krate":0,"index":2358}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/len.rs","byte_start":292110,"byte_end":292116,"line_start":179,"line_end":179,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2361},{"krate":0,"index":2363},{"krate":0,"index":2364}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/len.rs","byte_start":292694,"byte_end":292702,"line_start":205,"line_end":205,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2373},{"krate":0,"index":2374}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/len.rs","byte_start":293337,"byte_end":293351,"line_start":232,"line_end":232,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2382},{"krate":0,"index":2383},{"krate":0,"index":2384},{"krate":0,"index":2385},{"krate":0,"index":2386},{"krate":0,"index":2387},{"krate":0,"index":2388}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map.rs","byte_start":294718,"byte_end":294721,"line_start":20,"line_end":20,"column_start":48,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2406}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map.rs","byte_start":294878,"byte_end":294881,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2410}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map.rs","byte_start":295084,"byte_end":295087,"line_start":36,"line_end":36,"column_start":36,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2415},{"krate":0,"index":2416},{"krate":0,"index":2418}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map.rs","byte_start":295561,"byte_end":295564,"line_start":57,"line_end":57,"column_start":43,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2423},{"krate":0,"index":2425},{"krate":0,"index":2426}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map.rs","byte_start":296306,"byte_end":296314,"line_start":89,"line_end":89,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2438},{"krate":0,"index":2439}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map.rs","byte_start":296993,"byte_end":297004,"line_start":118,"line_end":118,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2452},{"krate":0,"index":2453},{"krate":0,"index":2454},{"krate":0,"index":2455},{"krate":0,"index":2456},{"krate":0,"index":2457},{"krate":0,"index":2458}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map.rs","byte_start":298176,"byte_end":298187,"line_start":172,"line_end":172,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2470}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map.rs","byte_start":298328,"byte_end":298339,"line_start":178,"line_end":178,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2477},{"krate":0,"index":2478},{"krate":0,"index":2479},{"krate":0,"index":2480},{"krate":0,"index":2481},{"krate":0,"index":2482}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map.rs","byte_start":299078,"byte_end":299089,"line_start":209,"line_end":209,"column_start":47,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2489},{"krate":0,"index":2490}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map.rs","byte_start":299480,"byte_end":299489,"line_start":229,"line_end":229,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2503},{"krate":0,"index":2504},{"krate":0,"index":2505},{"krate":0,"index":2507},{"krate":0,"index":2508}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map_with.rs","byte_start":300726,"byte_end":300733,"line_start":20,"line_end":20,"column_start":58,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":2523}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map_with.rs","byte_start":300965,"byte_end":300972,"line_start":29,"line_end":29,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2528}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map_with.rs","byte_start":301204,"byte_end":301211,"line_start":39,"line_end":39,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2534},{"krate":0,"index":2535},{"krate":0,"index":2537}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map_with.rs","byte_start":301727,"byte_end":301734,"line_start":61,"line_end":61,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2543},{"krate":0,"index":2545},{"krate":0,"index":2546}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map_with.rs","byte_start":302579,"byte_end":302587,"line_start":96,"line_end":96,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2561},{"krate":0,"index":2562}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map_with.rs","byte_start":303370,"byte_end":303385,"line_start":128,"line_end":128,"column_start":35,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2578},{"krate":0,"index":2579},{"krate":0,"index":2580},{"krate":0,"index":2581},{"krate":0,"index":2582},{"krate":0,"index":2583},{"krate":0,"index":2584}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map_with.rs","byte_start":304718,"byte_end":304729,"line_start":188,"line_end":188,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2600},{"krate":0,"index":2601},{"krate":0,"index":2602}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map_with.rs","byte_start":305110,"byte_end":305121,"line_start":206,"line_end":206,"column_start":46,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2609}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map_with.rs","byte_start":305412,"byte_end":305423,"line_start":218,"line_end":218,"column_start":44,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map_with.rs","byte_start":305737,"byte_end":305752,"line_start":235,"line_end":235,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2629}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map_with.rs","byte_start":305918,"byte_end":305933,"line_start":241,"line_end":241,"column_start":41,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2637},{"krate":0,"index":2638},{"krate":0,"index":2639},{"krate":0,"index":2640},{"krate":0,"index":2641},{"krate":0,"index":2642}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map_with.rs","byte_start":306777,"byte_end":306792,"line_start":274,"line_end":274,"column_start":50,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":2650},{"krate":0,"index":2651}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map_with.rs","byte_start":307252,"byte_end":307265,"line_start":296,"line_end":296,"column_start":39,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2667},{"krate":0,"index":2668},{"krate":0,"index":2669},{"krate":0,"index":2679},{"krate":0,"index":2680}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map_with.rs","byte_start":308796,"byte_end":308803,"line_start":352,"line_end":352,"column_start":54,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2685}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map_with.rs","byte_start":308976,"byte_end":308983,"line_start":358,"line_end":358,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2690}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map_with.rs","byte_start":309227,"byte_end":309234,"line_start":368,"line_end":368,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2697},{"krate":0,"index":2698},{"krate":0,"index":2700}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map_with.rs","byte_start":309774,"byte_end":309781,"line_start":390,"line_end":390,"column_start":52,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2707},{"krate":0,"index":2709},{"krate":0,"index":2710}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map_with.rs","byte_start":310656,"byte_end":310664,"line_start":425,"line_end":425,"column_start":60,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":2726},{"krate":0,"index":2727}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map_with.rs","byte_start":311474,"byte_end":311489,"line_start":457,"line_end":457,"column_start":41,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2744},{"krate":0,"index":2745},{"krate":0,"index":2746},{"krate":0,"index":2747},{"krate":0,"index":2748},{"krate":0,"index":2749},{"krate":0,"index":2750}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map_with.rs","byte_start":312939,"byte_end":312954,"line_start":520,"line_end":520,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2765}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map_with.rs","byte_start":313136,"byte_end":313151,"line_start":526,"line_end":526,"column_start":47,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2774},{"krate":0,"index":2775},{"krate":0,"index":2776},{"krate":0,"index":2777},{"krate":0,"index":2778},{"krate":0,"index":2779}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map_with.rs","byte_start":314007,"byte_end":314022,"line_start":559,"line_end":559,"column_start":56,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":2788},{"krate":0,"index":2789}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/noop.rs","byte_start":323400,"byte_end":323412,"line_start":5,"line_end":5,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2803},{"krate":0,"index":2804},{"krate":0,"index":2805},{"krate":0,"index":2806},{"krate":0,"index":2807},{"krate":0,"index":2808}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/noop.rs","byte_start":323756,"byte_end":323768,"line_start":23,"line_end":23,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2811},{"krate":0,"index":2812},{"krate":0,"index":2813},{"krate":0,"index":2815},{"krate":0,"index":2816}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/noop.rs","byte_start":324124,"byte_end":324136,"line_start":45,"line_end":45,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2819},{"krate":0,"index":2820}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/noop.rs","byte_start":324330,"byte_end":324341,"line_start":57,"line_end":57,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2824}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/once.rs","byte_start":325309,"byte_end":325313,"line_start":34,"line_end":34,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2832},{"krate":0,"index":2833},{"krate":0,"index":2835}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/once.rs","byte_start":325599,"byte_end":325603,"line_start":49,"line_end":49,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2838},{"krate":0,"index":2840},{"krate":0,"index":2841}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/panic_fuse.rs","byte_start":326790,"byte_end":326794,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2858}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/panic_fuse.rs","byte_start":326952,"byte_end":326956,"line_start":32,"line_end":32,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2861}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/panic_fuse.rs","byte_start":327066,"byte_end":327075,"line_start":39,"line_end":39,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2864}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/panic_fuse.rs","byte_start":327270,"byte_end":327279,"line_start":49,"line_end":49,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2867},{"krate":0,"index":2868},{"krate":0,"index":2870}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/panic_fuse.rs","byte_start":327789,"byte_end":327798,"line_start":72,"line_end":72,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2873},{"krate":0,"index":2875},{"krate":0,"index":2876}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/panic_fuse.rs","byte_start":328498,"byte_end":328506,"line_start":102,"line_end":102,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2884},{"krate":0,"index":2885}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/panic_fuse.rs","byte_start":329215,"byte_end":329232,"line_start":131,"line_end":131,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2895},{"krate":0,"index":2896},{"krate":0,"index":2897},{"krate":0,"index":2898},{"krate":0,"index":2899},{"krate":0,"index":2900},{"krate":0,"index":2901}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/panic_fuse.rs","byte_start":330330,"byte_end":330343,"line_start":183,"line_end":183,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2911},{"krate":0,"index":2912},{"krate":0,"index":2913}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/panic_fuse.rs","byte_start":330690,"byte_end":330703,"line_start":202,"line_end":202,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2917}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/panic_fuse.rs","byte_start":330954,"byte_end":330967,"line_start":215,"line_end":215,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2921}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/panic_fuse.rs","byte_start":331278,"byte_end":331295,"line_start":232,"line_end":232,"column_start":32,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2931},{"krate":0,"index":2932},{"krate":0,"index":2933},{"krate":0,"index":2934},{"krate":0,"index":2935},{"krate":0,"index":2936}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/panic_fuse.rs","byte_start":332253,"byte_end":332270,"line_start":270,"line_end":270,"column_start":41,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2941},{"krate":0,"index":2942}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/panic_fuse.rs","byte_start":332749,"byte_end":332764,"line_start":294,"line_end":294,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2952},{"krate":0,"index":2953},{"krate":0,"index":2954},{"krate":0,"index":2961},{"krate":0,"index":2962}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/panic_fuse.rs","byte_start":333613,"byte_end":333629,"line_start":335,"line_end":335,"column_start":31,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2972}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/par_bridge.rs","byte_start":335538,"byte_end":335539,"line_start":51,"line_end":51,"column_start":45,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3027}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/par_bridge.rs","byte_start":336049,"byte_end":336059,"line_start":71,"line_end":71,"column_start":50,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3030},{"krate":0,"index":3031}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/par_bridge.rs","byte_start":337057,"byte_end":337077,"line_start":107,"line_end":107,"column_start":41,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":3043}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/par_bridge.rs","byte_start":337369,"byte_end":337389,"line_start":118,"line_end":118,"column_start":60,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":3047},{"krate":0,"index":3048},{"krate":0,"index":3049}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/positions.rs","byte_start":341354,"byte_end":341363,"line_start":20,"line_end":20,"column_start":55,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":3064}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/positions.rs","byte_start":341552,"byte_end":341561,"line_start":28,"line_end":28,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3068}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/positions.rs","byte_start":341785,"byte_end":341794,"line_start":38,"line_end":38,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3072},{"krate":0,"index":3073}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/positions.rs","byte_start":342360,"byte_end":342377,"line_start":63,"line_end":63,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3086}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/positions.rs","byte_start":342595,"byte_end":342612,"line_start":73,"line_end":73,"column_start":35,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3092},{"krate":0,"index":3093},{"krate":0,"index":3094},{"krate":0,"index":3095},{"krate":0,"index":3096},{"krate":0,"index":3097}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/positions.rs","byte_start":343511,"byte_end":343526,"line_start":110,"line_end":110,"column_start":29,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3109},{"krate":0,"index":3110},{"krate":0,"index":3111},{"krate":0,"index":3112}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/product.rs","byte_start":344670,"byte_end":344685,"line_start":23,"line_end":23,"column_start":31,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/product.rs","byte_start":344707,"byte_end":344722,"line_start":25,"line_end":25,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3140}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/product.rs","byte_start":344871,"byte_end":344886,"line_start":33,"line_end":33,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3144},{"krate":0,"index":3145},{"krate":0,"index":3146},{"krate":0,"index":3147},{"krate":0,"index":3148},{"krate":0,"index":3149}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/product.rs","byte_start":345436,"byte_end":345451,"line_start":60,"line_end":60,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3153},{"krate":0,"index":3154}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/product.rs","byte_start":345683,"byte_end":345698,"line_start":73,"line_end":73,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3157}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/product.rs","byte_start":345883,"byte_end":345896,"line_start":86,"line_end":86,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3164},{"krate":0,"index":3165},{"krate":0,"index":3166},{"krate":0,"index":3168},{"krate":0,"index":3169}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/reduce.rs","byte_start":346911,"byte_end":346925,"line_start":23,"line_end":23,"column_start":26,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/reduce.rs","byte_start":346967,"byte_end":346981,"line_start":25,"line_end":25,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3194}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/reduce.rs","byte_start":347083,"byte_end":347097,"line_start":31,"line_end":31,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3200},{"krate":0,"index":3201},{"krate":0,"index":3202},{"krate":0,"index":3203},{"krate":0,"index":3204},{"krate":0,"index":3205}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/reduce.rs","byte_start":347624,"byte_end":347638,"line_start":57,"line_end":57,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":3211},{"krate":0,"index":3212}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/reduce.rs","byte_start":347887,"byte_end":347901,"line_start":72,"line_end":72,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3218}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/reduce.rs","byte_start":348142,"byte_end":348154,"line_start":86,"line_end":86,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3229},{"krate":0,"index":3230},{"krate":0,"index":3231},{"krate":0,"index":3233},{"krate":0,"index":3234}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/repeat.rs","byte_start":349556,"byte_end":349562,"line_start":30,"line_end":30,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3248},{"krate":0,"index":3249}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/repeat.rs","byte_start":350414,"byte_end":350420,"line_start":57,"line_end":57,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3253},{"krate":0,"index":3254}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/repeat.rs","byte_start":350870,"byte_end":350884,"line_start":79,"line_end":79,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":3261},{"krate":0,"index":3262},{"krate":0,"index":3263}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/repeat.rs","byte_start":351935,"byte_end":351942,"line_start":126,"line_end":126,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3269},{"krate":0,"index":3270},{"krate":0,"index":3272}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/repeat.rs","byte_start":352260,"byte_end":352267,"line_start":144,"line_end":144,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3275},{"krate":0,"index":3277},{"krate":0,"index":3279}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/repeat.rs","byte_start":352879,"byte_end":352894,"line_start":176,"line_end":176,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3286},{"krate":0,"index":3287},{"krate":0,"index":3288},{"krate":0,"index":3289}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/repeat.rs","byte_start":353691,"byte_end":353695,"line_start":210,"line_end":210,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3296},{"krate":0,"index":3297},{"krate":0,"index":3298}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/repeat.rs","byte_start":354073,"byte_end":354077,"line_start":229,"line_end":229,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3301}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/repeat.rs","byte_start":354206,"byte_end":354210,"line_start":236,"line_end":236,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3304}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/rev.rs","byte_start":354789,"byte_end":354792,"line_start":16,"line_end":16,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":3313}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/rev.rs","byte_start":354974,"byte_end":354977,"line_start":26,"line_end":26,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3316},{"krate":0,"index":3317},{"krate":0,"index":3319}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/rev.rs","byte_start":355312,"byte_end":355315,"line_start":44,"line_end":44,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3322},{"krate":0,"index":3324},{"krate":0,"index":3325}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/rev.rs","byte_start":355885,"byte_end":355893,"line_start":68,"line_end":68,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3334},{"krate":0,"index":3335}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/rev.rs","byte_start":356408,"byte_end":356419,"line_start":92,"line_end":92,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3343},{"krate":0,"index":3344},{"krate":0,"index":3345},{"krate":0,"index":3346},{"krate":0,"index":3347},{"krate":0,"index":3348}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/skip.rs","byte_start":357624,"byte_end":357628,"line_start":18,"line_end":18,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3360}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/skip.rs","byte_start":357861,"byte_end":357865,"line_start":29,"line_end":29,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3363},{"krate":0,"index":3364},{"krate":0,"index":3366}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/skip.rs","byte_start":358200,"byte_end":358204,"line_start":47,"line_end":47,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3369},{"krate":0,"index":3370},{"krate":0,"index":3372}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/skip.rs","byte_start":358785,"byte_end":358793,"line_start":73,"line_end":73,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3381},{"krate":0,"index":3382}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":363626,"byte_end":363631,"line_start":124,"line_end":124,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3400}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":363811,"byte_end":363816,"line_start":130,"line_end":130,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3404},{"krate":0,"index":3405}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":364304,"byte_end":364317,"line_start":154,"line_end":154,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3417},{"krate":0,"index":3418},{"krate":0,"index":3420}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/sum.rs","byte_start":365237,"byte_end":365248,"line_start":23,"line_end":23,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/sum.rs","byte_start":365270,"byte_end":365281,"line_start":25,"line_end":25,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3449}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/sum.rs","byte_start":365422,"byte_end":365433,"line_start":33,"line_end":33,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3453},{"krate":0,"index":3454},{"krate":0,"index":3455},{"krate":0,"index":3456},{"krate":0,"index":3457},{"krate":0,"index":3458}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/sum.rs","byte_start":365900,"byte_end":365911,"line_start":56,"line_end":56,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3462},{"krate":0,"index":3463}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/sum.rs","byte_start":366127,"byte_end":366138,"line_start":69,"line_end":69,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3466}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/sum.rs","byte_start":366311,"byte_end":366320,"line_start":82,"line_end":82,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3473},{"krate":0,"index":3474},{"krate":0,"index":3475},{"krate":0,"index":3477},{"krate":0,"index":3478}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/take.rs","byte_start":367305,"byte_end":367309,"line_start":17,"line_end":17,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3487}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/take.rs","byte_start":367542,"byte_end":367546,"line_start":28,"line_end":28,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3490},{"krate":0,"index":3491},{"krate":0,"index":3493}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/take.rs","byte_start":367881,"byte_end":367885,"line_start":46,"line_end":46,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3496},{"krate":0,"index":3497},{"krate":0,"index":3499}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/take.rs","byte_start":368448,"byte_end":368456,"line_start":72,"line_end":72,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3508},{"krate":0,"index":3509}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/try_fold.rs","byte_start":368970,"byte_end":368977,"line_start":8,"line_end":8,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3532}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/try_fold.rs","byte_start":369879,"byte_end":369886,"line_start":39,"line_end":39,"column_start":55,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":3538}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/try_fold.rs","byte_start":370082,"byte_end":370089,"line_start":45,"line_end":45,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3544},{"krate":0,"index":3545}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/try_fold.rs","byte_start":370785,"byte_end":370800,"line_start":75,"line_end":75,"column_start":42,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3564},{"krate":0,"index":3565},{"krate":0,"index":3566},{"krate":0,"index":3567},{"krate":0,"index":3568},{"krate":0,"index":3569}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/try_fold.rs","byte_start":371691,"byte_end":371706,"line_start":111,"line_end":111,"column_start":51,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":3577},{"krate":0,"index":3578}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/try_fold.rs","byte_start":372224,"byte_end":372237,"line_start":136,"line_end":136,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3593},{"krate":0,"index":3594},{"krate":0,"index":3595},{"krate":0,"index":3596}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/try_fold.rs","byte_start":372965,"byte_end":372976,"line_start":167,"line_end":167,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3601}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/try_fold.rs","byte_start":373817,"byte_end":373828,"line_start":196,"line_end":196,"column_start":56,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":3606}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/try_fold.rs","byte_start":374109,"byte_end":374120,"line_start":208,"line_end":208,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3611},{"krate":0,"index":3612}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/try_fold.rs","byte_start":374730,"byte_end":374749,"line_start":236,"line_end":236,"column_start":38,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3628},{"krate":0,"index":3629},{"krate":0,"index":3630},{"krate":0,"index":3631},{"krate":0,"index":3632},{"krate":0,"index":3633}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/try_fold.rs","byte_start":375712,"byte_end":375731,"line_start":276,"line_end":276,"column_start":47,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":3640},{"krate":0,"index":3641}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/try_reduce.rs","byte_start":376807,"byte_end":376824,"line_start":29,"line_end":29,"column_start":26,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/try_reduce.rs","byte_start":376866,"byte_end":376883,"line_start":31,"line_end":31,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3677}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/try_reduce.rs","byte_start":376985,"byte_end":377002,"line_start":37,"line_end":37,"column_start":36,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3683},{"krate":0,"index":3684},{"krate":0,"index":3685},{"krate":0,"index":3686},{"krate":0,"index":3687},{"krate":0,"index":3688}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/try_reduce.rs","byte_start":377616,"byte_end":377633,"line_start":64,"line_end":64,"column_start":45,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":3694},{"krate":0,"index":3695}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/try_reduce.rs","byte_start":377900,"byte_end":377917,"line_start":79,"line_end":79,"column_start":35,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3701}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/try_reduce.rs","byte_start":378393,"byte_end":378408,"line_start":98,"line_end":98,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3713},{"krate":0,"index":3714},{"krate":0,"index":3715},{"krate":0,"index":3716}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/try_reduce_with.rs","byte_start":379748,"byte_end":379769,"line_start":26,"line_end":26,"column_start":22,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/try_reduce_with.rs","byte_start":379803,"byte_end":379824,"line_start":28,"line_end":28,"column_start":23,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3747}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/try_reduce_with.rs","byte_start":379918,"byte_end":379939,"line_start":34,"line_end":34,"column_start":32,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3752},{"krate":0,"index":3753},{"krate":0,"index":3754},{"krate":0,"index":3755},{"krate":0,"index":3756},{"krate":0,"index":3757}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/try_reduce_with.rs","byte_start":380518,"byte_end":380539,"line_start":60,"line_end":60,"column_start":41,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":3762},{"krate":0,"index":3763}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/try_reduce_with.rs","byte_start":380776,"byte_end":380797,"line_start":74,"line_end":74,"column_start":39,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3768}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/try_reduce_with.rs","byte_start":381452,"byte_end":381471,"line_start":97,"line_end":97,"column_start":30,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3780},{"krate":0,"index":3781},{"krate":0,"index":3782},{"krate":0,"index":3783}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/unzip.rs","byte_start":385367,"byte_end":385372,"line_start":94,"line_end":94,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3822},{"krate":0,"index":3823},{"krate":0,"index":3824},{"krate":0,"index":3827}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/unzip.rs","byte_start":386253,"byte_end":386262,"line_start":130,"line_end":130,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3839},{"krate":0,"index":3840},{"krate":0,"index":3841}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/unzip.rs","byte_start":387299,"byte_end":387311,"line_start":172,"line_end":172,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3859},{"krate":0,"index":3860},{"krate":0,"index":3861}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/unzip.rs","byte_start":387942,"byte_end":387948,"line_start":200,"line_end":200,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3877},{"krate":0,"index":3878},{"krate":0,"index":3880}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/unzip.rs","byte_start":389349,"byte_end":389355,"line_start":252,"line_end":252,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3895},{"krate":0,"index":3896},{"krate":0,"index":3898}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/unzip.rs","byte_start":390292,"byte_end":390305,"line_start":292,"line_end":292,"column_start":41,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3913},{"krate":0,"index":3914},{"krate":0,"index":3915},{"krate":0,"index":3916},{"krate":0,"index":3917},{"krate":0,"index":3918}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/unzip.rs","byte_start":391568,"byte_end":391581,"line_start":338,"line_end":338,"column_start":50,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":3925},{"krate":0,"index":3926}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/unzip.rs","byte_start":392245,"byte_end":392256,"line_start":367,"line_end":367,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3941},{"krate":0,"index":3942},{"krate":0,"index":3943},{"krate":0,"index":3944}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/unzip.rs","byte_start":392997,"byte_end":393009,"line_start":400,"line_end":400,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3955}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/unzip.rs","byte_start":394093,"byte_end":394101,"line_start":446,"line_end":446,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3975},{"krate":0,"index":3976},{"krate":0,"index":3977}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/update.rs","byte_start":395082,"byte_end":395088,"line_start":20,"line_end":20,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3993}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/update.rs","byte_start":395248,"byte_end":395254,"line_start":26,"line_end":26,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3997}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/update.rs","byte_start":395466,"byte_end":395472,"line_start":36,"line_end":36,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4001},{"krate":0,"index":4002},{"krate":0,"index":4004}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/update.rs","byte_start":395934,"byte_end":395940,"line_start":56,"line_end":56,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4008},{"krate":0,"index":4010},{"krate":0,"index":4011}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/update.rs","byte_start":396681,"byte_end":396689,"line_start":87,"line_end":87,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4022},{"krate":0,"index":4023}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/update.rs","byte_start":397366,"byte_end":397380,"line_start":115,"line_end":115,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4035},{"krate":0,"index":4036},{"krate":0,"index":4037},{"krate":0,"index":4038},{"krate":0,"index":4039},{"krate":0,"index":4040},{"krate":0,"index":4041}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/update.rs","byte_start":398640,"byte_end":398654,"line_start":171,"line_end":171,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4053}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/update.rs","byte_start":398801,"byte_end":398815,"line_start":177,"line_end":177,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4059},{"krate":0,"index":4060},{"krate":0,"index":4061},{"krate":0,"index":4062},{"krate":0,"index":4063},{"krate":0,"index":4064}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/update.rs","byte_start":399561,"byte_end":399575,"line_start":207,"line_end":207,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":4070},{"krate":0,"index":4071}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/update.rs","byte_start":400096,"byte_end":400108,"line_start":233,"line_end":233,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4088},{"krate":0,"index":4089},{"krate":0,"index":4090},{"krate":0,"index":4092},{"krate":0,"index":4093}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/update.rs","byte_start":401054,"byte_end":401063,"line_start":277,"line_end":277,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4097},{"krate":0,"index":4098},{"krate":0,"index":4099},{"krate":0,"index":4100},{"krate":0,"index":4103}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/update.rs","byte_start":401813,"byte_end":401822,"line_start":310,"line_end":310,"column_start":34,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/update.rs","byte_start":401926,"byte_end":401935,"line_start":317,"line_end":317,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4111}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/while_some.rs","byte_start":402748,"byte_end":402757,"line_start":18,"line_end":18,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4124}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/while_some.rs","byte_start":402947,"byte_end":402956,"line_start":28,"line_end":28,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4128},{"krate":0,"index":4129}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/while_some.rs","byte_start":403586,"byte_end":403603,"line_start":56,"line_end":56,"column_start":40,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4140},{"krate":0,"index":4141},{"krate":0,"index":4142},{"krate":0,"index":4143},{"krate":0,"index":4144},{"krate":0,"index":4145}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/while_some.rs","byte_start":404403,"byte_end":404420,"line_start":89,"line_end":89,"column_start":49,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":4150},{"krate":0,"index":4151}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/while_some.rs","byte_start":404823,"byte_end":404838,"line_start":111,"line_end":111,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4161},{"krate":0,"index":4162},{"krate":0,"index":4163},{"krate":0,"index":4169},{"krate":0,"index":4170}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/zip.rs","byte_start":406492,"byte_end":406495,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4183}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/zip.rs","byte_start":406718,"byte_end":406721,"line_start":30,"line_end":30,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4187},{"krate":0,"index":4188},{"krate":0,"index":4190}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/zip.rs","byte_start":407105,"byte_end":407108,"line_start":49,"line_end":49,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4194},{"krate":0,"index":4196},{"krate":0,"index":4197}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/zip.rs","byte_start":407768,"byte_end":407777,"line_start":79,"line_end":79,"column_start":54,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4208},{"krate":0,"index":4209}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/zip.rs","byte_start":408398,"byte_end":408407,"line_start":102,"line_end":102,"column_start":54,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4220},{"krate":0,"index":4221}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/zip.rs","byte_start":409064,"byte_end":409075,"line_start":129,"line_end":129,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4231},{"krate":0,"index":4232},{"krate":0,"index":4233},{"krate":0,"index":4234},{"krate":0,"index":4235},{"krate":0,"index":4236}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/zip_eq.rs","byte_start":410484,"byte_end":410489,"line_start":18,"line_end":18,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4243}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/zip_eq.rs","byte_start":410759,"byte_end":410764,"line_start":31,"line_end":31,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4247},{"krate":0,"index":4248},{"krate":0,"index":4250}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/zip_eq.rs","byte_start":411156,"byte_end":411161,"line_start":50,"line_end":50,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4254},{"krate":0,"index":4256},{"krate":0,"index":4257}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/step_by.rs","byte_start":412258,"byte_end":412264,"line_start":22,"line_end":22,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4424}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/step_by.rs","byte_start":412471,"byte_end":412477,"line_start":32,"line_end":32,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4427},{"krate":0,"index":4428},{"krate":0,"index":4430}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/step_by.rs","byte_start":412812,"byte_end":412818,"line_start":50,"line_end":50,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4433},{"krate":0,"index":4435},{"krate":0,"index":4436}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/step_by.rs","byte_start":413500,"byte_end":413508,"line_start":79,"line_end":79,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4446},{"krate":0,"index":4447}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/step_by.rs","byte_start":414189,"byte_end":414203,"line_start":108,"line_end":108,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4456},{"krate":0,"index":4457},{"krate":0,"index":4458},{"krate":0,"index":4459},{"krate":0,"index":4460},{"krate":0,"index":4461}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":38321,"byte_end":38322,"line_start":275,"line_end":275,"column_start":67,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":4477},{"krate":0,"index":4478},{"krate":0,"index":4479}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":39830,"byte_end":39831,"line_start":322,"line_end":322,"column_start":70,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":4488},{"krate":0,"index":4489},{"krate":0,"index":4490}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":101744,"byte_end":101745,"line_start":2157,"line_end":2157,"column_start":52,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4696},{"krate":0,"index":4697},{"krate":0,"index":4698}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":131905,"byte_end":131911,"line_start":3088,"line_end":3088,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7862},{"krate":0,"index":4791},{"krate":0,"index":4792},{"krate":0,"index":4793},{"krate":0,"index":4794},{"krate":0,"index":4795}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":132236,"byte_end":132242,"line_start":3105,"line_end":3105,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7863},{"krate":0,"index":4799},{"krate":0,"index":4800},{"krate":0,"index":4801},{"krate":0,"index":4802},{"krate":0,"index":4803}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/option.rs","byte_start":416002,"byte_end":416008,"line_start":26,"line_end":26,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4816},{"krate":0,"index":4817},{"krate":0,"index":4818}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/option.rs","byte_start":416181,"byte_end":416189,"line_start":35,"line_end":35,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4821},{"krate":0,"index":4822},{"krate":0,"index":4824}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/option.rs","byte_start":416484,"byte_end":416492,"line_start":50,"line_end":50,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4827},{"krate":0,"index":4829},{"krate":0,"index":4830}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/option.rs","byte_start":417649,"byte_end":417653,"line_start":91,"line_end":91,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4835}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/option.rs","byte_start":419129,"byte_end":419143,"line_start":150,"line_end":150,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4853},{"krate":0,"index":4854},{"krate":0,"index":4855},{"krate":0,"index":4856}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/option.rs","byte_start":419755,"byte_end":419761,"line_start":173,"line_end":173,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4860}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range.rs","byte_start":422680,"byte_end":422685,"line_start":51,"line_end":51,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4920},{"krate":0,"index":4921},{"krate":0,"index":4922}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range.rs","byte_start":422962,"byte_end":422974,"line_start":67,"line_end":67,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4928},{"krate":0,"index":4929},{"krate":0,"index":4930}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range.rs","byte_start":428529,"byte_end":428533,"line_start":249,"line_end":249,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4938},{"krate":0,"index":4939},{"krate":0,"index":4941}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range.rs","byte_start":428840,"byte_end":428844,"line_start":264,"line_end":264,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4943},{"krate":0,"index":4945},{"krate":0,"index":4946}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range_inclusive.rs","byte_start":433426,"byte_end":433430,"line_start":50,"line_end":50,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4959}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range_inclusive.rs","byte_start":434298,"byte_end":434312,"line_start":74,"line_end":74,"column_start":34,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4962},{"krate":0,"index":4963},{"krate":0,"index":4964}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range_inclusive.rs","byte_start":437625,"byte_end":437629,"line_start":187,"line_end":187,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4970},{"krate":0,"index":4971},{"krate":0,"index":4973}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range_inclusive.rs","byte_start":438009,"byte_end":438013,"line_start":203,"line_end":203,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4975},{"krate":0,"index":4977},{"krate":0,"index":4978}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/result.rs","byte_start":441088,"byte_end":441094,"line_start":20,"line_end":20,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4992},{"krate":0,"index":4993},{"krate":0,"index":4994}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/result.rs","byte_start":441528,"byte_end":441532,"line_start":42,"line_end":42,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4998}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/result.rs","byte_start":442785,"byte_end":442791,"line_start":93,"line_end":93,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":5017}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mergesort.rs","byte_start":480167,"byte_end":480177,"line_start":32,"line_end":32,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5053}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mergesort.rs","byte_start":483127,"byte_end":483133,"line_start":102,"line_end":102,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5062}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mergesort.rs","byte_start":483382,"byte_end":483395,"line_start":114,"line_end":114,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5069}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mergesort.rs","byte_start":487121,"byte_end":487130,"line_start":217,"line_end":217,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5080}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mergesort.rs","byte_start":498572,"byte_end":498577,"line_start":521,"line_end":521,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5104}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/quicksort.rs","byte_start":507748,"byte_end":507759,"line_start":21,"line_end":21,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5132}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/quicksort.rs","byte_start":507989,"byte_end":507995,"line_start":34,"line_end":34,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5138}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/quicksort.rs","byte_start":508202,"byte_end":508212,"line_start":46,"line_end":46,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5145}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":461435,"byte_end":461439,"line_start":506,"line_end":506,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5292}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":461566,"byte_end":461570,"line_start":512,"line_end":512,"column_start":51,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":5296},{"krate":0,"index":5297},{"krate":0,"index":5299}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":461896,"byte_end":461900,"line_start":527,"line_end":527,"column_start":58,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":5303},{"krate":0,"index":5305},{"krate":0,"index":5306}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":462403,"byte_end":462415,"line_start":551,"line_end":551,"column_start":43,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":5315},{"krate":0,"index":5316},{"krate":0,"index":5317},{"krate":0,"index":5318}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":462974,"byte_end":462980,"line_start":572,"line_end":572,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5322}],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":463109,"byte_end":463115,"line_start":578,"line_end":578,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":5326},{"krate":0,"index":5327},{"krate":0,"index":5329}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":463443,"byte_end":463449,"line_start":593,"line_end":593,"column_start":58,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":5333},{"krate":0,"index":5335},{"krate":0,"index":5336}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":464072,"byte_end":464086,"line_start":621,"line_end":621,"column_start":43,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":5346},{"krate":0,"index":5347},{"krate":0,"index":5348},{"krate":0,"index":5349}],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":464952,"byte_end":464963,"line_start":653,"line_end":653,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5353}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":465250,"byte_end":465261,"line_start":662,"line_end":662,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5357}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":465395,"byte_end":465406,"line_start":668,"line_end":668,"column_start":51,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":5361},{"krate":0,"index":5362},{"krate":0,"index":5364}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":465734,"byte_end":465745,"line_start":683,"line_end":683,"column_start":58,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":5368},{"krate":0,"index":5370},{"krate":0,"index":5371}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":466365,"byte_end":466384,"line_start":711,"line_end":711,"column_start":43,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":5381},{"krate":0,"index":5382},{"krate":0,"index":5383},{"krate":0,"index":5384}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":467226,"byte_end":467233,"line_start":742,"line_end":742,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5388}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":467363,"byte_end":467370,"line_start":748,"line_end":748,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":5392},{"krate":0,"index":5393},{"krate":0,"index":5395}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":467698,"byte_end":467705,"line_start":763,"line_end":763,"column_start":58,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":5399},{"krate":0,"index":5401},{"krate":0,"index":5402}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":468379,"byte_end":468394,"line_start":792,"line_end":792,"column_start":43,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":5412},{"krate":0,"index":5413},{"krate":0,"index":5414},{"krate":0,"index":5415}],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":469269,"byte_end":469276,"line_start":823,"line_end":823,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":5419},{"krate":0,"index":5420},{"krate":0,"index":5422}],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":469606,"byte_end":469613,"line_start":838,"line_end":838,"column_start":58,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":5426},{"krate":0,"index":5428},{"krate":0,"index":5429}],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":470126,"byte_end":470141,"line_start":862,"line_end":862,"column_start":43,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":5438},{"krate":0,"index":5439},{"krate":0,"index":5440},{"krate":0,"index":5441}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":470780,"byte_end":470789,"line_start":886,"line_end":886,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":5445},{"krate":0,"index":5446},{"krate":0,"index":5448}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":471121,"byte_end":471130,"line_start":901,"line_end":901,"column_start":58,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":5452},{"krate":0,"index":5454},{"krate":0,"index":5455}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":471763,"byte_end":471780,"line_start":929,"line_end":929,"column_start":43,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":5465},{"krate":0,"index":5466},{"krate":0,"index":5467},{"krate":0,"index":5468}],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":472676,"byte_end":472690,"line_start":961,"line_end":961,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5472},{"krate":0,"index":5473},{"krate":0,"index":5474}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":474105,"byte_end":474119,"line_start":993,"line_end":993,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":5478},{"krate":0,"index":5479},{"krate":0,"index":5481}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":474451,"byte_end":474465,"line_start":1008,"line_end":1008,"column_start":58,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":5485},{"krate":0,"index":5487},{"krate":0,"index":5488}],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":475095,"byte_end":475117,"line_start":1036,"line_end":1036,"column_start":43,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":5498},{"krate":0,"index":5499},{"krate":0,"index":5500},{"krate":0,"index":5501}],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":475947,"byte_end":475952,"line_start":1066,"line_end":1066,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5512}],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":476135,"byte_end":476140,"line_start":1075,"line_end":1075,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5517}],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":476336,"byte_end":476341,"line_start":1081,"line_end":1081,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5522},{"krate":0,"index":5523}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":477828,"byte_end":477836,"line_start":1142,"line_end":1142,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5546}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":478061,"byte_end":478069,"line_start":1150,"line_end":1150,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":5551},{"krate":0,"index":5552}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":551124,"byte_end":551126,"line_start":350,"line_end":350,"column_start":54,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":8376},{"krate":0,"index":5629},{"krate":0,"index":5630},{"krate":0,"index":5631},{"krate":0,"index":5632},{"krate":0,"index":5635},{"krate":0,"index":5638}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":552369,"byte_end":552374,"line_start":403,"line_end":403,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5646},{"krate":0,"index":5647}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":552634,"byte_end":552647,"line_start":414,"line_end":414,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":5651},{"krate":0,"index":5652},{"krate":0,"index":5653}],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":553446,"byte_end":553457,"line_start":448,"line_end":448,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5661},{"krate":0,"index":5662}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":553808,"byte_end":553827,"line_start":463,"line_end":463,"column_start":33,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5666},{"krate":0,"index":5667},{"krate":0,"index":5668}],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":554799,"byte_end":554804,"line_start":503,"line_end":503,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5675},{"krate":0,"index":5676}],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":555062,"byte_end":555075,"line_start":514,"line_end":514,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":5680},{"krate":0,"index":5681},{"krate":0,"index":5682}],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":555832,"byte_end":555843,"line_start":547,"line_end":547,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5689},{"krate":0,"index":5690}],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":556108,"byte_end":556127,"line_start":558,"line_end":558,"column_start":33,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5694},{"krate":0,"index":5695},{"krate":0,"index":5696}],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":556868,"byte_end":556873,"line_start":588,"line_end":588,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5701}],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":557023,"byte_end":557028,"line_start":594,"line_end":594,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5705},{"krate":0,"index":5706}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":558681,"byte_end":558696,"line_start":654,"line_end":654,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5727}],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":558850,"byte_end":558873,"line_start":660,"line_end":660,"column_start":36,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":5732}],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":559181,"byte_end":559196,"line_start":669,"line_end":669,"column_start":44,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":5736},{"krate":0,"index":5737}],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":559544,"byte_end":559567,"line_start":681,"line_end":681,"column_start":58,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":5743},{"krate":0,"index":5744},{"krate":0,"index":5746}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":560531,"byte_end":560536,"line_start":721,"line_end":721,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5751},{"krate":0,"index":5752}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":561130,"byte_end":561145,"line_start":746,"line_end":746,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":5757},{"krate":0,"index":5758}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":561810,"byte_end":561817,"line_start":774,"line_end":774,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":5769},{"krate":0,"index":5770}],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":562194,"byte_end":562209,"line_start":789,"line_end":789,"column_start":51,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":5776},{"krate":0,"index":5777},{"krate":0,"index":5778}],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":563246,"byte_end":563258,"line_start":831,"line_end":831,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":5790},{"krate":0,"index":5791}],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":563671,"byte_end":563691,"line_start":847,"line_end":847,"column_start":51,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":5797},{"krate":0,"index":5798},{"krate":0,"index":5799}],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/string.rs","byte_start":565259,"byte_end":565264,"line_start":30,"line_end":30,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5822},{"krate":0,"index":5823}],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/string.rs","byte_start":565541,"byte_end":565546,"line_start":43,"line_end":43,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5827}],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/vec.rs","byte_start":566262,"byte_end":566265,"line_start":23,"line_end":23,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5855},{"krate":0,"index":5856},{"krate":0,"index":5857}],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/vec.rs","byte_start":566438,"byte_end":566446,"line_start":32,"line_end":32,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5860},{"krate":0,"index":5861},{"krate":0,"index":5863}],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/vec.rs","byte_start":566743,"byte_end":566751,"line_start":47,"line_end":47,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":5866},{"krate":0,"index":5868},{"krate":0,"index":5869}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/vec.rs","byte_start":567826,"byte_end":567831,"line_start":89,"line_end":89,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":5881},{"krate":0,"index":5882},{"krate":0,"index":5884}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/vec.rs","byte_start":568142,"byte_end":568147,"line_start":104,"line_end":104,"column_start":50,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":5888},{"krate":0,"index":5890},{"krate":0,"index":5891}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/vec.rs","byte_start":569072,"byte_end":569077,"line_start":135,"line_end":135,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5896}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/vec.rs","byte_start":570218,"byte_end":570231,"line_start":164,"line_end":164,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5904}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/vec.rs","byte_start":570553,"byte_end":570566,"line_start":173,"line_end":173,"column_start":43,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":5908},{"krate":0,"index":5909},{"krate":0,"index":5910},{"krate":0,"index":5911}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/vec.rs","byte_start":571225,"byte_end":571238,"line_start":193,"line_end":193,"column_start":39,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5915}],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/vec.rs","byte_start":571614,"byte_end":571624,"line_start":207,"line_end":207,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":5923},{"krate":0,"index":5924},{"krate":0,"index":5925},{"krate":0,"index":5926}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/vec.rs","byte_start":571977,"byte_end":571987,"line_start":224,"line_end":224,"column_start":47,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":5930}],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/vec.rs","byte_start":572187,"byte_end":572197,"line_start":231,"line_end":231,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":5934}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/vec.rs","byte_start":572318,"byte_end":572328,"line_start":237,"line_end":237,"column_start":47,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/vec.rs","byte_start":572374,"byte_end":572384,"line_start":239,"line_end":239,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5941}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/par_either.rs","byte_start":574400,"byte_end":574406,"line_start":6,"line_end":6,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5969},{"krate":0,"index":5970},{"krate":0,"index":5972}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/par_either.rs","byte_start":574926,"byte_end":574932,"line_start":28,"line_end":28,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":5976},{"krate":0,"index":5978},{"krate":0,"index":5979}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/par_either.rs","byte_start":575726,"byte_end":575732,"line_start":59,"line_end":59,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5985}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":3984,"byte_end":3995,"line_start":94,"line_end":94,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":50}},{"kind":"Mod","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/mod.rs","byte_start":12542,"byte_end":12553,"line_start":24,"line_end":24,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":52}},{"kind":"Mod","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/mod.rs","byte_start":12563,"byte_end":12572,"line_start":25,"line_end":25,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":95}},{"kind":"Mod","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/mod.rs","byte_start":12582,"byte_end":12591,"line_start":26,"line_end":26,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":109}},{"kind":"Mod","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/mod.rs","byte_start":12601,"byte_end":12609,"line_start":27,"line_end":27,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":122}},{"kind":"Mod","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/mod.rs","byte_start":12619,"byte_end":12627,"line_start":28,"line_end":28,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":154}},{"kind":"Mod","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/mod.rs","byte_start":12637,"byte_end":12648,"line_start":29,"line_end":29,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":184}},{"kind":"Mod","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/mod.rs","byte_start":12658,"byte_end":12667,"line_start":30,"line_end":30,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":197}},{"kind":"Mod","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":4005,"byte_end":4009,"line_start":95,"line_end":95,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":303}},{"kind":"Mod","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":33267,"byte_end":33275,"line_start":89,"line_end":89,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":332}},{"kind":"Mod","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":4019,"byte_end":4025,"line_start":96,"line_end":96,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":4804}},{"kind":"Mod","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":4035,"byte_end":4042,"line_start":97,"line_end":97,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":4866}},{"kind":"Mod","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":4052,"byte_end":4057,"line_start":98,"line_end":98,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":4906}},{"kind":"Mod","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":4067,"byte_end":4082,"line_start":99,"line_end":99,"column_start":9,"column_end":24},"ref_id":{"krate":0,"index":4948}},{"kind":"Mod","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":4092,"byte_end":4098,"line_start":100,"line_end":100,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":4980}},{"kind":"Mod","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":4108,"byte_end":4113,"line_start":101,"line_end":101,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":5024}},{"kind":"Mod","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":4123,"byte_end":4126,"line_start":102,"line_end":102,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":5565}},{"kind":"Mod","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":4136,"byte_end":4142,"line_start":103,"line_end":103,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":5801}},{"kind":"Mod","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/lib.rs","byte_start":4152,"byte_end":4155,"line_start":104,"line_end":104,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":5828}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/split_producer.rs","byte_start":8090,"byte_end":8095,"line_start":17,"line_end":17,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":2826},"to":{"krate":0,"index":26}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/split_producer.rs","byte_start":8521,"byte_end":8534,"line_start":29,"line_end":29,"column_start":16,"column_end":29},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":19},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/split_producer.rs","byte_start":10002,"byte_end":10015,"line_start":77,"line_end":77,"column_start":38,"column_end":51},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":19},"to":{"krate":0,"index":382}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/binary_heap.rs","byte_start":14868,"byte_end":14878,"line_start":18,"line_end":18,"column_start":46,"column_end":56},"kind":{"Impl":{"id":2}},"from":{"krate":5,"index":668},"to":{"krate":0,"index":4465}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/binary_heap.rs","byte_start":15335,"byte_end":15339,"line_start":40,"line_end":40,"column_start":35,"column_end":39},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":6070},"to":{"krate":2,"index":2446}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/binary_heap.rs","byte_start":16110,"byte_end":16115,"line_start":76,"line_end":76,"column_start":46,"column_end":51},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":6102},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/binary_heap.rs","byte_start":16426,"byte_end":16431,"line_start":91,"line_end":91,"column_start":53,"column_end":58},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":6102},"to":{"krate":0,"index":4699}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/binary_heap.rs","byte_start":16901,"byte_end":16906,"line_start":113,"line_end":113,"column_start":34,"column_end":39},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":6102},"to":{"krate":2,"index":3049}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/btree_map.rs","byte_start":17977,"byte_end":17981,"line_start":34,"line_end":34,"column_start":44,"column_end":48},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":6134},"to":{"krate":2,"index":2446}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/btree_set.rs","byte_start":19492,"byte_end":19496,"line_start":34,"line_end":34,"column_start":40,"column_end":44},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":6210},"to":{"krate":2,"index":2446}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/hash_map.rs","byte_start":20790,"byte_end":20794,"line_start":36,"line_end":36,"column_start":50,"column_end":54},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":6259},"to":{"krate":2,"index":2446}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/hash_set.rs","byte_start":23177,"byte_end":23181,"line_start":36,"line_end":36,"column_start":41,"column_end":45},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":6356},"to":{"krate":2,"index":2446}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/linked_list.rs","byte_start":24936,"byte_end":24940,"line_start":34,"line_end":34,"column_start":29,"column_end":33},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":6419},"to":{"krate":2,"index":2446}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/vec_deque.rs","byte_start":26105,"byte_end":26113,"line_start":21,"line_end":21,"column_start":40,"column_end":48},"kind":{"Impl":{"id":36}},"from":{"krate":5,"index":3811},"to":{"krate":0,"index":4465}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/vec_deque.rs","byte_start":26663,"byte_end":26667,"line_start":43,"line_end":43,"column_start":29,"column_end":33},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":6489},"to":{"krate":2,"index":2446}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/vec_deque.rs","byte_start":28340,"byte_end":28345,"line_start":113,"line_end":113,"column_start":40,"column_end":45},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":6535},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/vec_deque.rs","byte_start":28650,"byte_end":28655,"line_start":128,"line_end":128,"column_start":47,"column_end":52},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":6535},"to":{"krate":0,"index":4699}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/vec_deque.rs","byte_start":29217,"byte_end":29222,"line_start":151,"line_end":151,"column_start":28,"column_end":33},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":6535},"to":{"krate":2,"index":3049}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/mod.rs","byte_start":13392,"byte_end":13402,"line_start":51,"line_end":51,"column_start":20,"column_end":30},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":279},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/collections/mod.rs","byte_start":13819,"byte_end":13829,"line_start":65,"line_end":65,"column_start":43,"column_end":53},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":279},"to":{"krate":2,"index":3049}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":135279,"byte_end":135283,"line_start":59,"line_end":59,"column_start":21,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":2821},"to":{"krate":0,"index":350}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":135286,"byte_end":135291,"line_start":59,"line_end":59,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":2826},"to":{"krate":0,"index":350}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":138293,"byte_end":138297,"line_start":128,"line_end":128,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":2821},"to":{"krate":0,"index":359}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":138300,"byte_end":138305,"line_start":128,"line_end":128,"column_start":34,"column_end":39},"kind":"SuperTrait","from":{"krate":2,"index":2826},"to":{"krate":0,"index":359}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":139613,"byte_end":139618,"line_start":159,"line_end":159,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2826},"to":{"krate":0,"index":367}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":141633,"byte_end":141641,"line_start":213,"line_end":213,"column_start":33,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":359},"to":{"krate":0,"index":378}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":142746,"byte_end":142750,"line_start":236,"line_end":236,"column_start":30,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":2821},"to":{"krate":0,"index":382}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":142753,"byte_end":142758,"line_start":236,"line_end":236,"column_start":37,"column_end":42},"kind":"SuperTrait","from":{"krate":2,"index":2826},"to":{"krate":0,"index":382}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":143746,"byte_end":143754,"line_start":263,"line_end":263,"column_start":6,"column_end":14},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":6545},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":144883,"byte_end":144897,"line_start":302,"line_end":302,"column_start":6,"column_end":20},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":6550},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/plumbing/mod.rs","byte_start":147256,"byte_end":147264,"line_start":364,"line_end":364,"column_start":40,"column_end":48},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":396},"to":{"krate":0,"index":345}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chain.rs","byte_start":151977,"byte_end":151982,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":6556},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chain.rs","byte_start":152211,"byte_end":152216,"line_start":34,"line_end":34,"column_start":33,"column_end":38},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":6556},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chain.rs","byte_start":153319,"byte_end":153324,"line_start":67,"line_end":67,"column_start":40,"column_end":45},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":6556},"to":{"krate":0,"index":4699}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chain.rs","byte_start":154259,"byte_end":154268,"line_start":103,"line_end":103,"column_start":51,"column_end":60},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":457},"to":{"krate":0,"index":345}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chain.rs","byte_start":154946,"byte_end":154955,"line_start":128,"line_end":128,"column_start":51,"column_end":60},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":469},"to":{"krate":0,"index":345}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chain.rs","byte_start":155624,"byte_end":155637,"line_start":158,"line_end":158,"column_start":12,"column_end":25},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":481},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chain.rs","byte_start":155820,"byte_end":155833,"line_start":168,"line_end":168,"column_start":25,"column_end":38},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":481},"to":{"krate":0,"index":350}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chain.rs","byte_start":157445,"byte_end":157453,"line_start":227,"line_end":227,"column_start":12,"column_end":20},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":502},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chain.rs","byte_start":157667,"byte_end":157675,"line_start":237,"line_end":237,"column_start":25,"column_end":33},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":502},"to":{"krate":2,"index":7173}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chain.rs","byte_start":157971,"byte_end":157979,"line_start":253,"line_end":253,"column_start":34,"column_end":42},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":502},"to":{"krate":2,"index":7062}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chain.rs","byte_start":158100,"byte_end":158108,"line_start":260,"line_end":260,"column_start":36,"column_end":44},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":502},"to":{"krate":2,"index":7037}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chunks.rs","byte_start":158878,"byte_end":158884,"line_start":23,"line_end":23,"column_start":9,"column_end":15},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":6569},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chunks.rs","byte_start":159084,"byte_end":159090,"line_start":33,"line_end":33,"column_start":30,"column_end":36},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":6569},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chunks.rs","byte_start":159423,"byte_end":159429,"line_start":51,"line_end":51,"column_start":37,"column_end":43},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":6569},"to":{"krate":0,"index":4699}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chunks.rs","byte_start":160127,"byte_end":160135,"line_start":83,"line_end":83,"column_start":45,"column_end":53},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":548},"to":{"krate":0,"index":345}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chunks.rs","byte_start":160708,"byte_end":160721,"line_start":112,"line_end":112,"column_start":22,"column_end":35},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":559},"to":{"krate":0,"index":350}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chunks.rs","byte_start":161840,"byte_end":161848,"line_start":159,"line_end":159,"column_start":22,"column_end":30},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":572},"to":{"krate":2,"index":7173}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chunks.rs","byte_start":162526,"byte_end":162534,"line_start":185,"line_end":185,"column_start":31,"column_end":39},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":572},"to":{"krate":2,"index":7062}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/chunks.rs","byte_start":162695,"byte_end":162703,"line_start":195,"line_end":195,"column_start":33,"column_end":41},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":572},"to":{"krate":2,"index":7037}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/cloned.rs","byte_start":163834,"byte_end":163840,"line_start":18,"line_end":18,"column_start":9,"column_end":15},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":6579},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/cloned.rs","byte_start":164028,"byte_end":164034,"line_start":28,"line_end":28,"column_start":37,"column_end":43},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":6579},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/cloned.rs","byte_start":164482,"byte_end":164488,"line_start":48,"line_end":48,"column_start":44,"column_end":50},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":6579},"to":{"krate":0,"index":4699}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/cloned.rs","byte_start":165133,"byte_end":165141,"line_start":75,"line_end":75,"column_start":53,"column_end":61},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":614},"to":{"krate":0,"index":345}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/cloned.rs","byte_start":165698,"byte_end":165712,"line_start":99,"line_end":99,"column_start":29,"column_end":43},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":624},"to":{"krate":0,"index":350}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/cloned.rs","byte_start":166608,"byte_end":166622,"line_start":142,"line_end":142,"column_start":9,"column_end":23},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":639},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/cloned.rs","byte_start":166734,"byte_end":166748,"line_start":148,"line_end":148,"column_start":36,"column_end":50},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":639},"to":{"krate":0,"index":359}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/cloned.rs","byte_start":167396,"byte_end":167410,"line_start":177,"line_end":177,"column_start":45,"column_end":59},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":639},"to":{"krate":0,"index":378}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/cloned.rs","byte_start":167730,"byte_end":167742,"line_start":195,"line_end":195,"column_start":34,"column_end":46},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":661},"to":{"krate":0,"index":367}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/collect/consumer.rs","byte_start":175237,"byte_end":175252,"line_start":20,"line_end":20,"column_start":24,"column_end":39},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":702},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/collect/consumer.rs","byte_start":175893,"byte_end":175906,"line_start":39,"line_end":39,"column_start":29,"column_end":42},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":715},"to":{"krate":2,"index":2821}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/collect/consumer.rs","byte_start":175944,"byte_end":175957,"line_start":41,"line_end":41,"column_start":13,"column_end":26},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":715},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/collect/consumer.rs","byte_start":176303,"byte_end":176316,"line_start":55,"line_end":55,"column_start":22,"column_end":35},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":715},"to":{"krate":2,"index":3049}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/collect/consumer.rs","byte_start":176623,"byte_end":176638,"line_start":65,"line_end":65,"column_start":40,"column_end":55},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":702},"to":{"krate":0,"index":359}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/collect/consumer.rs","byte_start":177717,"byte_end":177730,"line_start":101,"line_end":101,"column_start":38,"column_end":51},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":706},"to":{"krate":0,"index":367}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/collect/consumer.rs","byte_start":178640,"byte_end":178655,"line_start":132,"line_end":132,"column_start":49,"column_end":64},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":702},"to":{"krate":0,"index":378}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/collect/consumer.rs","byte_start":179044,"byte_end":179058,"line_start":145,"line_end":145,"column_start":47,"column_end":61},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":754},"to":{"krate":0,"index":375}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/collect/mod.rs","byte_start":170697,"byte_end":170704,"line_start":74,"line_end":74,"column_start":24,"column_end":31},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":783},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/collect/mod.rs","byte_start":173693,"byte_end":173696,"line_start":144,"line_end":144,"column_start":31,"column_end":34},"kind":{"Impl":{"id":89}},"from":{"krate":5,"index":6769},"to":{"krate":0,"index":4768}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/copied.rs","byte_start":194020,"byte_end":194026,"line_start":18,"line_end":18,"column_start":9,"column_end":15},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":6588},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/copied.rs","byte_start":194214,"byte_end":194220,"line_start":28,"line_end":28,"column_start":37,"column_end":43},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":6588},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/copied.rs","byte_start":194667,"byte_end":194673,"line_start":48,"line_end":48,"column_start":44,"column_end":50},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":6588},"to":{"krate":0,"index":4699}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/copied.rs","byte_start":195317,"byte_end":195325,"line_start":75,"line_end":75,"column_start":53,"column_end":61},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":825},"to":{"krate":0,"index":345}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/copied.rs","byte_start":195881,"byte_end":195895,"line_start":99,"line_end":99,"column_start":29,"column_end":43},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":835},"to":{"krate":0,"index":350}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/copied.rs","byte_start":196790,"byte_end":196804,"line_start":142,"line_end":142,"column_start":9,"column_end":23},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":850},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/copied.rs","byte_start":196916,"byte_end":196930,"line_start":148,"line_end":148,"column_start":36,"column_end":50},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":850},"to":{"krate":0,"index":359}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/copied.rs","byte_start":197577,"byte_end":197591,"line_start":177,"line_end":177,"column_start":45,"column_end":59},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":850},"to":{"krate":0,"index":378}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/copied.rs","byte_start":197910,"byte_end":197922,"line_start":195,"line_end":195,"column_start":34,"column_end":46},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":872},"to":{"krate":0,"index":367}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/empty.rs","byte_start":199204,"byte_end":199209,"line_start":35,"line_end":35,"column_start":25,"column_end":30},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":896},"to":{"krate":2,"index":2446}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/empty.rs","byte_start":199299,"byte_end":199304,"line_start":41,"line_end":41,"column_start":30,"column_end":35},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":896},"to":{"krate":2,"index":8721}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/empty.rs","byte_start":199440,"byte_end":199445,"line_start":47,"line_end":47,"column_start":36,"column_end":41},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":896},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/empty.rs","byte_start":199731,"byte_end":199736,"line_start":62,"line_end":62,"column_start":43,"column_end":48},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":896},"to":{"krate":0,"index":4699}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/empty.rs","byte_start":200216,"byte_end":200229,"line_start":85,"line_end":85,"column_start":28,"column_end":41},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":918},"to":{"krate":0,"index":350}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/enumerate.rs","byte_start":201209,"byte_end":201218,"line_start":18,"line_end":18,"column_start":9,"column_end":18},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":6597},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/enumerate.rs","byte_start":201412,"byte_end":201421,"line_start":28,"line_end":28,"column_start":30,"column_end":39},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":6597},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/enumerate.rs","byte_start":201765,"byte_end":201774,"line_start":46,"line_end":46,"column_start":37,"column_end":46},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":6597},"to":{"krate":0,"index":4699}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/enumerate.rs","byte_start":202280,"byte_end":202288,"line_start":68,"line_end":68,"column_start":45,"column_end":53},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":958},"to":{"krate":0,"index":345}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/enumerate.rs","byte_start":202872,"byte_end":202889,"line_start":92,"line_end":92,"column_start":22,"column_end":39},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":967},"to":{"krate":0,"index":350}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/extend.rs","byte_start":205878,"byte_end":205888,"line_start":64,"line_end":64,"column_start":31,"column_end":41},"kind":{"Impl":{"id":109}},"from":{"krate":5,"index":668},"to":{"krate":0,"index":4768}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/extend.rs","byte_start":206186,"byte_end":206196,"line_start":77,"line_end":77,"column_start":39,"column_end":49},"kind":{"Impl":{"id":110}},"from":{"krate":5,"index":668},"to":{"krate":0,"index":4768}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/extend.rs","byte_start":206509,"byte_end":206517,"line_start":90,"line_end":90,"column_start":39,"column_end":47},"kind":{"Impl":{"id":111}},"from":{"krate":5,"index":1217},"to":{"krate":0,"index":4768}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/extend.rs","byte_start":206853,"byte_end":206861,"line_start":104,"line_end":104,"column_start":59,"column_end":67},"kind":{"Impl":{"id":112}},"from":{"krate":5,"index":1217},"to":{"krate":0,"index":4768}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/extend.rs","byte_start":207198,"byte_end":207206,"line_start":118,"line_end":118,"column_start":31,"column_end":39},"kind":{"Impl":{"id":113}},"from":{"krate":5,"index":7140},"to":{"krate":0,"index":4768}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/extend.rs","byte_start":207501,"byte_end":207509,"line_start":131,"line_end":131,"column_start":39,"column_end":47},"kind":{"Impl":{"id":114}},"from":{"krate":5,"index":7140},"to":{"krate":0,"index":4768}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/extend.rs","byte_start":207980,"byte_end":207987,"line_start":152,"line_end":152,"column_start":42,"column_end":49},"kind":{"Impl":{"id":115}},"from":{"krate":1,"index":1090},"to":{"krate":0,"index":4768}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/extend.rs","byte_start":208443,"byte_end":208450,"line_start":168,"line_end":168,"column_start":62,"column_end":69},"kind":{"Impl":{"id":116}},"from":{"krate":1,"index":1090},"to":{"krate":0,"index":4768}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/extend.rs","byte_start":208978,"byte_end":208985,"line_start":191,"line_end":191,"column_start":34,"column_end":41},"kind":{"Impl":{"id":117}},"from":{"krate":1,"index":1800},"to":{"krate":0,"index":4768}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/extend.rs","byte_start":209318,"byte_end":209325,"line_start":205,"line_end":205,"column_start":42,"column_end":49},"kind":{"Impl":{"id":118}},"from":{"krate":1,"index":1800},"to":{"krate":0,"index":4768}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/extend.rs","byte_start":209778,"byte_end":209788,"line_start":224,"line_end":224,"column_start":31,"column_end":41},"kind":{"Impl":{"id":119}},"from":{"krate":5,"index":3076},"to":{"krate":0,"index":4768}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/extend.rs","byte_start":210229,"byte_end":210239,"line_start":241,"line_end":241,"column_start":39,"column_end":49},"kind":{"Impl":{"id":120}},"from":{"krate":5,"index":3076},"to":{"krate":0,"index":4768}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/extend.rs","byte_start":210644,"byte_end":210650,"line_start":259,"line_end":259,"column_start":31,"column_end":37},"kind":{"Impl":{"id":121}},"from":{"krate":5,"index":7282},"to":{"krate":0,"index":4768}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/extend.rs","byte_start":211306,"byte_end":211312,"line_start":278,"line_end":278,"column_start":39,"column_end":45},"kind":{"Impl":{"id":122}},"from":{"krate":5,"index":7282},"to":{"krate":0,"index":4768}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/extend.rs","byte_start":211780,"byte_end":211786,"line_start":293,"line_end":293,"column_start":38,"column_end":44},"kind":{"Impl":{"id":123}},"from":{"krate":5,"index":7282},"to":{"krate":0,"index":4768}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/extend.rs","byte_start":212048,"byte_end":212054,"line_start":303,"line_end":303,"column_start":33,"column_end":39},"kind":{"Impl":{"id":124}},"from":{"krate":5,"index":7282},"to":{"krate":0,"index":4768}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/extend.rs","byte_start":212331,"byte_end":212337,"line_start":313,"line_end":313,"column_start":43,"column_end":49},"kind":{"Impl":{"id":125}},"from":{"krate":5,"index":7282},"to":{"krate":0,"index":4768}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/extend.rs","byte_start":212709,"byte_end":212717,"line_start":327,"line_end":327,"column_start":31,"column_end":39},"kind":{"Impl":{"id":126}},"from":{"krate":5,"index":3811},"to":{"krate":0,"index":4768}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/extend.rs","byte_start":213004,"byte_end":213012,"line_start":340,"line_end":340,"column_start":39,"column_end":47},"kind":{"Impl":{"id":127}},"from":{"krate":5,"index":3811},"to":{"krate":0,"index":4768}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/extend.rs","byte_start":213425,"byte_end":213428,"line_start":356,"line_end":356,"column_start":39,"column_end":42},"kind":{"Impl":{"id":128}},"from":{"krate":5,"index":6769},"to":{"krate":0,"index":4768}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/filter.rs","byte_start":214483,"byte_end":214489,"line_start":18,"line_end":18,"column_start":48,"column_end":54},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":6606},"to":{"krate":2,"index":8721}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/filter.rs","byte_start":214649,"byte_end":214655,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":6606},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/filter.rs","byte_start":214867,"byte_end":214873,"line_start":34,"line_end":34,"column_start":33,"column_end":39},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":6606},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/filter.rs","byte_start":215417,"byte_end":215431,"line_start":58,"line_end":58,"column_start":16,"column_end":30},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":1184},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/filter.rs","byte_start":215582,"byte_end":215596,"line_start":64,"line_end":64,"column_start":39,"column_end":53},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":1184},"to":{"krate":0,"index":359}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/filter.rs","byte_start":216340,"byte_end":216354,"line_start":94,"line_end":94,"column_start":48,"column_end":62},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":1184},"to":{"krate":0,"index":378}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/filter.rs","byte_start":216737,"byte_end":216749,"line_start":113,"line_end":113,"column_start":33,"column_end":45},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":1213},"to":{"krate":0,"index":367}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/filter_map.rs","byte_start":218025,"byte_end":218034,"line_start":18,"line_end":18,"column_start":48,"column_end":57},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":6615},"to":{"krate":2,"index":8721}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/filter_map.rs","byte_start":218241,"byte_end":218250,"line_start":26,"line_end":26,"column_start":30,"column_end":39},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":6615},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/filter_map.rs","byte_start":218440,"byte_end":218449,"line_start":33,"line_end":33,"column_start":36,"column_end":45},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":6615},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/filter_map.rs","byte_start":219012,"byte_end":219029,"line_start":58,"line_end":58,"column_start":20,"column_end":37},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1253},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/filter_map.rs","byte_start":219182,"byte_end":219199,"line_start":64,"line_end":64,"column_start":38,"column_end":55},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1253},"to":{"krate":0,"index":359}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/filter_map.rs","byte_start":219985,"byte_end":220002,"line_start":95,"line_end":95,"column_start":47,"column_end":64},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1253},"to":{"krate":0,"index":378}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/filter_map.rs","byte_start":220403,"byte_end":220418,"line_start":114,"line_end":114,"column_start":36,"column_end":51},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1284},"to":{"krate":0,"index":367}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/find.rs","byte_start":221588,"byte_end":221600,"line_start":20,"line_end":20,"column_start":13,"column_end":25},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":1313},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/find.rs","byte_start":221754,"byte_end":221766,"line_start":26,"line_end":26,"column_start":36,"column_end":48},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1313},"to":{"krate":0,"index":359}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/find.rs","byte_start":222351,"byte_end":222363,"line_start":52,"line_end":52,"column_start":45,"column_end":57},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1313},"to":{"krate":0,"index":378}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/find.rs","byte_start":222723,"byte_end":222733,"line_start":72,"line_end":72,"column_start":30,"column_end":40},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1338},"to":{"krate":0,"index":367}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/find.rs","byte_start":223760,"byte_end":223771,"line_start":116,"line_end":116,"column_start":32,"column_end":43},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1359},"to":{"krate":0,"index":375}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/find_first_last/mod.rs","byte_start":226293,"byte_end":226305,"line_start":69,"line_end":69,"column_start":13,"column_end":25},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":1384},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/find_first_last/mod.rs","byte_start":226855,"byte_end":226867,"line_start":88,"line_end":88,"column_start":32,"column_end":44},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":1384},"to":{"krate":0,"index":359}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/find_first_last/mod.rs","byte_start":227933,"byte_end":227945,"line_start":129,"line_end":129,"column_start":41,"column_end":53},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":1384},"to":{"krate":0,"index":378}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/find_first_last/mod.rs","byte_start":229503,"byte_end":229513,"line_start":174,"line_end":174,"column_start":51,"column_end":61},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1413},"to":{"krate":0,"index":367}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/find_first_last/mod.rs","byte_start":231221,"byte_end":231232,"line_start":231,"line_end":231,"column_start":32,"column_end":43},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":1430},"to":{"krate":0,"index":375}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flat_map.rs","byte_start":232052,"byte_end":232059,"line_start":18,"line_end":18,"column_start":48,"column_end":55},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":6632},"to":{"krate":2,"index":8721}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flat_map.rs","byte_start":232238,"byte_end":232245,"line_start":24,"line_end":24,"column_start":30,"column_end":37},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":6632},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flat_map.rs","byte_start":232426,"byte_end":232433,"line_start":31,"line_end":31,"column_start":37,"column_end":44},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":6632},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flat_map.rs","byte_start":232999,"byte_end":233014,"line_start":56,"line_end":56,"column_start":16,"column_end":31},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":1460},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flat_map.rs","byte_start":233159,"byte_end":233174,"line_start":62,"line_end":62,"column_start":38,"column_end":53},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":1460},"to":{"krate":0,"index":359}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flat_map.rs","byte_start":233966,"byte_end":233981,"line_start":94,"line_end":94,"column_start":47,"column_end":62},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":1460},"to":{"krate":0,"index":378}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flat_map.rs","byte_start":234421,"byte_end":234434,"line_start":115,"line_end":115,"column_start":36,"column_end":49},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":1491},"to":{"krate":0,"index":367}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flat_map_iter.rs","byte_start":236026,"byte_end":236037,"line_start":18,"line_end":18,"column_start":48,"column_end":59},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":6641},"to":{"krate":2,"index":8721}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flat_map_iter.rs","byte_start":236246,"byte_end":236257,"line_start":26,"line_end":26,"column_start":30,"column_end":41},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":6641},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flat_map_iter.rs","byte_start":236446,"byte_end":236457,"line_start":33,"line_end":33,"column_start":37,"column_end":48},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":6641},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flat_map_iter.rs","byte_start":237043,"byte_end":237062,"line_start":59,"line_end":59,"column_start":16,"column_end":35},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":1534},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flat_map_iter.rs","byte_start":237211,"byte_end":237230,"line_start":65,"line_end":65,"column_start":38,"column_end":57},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":1534},"to":{"krate":0,"index":359}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flat_map_iter.rs","byte_start":238013,"byte_end":238032,"line_start":96,"line_end":96,"column_start":47,"column_end":66},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":1534},"to":{"krate":0,"index":378}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flat_map_iter.rs","byte_start":238444,"byte_end":238461,"line_start":116,"line_end":116,"column_start":36,"column_end":53},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":1565},"to":{"krate":0,"index":367}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flatten.rs","byte_start":239678,"byte_end":239685,"line_start":15,"line_end":15,"column_start":9,"column_end":16},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":6650},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flatten.rs","byte_start":239903,"byte_end":239910,"line_start":26,"line_end":26,"column_start":30,"column_end":37},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":6650},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flatten.rs","byte_start":240422,"byte_end":240437,"line_start":49,"line_end":49,"column_start":9,"column_end":24},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":1594},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flatten.rs","byte_start":240542,"byte_end":240557,"line_start":55,"line_end":55,"column_start":28,"column_end":43},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":1594},"to":{"krate":0,"index":359}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flatten.rs","byte_start":241240,"byte_end":241255,"line_start":85,"line_end":85,"column_start":37,"column_end":52},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":1594},"to":{"krate":0,"index":378}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flatten.rs","byte_start":241613,"byte_end":241626,"line_start":104,"line_end":104,"column_start":26,"column_end":39},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":1614},"to":{"krate":0,"index":367}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flatten_iter.rs","byte_start":243042,"byte_end":243053,"line_start":15,"line_end":15,"column_start":9,"column_end":20},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":6659},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flatten_iter.rs","byte_start":243314,"byte_end":243325,"line_start":27,"line_end":27,"column_start":30,"column_end":41},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":6659},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flatten_iter.rs","byte_start":243872,"byte_end":243891,"line_start":51,"line_end":51,"column_start":9,"column_end":28},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":1637},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flatten_iter.rs","byte_start":244000,"byte_end":244019,"line_start":57,"line_end":57,"column_start":28,"column_end":47},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":1637},"to":{"krate":0,"index":359}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flatten_iter.rs","byte_start":244693,"byte_end":244712,"line_start":86,"line_end":86,"column_start":37,"column_end":56},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":1637},"to":{"krate":0,"index":378}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/flatten_iter.rs","byte_start":245042,"byte_end":245059,"line_start":104,"line_end":104,"column_start":26,"column_end":43},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":1657},"to":{"krate":0,"index":367}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/fold.rs","byte_start":245738,"byte_end":245742,"line_start":6,"line_end":6,"column_start":19,"column_end":23},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":6668},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/fold.rs","byte_start":246539,"byte_end":246543,"line_start":35,"line_end":35,"column_start":52,"column_end":56},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":6668},"to":{"krate":2,"index":8721}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/fold.rs","byte_start":246733,"byte_end":246737,"line_start":41,"line_end":41,"column_start":40,"column_end":44},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":6668},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/fold.rs","byte_start":247346,"byte_end":247358,"line_start":69,"line_end":69,"column_start":42,"column_end":54},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":1698},"to":{"krate":0,"index":359}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/fold.rs","byte_start":248214,"byte_end":248226,"line_start":105,"line_end":105,"column_start":51,"column_end":63},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":1698},"to":{"krate":0,"index":378}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/fold.rs","byte_start":248695,"byte_end":248705,"line_start":130,"line_end":130,"column_start":37,"column_end":47},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":1728},"to":{"krate":0,"index":367}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/fold.rs","byte_start":249865,"byte_end":249873,"line_start":182,"line_end":182,"column_start":15,"column_end":23},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":6680},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/fold.rs","byte_start":250662,"byte_end":250670,"line_start":210,"line_end":210,"column_start":58,"column_end":66},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":6680},"to":{"krate":2,"index":8721}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/fold.rs","byte_start":250924,"byte_end":250932,"line_start":219,"line_end":219,"column_start":36,"column_end":44},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":6680},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/fold.rs","byte_start":251500,"byte_end":251516,"line_start":246,"line_end":246,"column_start":38,"column_end":54},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":1771},"to":{"krate":0,"index":359}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/fold.rs","byte_start":252434,"byte_end":252450,"line_start":285,"line_end":285,"column_start":47,"column_end":63},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":1771},"to":{"krate":0,"index":378}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/for_each.rs","byte_start":253179,"byte_end":253194,"line_start":19,"line_end":19,"column_start":32,"column_end":47},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":1809},"to":{"krate":0,"index":359}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/for_each.rs","byte_start":253590,"byte_end":253605,"line_start":40,"line_end":40,"column_start":30,"column_end":45},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":1809},"to":{"krate":0,"index":367}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/for_each.rs","byte_start":254029,"byte_end":254044,"line_start":66,"line_end":66,"column_start":41,"column_end":56},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":1809},"to":{"krate":0,"index":378}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/from_par_iter.rs","byte_start":254930,"byte_end":254933,"line_start":22,"line_end":22,"column_start":37,"column_end":40},"kind":{"Impl":{"id":193}},"from":{"krate":5,"index":6769},"to":{"krate":0,"index":4764}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/from_par_iter.rs","byte_start":255203,"byte_end":255211,"line_start":35,"line_end":35,"column_start":37,"column_end":45},"kind":{"Impl":{"id":194}},"from":{"krate":5,"index":3811},"to":{"krate":0,"index":4764}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/from_par_iter.rs","byte_start":255568,"byte_end":255578,"line_start":49,"line_end":49,"column_start":37,"column_end":47},"kind":{"Impl":{"id":195}},"from":{"krate":5,"index":668},"to":{"krate":0,"index":4764}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/from_par_iter.rs","byte_start":255888,"byte_end":255898,"line_start":63,"line_end":63,"column_start":37,"column_end":47},"kind":{"Impl":{"id":196}},"from":{"krate":5,"index":3076},"to":{"krate":0,"index":4764}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/from_par_iter.rs","byte_start":256362,"byte_end":256369,"line_start":79,"line_end":79,"column_start":48,"column_end":55},"kind":{"Impl":{"id":197}},"from":{"krate":1,"index":1090},"to":{"krate":0,"index":4764}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/from_par_iter.rs","byte_start":256904,"byte_end":256912,"line_start":97,"line_end":97,"column_start":45,"column_end":53},"kind":{"Impl":{"id":198}},"from":{"krate":5,"index":1217},"to":{"krate":0,"index":4764}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/from_par_iter.rs","byte_start":257212,"byte_end":257219,"line_start":111,"line_end":111,"column_start":40,"column_end":47},"kind":{"Impl":{"id":199}},"from":{"krate":1,"index":1800},"to":{"krate":0,"index":4764}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/from_par_iter.rs","byte_start":257542,"byte_end":257550,"line_start":125,"line_end":125,"column_start":37,"column_end":45},"kind":{"Impl":{"id":200}},"from":{"krate":5,"index":7140},"to":{"krate":0,"index":4764}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/from_par_iter.rs","byte_start":257829,"byte_end":257835,"line_start":138,"line_end":138,"column_start":37,"column_end":43},"kind":{"Impl":{"id":201}},"from":{"krate":5,"index":7282},"to":{"krate":0,"index":4764}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/from_par_iter.rs","byte_start":258097,"byte_end":258103,"line_start":148,"line_end":148,"column_start":45,"column_end":51},"kind":{"Impl":{"id":202}},"from":{"krate":5,"index":7282},"to":{"krate":0,"index":4764}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/from_par_iter.rs","byte_start":258371,"byte_end":258377,"line_start":158,"line_end":158,"column_start":44,"column_end":50},"kind":{"Impl":{"id":203}},"from":{"krate":5,"index":7282},"to":{"krate":0,"index":4764}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/from_par_iter.rs","byte_start":258641,"byte_end":258647,"line_start":168,"line_end":168,"column_start":39,"column_end":45},"kind":{"Impl":{"id":204}},"from":{"krate":5,"index":7282},"to":{"krate":0,"index":4764}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/from_par_iter.rs","byte_start":258918,"byte_end":258924,"line_start":178,"line_end":178,"column_start":49,"column_end":55},"kind":{"Impl":{"id":205}},"from":{"krate":5,"index":7282},"to":{"krate":0,"index":4764}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/from_par_iter.rs","byte_start":259368,"byte_end":259371,"line_start":192,"line_end":192,"column_start":52,"column_end":55},"kind":{"Impl":{"id":206}},"from":{"krate":5,"index":543},"to":{"krate":0,"index":4764}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/inspect.rs","byte_start":260905,"byte_end":260912,"line_start":21,"line_end":21,"column_start":48,"column_end":55},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":6692},"to":{"krate":2,"index":8721}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/inspect.rs","byte_start":261073,"byte_end":261080,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":6692},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/inspect.rs","byte_start":261296,"byte_end":261303,"line_start":37,"line_end":37,"column_start":33,"column_end":40},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":6692},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/inspect.rs","byte_start":261763,"byte_end":261770,"line_start":57,"line_end":57,"column_start":40,"column_end":47},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":6692},"to":{"krate":0,"index":4699}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/inspect.rs","byte_start":262512,"byte_end":262520,"line_start":88,"line_end":88,"column_start":48,"column_end":56},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":1991},"to":{"krate":0,"index":345}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/inspect.rs","byte_start":263191,"byte_end":263206,"line_start":116,"line_end":116,"column_start":29,"column_end":44},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":2003},"to":{"krate":0,"index":350}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/inspect.rs","byte_start":264416,"byte_end":264431,"line_start":170,"line_end":170,"column_start":16,"column_end":31},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":2021},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/inspect.rs","byte_start":264581,"byte_end":264596,"line_start":176,"line_end":176,"column_start":35,"column_end":50},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":2021},"to":{"krate":0,"index":359}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/inspect.rs","byte_start":265339,"byte_end":265354,"line_start":206,"line_end":206,"column_start":44,"column_end":59},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":2021},"to":{"krate":0,"index":378}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/inspect.rs","byte_start":265733,"byte_end":265746,"line_start":225,"line_end":225,"column_start":33,"column_end":46},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":2050},"to":{"krate":0,"index":367}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/interleave.rs","byte_start":267070,"byte_end":267080,"line_start":23,"line_end":23,"column_start":12,"column_end":22},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":6701},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/interleave.rs","byte_start":267332,"byte_end":267342,"line_start":34,"line_end":34,"column_start":33,"column_end":43},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":6701},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/interleave.rs","byte_start":267719,"byte_end":267729,"line_start":53,"line_end":53,"column_start":40,"column_end":50},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":6701},"to":{"krate":0,"index":4699}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/interleave.rs","byte_start":268625,"byte_end":268634,"line_start":90,"line_end":90,"column_start":51,"column_end":60},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":2095},"to":{"krate":0,"index":345}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/interleave.rs","byte_start":269444,"byte_end":269453,"line_start":119,"line_end":119,"column_start":51,"column_end":60},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":2109},"to":{"krate":0,"index":345}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/interleave.rs","byte_start":270234,"byte_end":270252,"line_start":155,"line_end":155,"column_start":12,"column_end":30},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":2123},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/interleave.rs","byte_start":270572,"byte_end":270590,"line_start":171,"line_end":171,"column_start":25,"column_end":43},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":2123},"to":{"krate":0,"index":350}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/interleave.rs","byte_start":273455,"byte_end":273468,"line_start":267,"line_end":267,"column_start":25,"column_end":38},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":2145},"to":{"krate":2,"index":7173}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/interleave.rs","byte_start":274601,"byte_end":274614,"line_start":306,"line_end":306,"column_start":36,"column_end":49},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":2145},"to":{"krate":2,"index":7037}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/interleave.rs","byte_start":275175,"byte_end":275188,"line_start":327,"line_end":327,"column_start":34,"column_end":47},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":2145},"to":{"krate":2,"index":7062}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/interleave_shortest.rs","byte_start":276115,"byte_end":276133,"line_start":23,"line_end":23,"column_start":12,"column_end":30},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":6714},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/interleave_shortest.rs","byte_start":276775,"byte_end":276793,"line_start":44,"line_end":44,"column_start":33,"column_end":51},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":6714},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/interleave_shortest.rs","byte_start":277170,"byte_end":277188,"line_start":63,"line_end":63,"column_start":40,"column_end":58},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":6714},"to":{"krate":0,"index":4699}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/intersperse.rs","byte_start":278290,"byte_end":278301,"line_start":23,"line_end":23,"column_start":9,"column_end":20},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":6726},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/intersperse.rs","byte_start":278532,"byte_end":278543,"line_start":34,"line_end":34,"column_start":30,"column_end":41},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":6726},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/intersperse.rs","byte_start":279073,"byte_end":279084,"line_start":57,"line_end":57,"column_start":37,"column_end":48},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":6726},"to":{"krate":0,"index":4699}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/intersperse.rs","byte_start":279991,"byte_end":279999,"line_start":96,"line_end":96,"column_start":45,"column_end":53},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":2216},"to":{"krate":0,"index":345}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/intersperse.rs","byte_start":280566,"byte_end":280585,"line_start":124,"line_end":124,"column_start":9,"column_end":28},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":2228},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/intersperse.rs","byte_start":280826,"byte_end":280845,"line_start":138,"line_end":138,"column_start":22,"column_end":41},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":2228},"to":{"krate":0,"index":350}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/intersperse.rs","byte_start":283020,"byte_end":283035,"line_start":217,"line_end":217,"column_start":22,"column_end":37},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":2247},"to":{"krate":2,"index":7173}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/intersperse.rs","byte_start":283807,"byte_end":283822,"line_start":246,"line_end":246,"column_start":33,"column_end":48},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":2247},"to":{"krate":2,"index":7037}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/intersperse.rs","byte_start":284470,"byte_end":284485,"line_start":268,"line_end":268,"column_start":31,"column_end":46},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":2247},"to":{"krate":2,"index":7062}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/intersperse.rs","byte_start":284833,"byte_end":284852,"line_start":285,"line_end":285,"column_start":12,"column_end":31},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":2264},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/intersperse.rs","byte_start":285077,"byte_end":285096,"line_start":298,"line_end":298,"column_start":28,"column_end":47},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":2264},"to":{"krate":0,"index":359}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/intersperse.rs","byte_start":286174,"byte_end":286193,"line_start":335,"line_end":335,"column_start":37,"column_end":56},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":2264},"to":{"krate":0,"index":378}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/intersperse.rs","byte_start":286733,"byte_end":286750,"line_start":361,"line_end":361,"column_start":26,"column_end":43},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":2288},"to":{"krate":0,"index":367}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/len.rs","byte_start":288473,"byte_end":288479,"line_start":17,"line_end":17,"column_start":9,"column_end":15},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":6736},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/len.rs","byte_start":288684,"byte_end":288690,"line_start":27,"line_end":27,"column_start":30,"column_end":36},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":6736},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/len.rs","byte_start":289025,"byte_end":289031,"line_start":45,"line_end":45,"column_start":37,"column_end":43},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":6736},"to":{"krate":0,"index":4699}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/len.rs","byte_start":289609,"byte_end":289617,"line_start":71,"line_end":71,"column_start":45,"column_end":53},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":2326},"to":{"krate":0,"index":345}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/len.rs","byte_start":290252,"byte_end":290266,"line_start":98,"line_end":98,"column_start":22,"column_end":36},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":2336},"to":{"krate":0,"index":350}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/len.rs","byte_start":291558,"byte_end":291564,"line_start":151,"line_end":151,"column_start":9,"column_end":15},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":6746},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/len.rs","byte_start":291769,"byte_end":291775,"line_start":161,"line_end":161,"column_start":30,"column_end":36},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":6746},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/len.rs","byte_start":292110,"byte_end":292116,"line_start":179,"line_end":179,"column_start":37,"column_end":43},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":6746},"to":{"krate":0,"index":4699}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/len.rs","byte_start":292694,"byte_end":292702,"line_start":205,"line_end":205,"column_start":45,"column_end":53},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":2366},"to":{"krate":0,"index":345}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/len.rs","byte_start":293337,"byte_end":293351,"line_start":232,"line_end":232,"column_start":22,"column_end":36},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":2376},"to":{"krate":0,"index":350}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map.rs","byte_start":294718,"byte_end":294721,"line_start":20,"line_end":20,"column_start":48,"column_end":51},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":6756},"to":{"krate":2,"index":8721}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map.rs","byte_start":294878,"byte_end":294881,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":6756},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map.rs","byte_start":295084,"byte_end":295087,"line_start":36,"line_end":36,"column_start":36,"column_end":39},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":6756},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map.rs","byte_start":295561,"byte_end":295564,"line_start":57,"line_end":57,"column_start":43,"column_end":46},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":6756},"to":{"krate":0,"index":4699}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map.rs","byte_start":296306,"byte_end":296314,"line_start":89,"line_end":89,"column_start":51,"column_end":59},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":2428},"to":{"krate":0,"index":345}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map.rs","byte_start":296993,"byte_end":297004,"line_start":118,"line_end":118,"column_start":32,"column_end":43},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":2441},"to":{"krate":0,"index":350}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map.rs","byte_start":298176,"byte_end":298187,"line_start":172,"line_end":172,"column_start":16,"column_end":27},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":2460},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map.rs","byte_start":298328,"byte_end":298339,"line_start":178,"line_end":178,"column_start":38,"column_end":49},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":2460},"to":{"krate":0,"index":359}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map.rs","byte_start":299078,"byte_end":299089,"line_start":209,"line_end":209,"column_start":47,"column_end":58},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":2460},"to":{"krate":0,"index":378}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map.rs","byte_start":299480,"byte_end":299489,"line_start":229,"line_end":229,"column_start":36,"column_end":45},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":2491},"to":{"krate":0,"index":367}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map_with.rs","byte_start":300726,"byte_end":300733,"line_start":20,"line_end":20,"column_start":58,"column_end":65},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":6765},"to":{"krate":2,"index":8721}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map_with.rs","byte_start":300965,"byte_end":300972,"line_start":29,"line_end":29,"column_start":15,"column_end":22},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":6765},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map_with.rs","byte_start":301204,"byte_end":301211,"line_start":39,"line_end":39,"column_start":39,"column_end":46},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":6765},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map_with.rs","byte_start":301727,"byte_end":301734,"line_start":61,"line_end":61,"column_start":46,"column_end":53},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":6765},"to":{"krate":0,"index":4699}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map_with.rs","byte_start":302579,"byte_end":302587,"line_start":96,"line_end":96,"column_start":54,"column_end":62},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":2548},"to":{"krate":0,"index":345}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map_with.rs","byte_start":303370,"byte_end":303385,"line_start":128,"line_end":128,"column_start":35,"column_end":50},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":2564},"to":{"krate":0,"index":350}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map_with.rs","byte_start":304718,"byte_end":304729,"line_start":188,"line_end":188,"column_start":35,"column_end":46},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":2586},"to":{"krate":2,"index":7173}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map_with.rs","byte_start":305110,"byte_end":305121,"line_start":206,"line_end":206,"column_start":46,"column_end":57},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":2586},"to":{"krate":2,"index":7037}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map_with.rs","byte_start":305412,"byte_end":305423,"line_start":218,"line_end":218,"column_start":44,"column_end":55},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":2586},"to":{"krate":2,"index":7062}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map_with.rs","byte_start":305737,"byte_end":305752,"line_start":235,"line_end":235,"column_start":19,"column_end":34},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":2616},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map_with.rs","byte_start":305918,"byte_end":305933,"line_start":241,"line_end":241,"column_start":41,"column_end":56},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":2616},"to":{"krate":0,"index":359}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map_with.rs","byte_start":306777,"byte_end":306792,"line_start":274,"line_end":274,"column_start":50,"column_end":65},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":2616},"to":{"krate":0,"index":378}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map_with.rs","byte_start":307252,"byte_end":307265,"line_start":296,"line_end":296,"column_start":39,"column_end":52},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":2652},"to":{"krate":0,"index":367}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map_with.rs","byte_start":308796,"byte_end":308803,"line_start":352,"line_end":352,"column_start":54,"column_end":61},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":6777},"to":{"krate":2,"index":8721}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map_with.rs","byte_start":308976,"byte_end":308983,"line_start":358,"line_end":358,"column_start":18,"column_end":25},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":6777},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map_with.rs","byte_start":309227,"byte_end":309234,"line_start":368,"line_end":368,"column_start":45,"column_end":52},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":6777},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map_with.rs","byte_start":309774,"byte_end":309781,"line_start":390,"line_end":390,"column_start":52,"column_end":59},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":6777},"to":{"krate":0,"index":4699}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map_with.rs","byte_start":310656,"byte_end":310664,"line_start":425,"line_end":425,"column_start":60,"column_end":68},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":2712},"to":{"krate":0,"index":345}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map_with.rs","byte_start":311474,"byte_end":311489,"line_start":457,"line_end":457,"column_start":41,"column_end":56},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":2729},"to":{"krate":0,"index":350}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map_with.rs","byte_start":312939,"byte_end":312954,"line_start":520,"line_end":520,"column_start":22,"column_end":37},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":2752},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map_with.rs","byte_start":313136,"byte_end":313151,"line_start":526,"line_end":526,"column_start":47,"column_end":62},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":2752},"to":{"krate":0,"index":359}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/map_with.rs","byte_start":314007,"byte_end":314022,"line_start":559,"line_end":559,"column_start":56,"column_end":71},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":2752},"to":{"krate":0,"index":378}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/noop.rs","byte_start":323400,"byte_end":323412,"line_start":5,"line_end":5,"column_start":25,"column_end":37},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":2799},"to":{"krate":0,"index":359}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/noop.rs","byte_start":323756,"byte_end":323768,"line_start":23,"line_end":23,"column_start":23,"column_end":35},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":2799},"to":{"krate":0,"index":367}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/noop.rs","byte_start":324124,"byte_end":324136,"line_start":45,"line_end":45,"column_start":34,"column_end":46},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":2799},"to":{"krate":0,"index":378}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/noop.rs","byte_start":324330,"byte_end":324341,"line_start":57,"line_end":57,"column_start":22,"column_end":33},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":2821},"to":{"krate":0,"index":375}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/once.rs","byte_start":325309,"byte_end":325313,"line_start":34,"line_end":34,"column_start":36,"column_end":40},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":7668},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/once.rs","byte_start":325599,"byte_end":325603,"line_start":49,"line_end":49,"column_start":43,"column_end":47},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":7668},"to":{"krate":0,"index":4699}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/panic_fuse.rs","byte_start":326790,"byte_end":326794,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":7686},"to":{"krate":2,"index":3049}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/panic_fuse.rs","byte_start":326952,"byte_end":326956,"line_start":32,"line_end":32,"column_start":10,"column_end":14},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":7686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/panic_fuse.rs","byte_start":327066,"byte_end":327075,"line_start":39,"line_end":39,"column_start":9,"column_end":18},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":7677},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/panic_fuse.rs","byte_start":327270,"byte_end":327279,"line_start":49,"line_end":49,"column_start":30,"column_end":39},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":7677},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/panic_fuse.rs","byte_start":327789,"byte_end":327798,"line_start":72,"line_end":72,"column_start":37,"column_end":46},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":7677},"to":{"krate":0,"index":4699}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/panic_fuse.rs","byte_start":328498,"byte_end":328506,"line_start":102,"line_end":102,"column_start":45,"column_end":53},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":2878},"to":{"krate":0,"index":345}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/panic_fuse.rs","byte_start":329215,"byte_end":329232,"line_start":131,"line_end":131,"column_start":26,"column_end":43},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":2887},"to":{"krate":0,"index":350}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/panic_fuse.rs","byte_start":330330,"byte_end":330343,"line_start":183,"line_end":183,"column_start":26,"column_end":39},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":2903},"to":{"krate":2,"index":7173}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/panic_fuse.rs","byte_start":330690,"byte_end":330703,"line_start":202,"line_end":202,"column_start":37,"column_end":50},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":2903},"to":{"krate":2,"index":7037}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/panic_fuse.rs","byte_start":330954,"byte_end":330967,"line_start":215,"line_end":215,"column_start":35,"column_end":48},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":2903},"to":{"krate":2,"index":7062}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/panic_fuse.rs","byte_start":331278,"byte_end":331295,"line_start":232,"line_end":232,"column_start":32,"column_end":49},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":2922},"to":{"krate":0,"index":359}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/panic_fuse.rs","byte_start":332253,"byte_end":332270,"line_start":270,"line_end":270,"column_start":41,"column_end":58},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":2922},"to":{"krate":0,"index":378}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/panic_fuse.rs","byte_start":332749,"byte_end":332764,"line_start":294,"line_end":294,"column_start":30,"column_end":45},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":2943},"to":{"krate":0,"index":367}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/panic_fuse.rs","byte_start":333613,"byte_end":333629,"line_start":335,"line_end":335,"column_start":31,"column_end":47},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":2963},"to":{"krate":0,"index":375}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/par_bridge.rs","byte_start":335373,"byte_end":335378,"line_start":46,"line_end":46,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2826},"to":{"krate":0,"index":3023}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/par_bridge.rs","byte_start":335538,"byte_end":335539,"line_start":51,"line_end":51,"column_start":45,"column_end":46},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":3026},"to":{"krate":0,"index":3023}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/par_bridge.rs","byte_start":336049,"byte_end":336059,"line_start":71,"line_end":71,"column_start":50,"column_end":60},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":7693},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/par_bridge.rs","byte_start":337057,"byte_end":337077,"line_start":107,"line_end":107,"column_start":41,"column_end":61},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":3033},"to":{"krate":2,"index":2446}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/par_bridge.rs","byte_start":337369,"byte_end":337389,"line_start":118,"line_end":118,"column_start":60,"column_end":80},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":3033},"to":{"krate":0,"index":382}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/positions.rs","byte_start":341354,"byte_end":341363,"line_start":20,"line_end":20,"column_start":55,"column_end":64},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":7702},"to":{"krate":2,"index":8721}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/positions.rs","byte_start":341552,"byte_end":341561,"line_start":28,"line_end":28,"column_start":12,"column_end":21},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":7702},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/positions.rs","byte_start":341785,"byte_end":341794,"line_start":38,"line_end":38,"column_start":33,"column_end":42},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":7702},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/positions.rs","byte_start":342360,"byte_end":342377,"line_start":63,"line_end":63,"column_start":16,"column_end":33},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":3075},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/positions.rs","byte_start":342595,"byte_end":342612,"line_start":73,"line_end":73,"column_start":35,"column_end":52},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":3075},"to":{"krate":0,"index":359}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/positions.rs","byte_start":343511,"byte_end":343526,"line_start":110,"line_end":110,"column_start":29,"column_end":44},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":3098},"to":{"krate":0,"index":367}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/product.rs","byte_start":344670,"byte_end":344685,"line_start":23,"line_end":23,"column_start":31,"column_end":46},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":3133},"to":{"krate":2,"index":2821}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/product.rs","byte_start":344707,"byte_end":344722,"line_start":25,"line_end":25,"column_start":15,"column_end":30},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":3133},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/product.rs","byte_start":344871,"byte_end":344886,"line_start":33,"line_end":33,"column_start":28,"column_end":43},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":3133},"to":{"krate":0,"index":359}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/product.rs","byte_start":345436,"byte_end":345451,"line_start":60,"line_end":60,"column_start":37,"column_end":52},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":3133},"to":{"krate":0,"index":378}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/product.rs","byte_start":345683,"byte_end":345698,"line_start":73,"line_end":73,"column_start":24,"column_end":39},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":3133},"to":{"krate":0,"index":375}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/product.rs","byte_start":345883,"byte_end":345896,"line_start":86,"line_end":86,"column_start":26,"column_end":39},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":3158},"to":{"krate":0,"index":367}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/reduce.rs","byte_start":346911,"byte_end":346925,"line_start":23,"line_end":23,"column_start":26,"column_end":40},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":3180},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/reduce.rs","byte_start":346967,"byte_end":346981,"line_start":25,"line_end":25,"column_start":27,"column_end":41},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":3180},"to":{"krate":2,"index":2446}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/reduce.rs","byte_start":347083,"byte_end":347097,"line_start":31,"line_end":31,"column_start":36,"column_end":50},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":3180},"to":{"krate":0,"index":359}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/reduce.rs","byte_start":347624,"byte_end":347638,"line_start":57,"line_end":57,"column_start":45,"column_end":59},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":3180},"to":{"krate":0,"index":378}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/reduce.rs","byte_start":347887,"byte_end":347901,"line_start":72,"line_end":72,"column_start":35,"column_end":49},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":3180},"to":{"krate":0,"index":375}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/reduce.rs","byte_start":348142,"byte_end":348154,"line_start":86,"line_end":86,"column_start":30,"column_end":42},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":3219},"to":{"krate":0,"index":367}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/repeat.rs","byte_start":349556,"byte_end":349562,"line_start":30,"line_end":30,"column_start":9,"column_end":15},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":7711},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/repeat.rs","byte_start":350414,"byte_end":350420,"line_start":57,"line_end":57,"column_start":30,"column_end":36},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":7711},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/repeat.rs","byte_start":350870,"byte_end":350884,"line_start":79,"line_end":79,"column_start":45,"column_end":59},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":3256},"to":{"krate":0,"index":382}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/repeat.rs","byte_start":351935,"byte_end":351942,"line_start":126,"line_end":126,"column_start":30,"column_end":37},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":7720},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/repeat.rs","byte_start":352260,"byte_end":352267,"line_start":144,"line_end":144,"column_start":37,"column_end":44},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":7720},"to":{"krate":0,"index":4699}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/repeat.rs","byte_start":352879,"byte_end":352894,"line_start":176,"line_end":176,"column_start":36,"column_end":51},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":3280},"to":{"krate":0,"index":350}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/repeat.rs","byte_start":353691,"byte_end":353695,"line_start":210,"line_end":210,"column_start":29,"column_end":33},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":3290},"to":{"krate":2,"index":7173}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/repeat.rs","byte_start":354073,"byte_end":354077,"line_start":229,"line_end":229,"column_start":40,"column_end":44},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":3290},"to":{"krate":2,"index":7037}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/repeat.rs","byte_start":354206,"byte_end":354210,"line_start":236,"line_end":236,"column_start":38,"column_end":42},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":3290},"to":{"krate":2,"index":7062}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/rev.rs","byte_start":354789,"byte_end":354792,"line_start":16,"line_end":16,"column_start":9,"column_end":12},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":7730},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/rev.rs","byte_start":354974,"byte_end":354977,"line_start":26,"line_end":26,"column_start":30,"column_end":33},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":7730},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/rev.rs","byte_start":355312,"byte_end":355315,"line_start":44,"line_end":44,"column_start":37,"column_end":40},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":7730},"to":{"krate":0,"index":4699}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/rev.rs","byte_start":355885,"byte_end":355893,"line_start":68,"line_end":68,"column_start":45,"column_end":53},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":3327},"to":{"krate":0,"index":345}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/rev.rs","byte_start":356408,"byte_end":356419,"line_start":92,"line_end":92,"column_start":22,"column_end":33},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":3337},"to":{"krate":0,"index":350}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/skip.rs","byte_start":357624,"byte_end":357628,"line_start":18,"line_end":18,"column_start":9,"column_end":13},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":7739},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/skip.rs","byte_start":357861,"byte_end":357865,"line_start":29,"line_end":29,"column_start":30,"column_end":34},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":7739},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/skip.rs","byte_start":358200,"byte_end":358204,"line_start":47,"line_end":47,"column_start":37,"column_end":41},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":7739},"to":{"krate":0,"index":4699}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/skip.rs","byte_start":358785,"byte_end":358793,"line_start":73,"line_end":73,"column_start":45,"column_end":53},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":3374},"to":{"krate":0,"index":345}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":363626,"byte_end":363631,"line_start":124,"line_end":124,"column_start":29,"column_end":34},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":7749},"to":{"krate":2,"index":8721}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":363811,"byte_end":363816,"line_start":130,"line_end":130,"column_start":33,"column_end":38},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":7749},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/splitter.rs","byte_start":364304,"byte_end":364317,"line_start":154,"line_end":154,"column_start":38,"column_end":51},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":3407},"to":{"krate":0,"index":382}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/sum.rs","byte_start":365237,"byte_end":365248,"line_start":23,"line_end":23,"column_start":31,"column_end":42},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":3442},"to":{"krate":2,"index":2821}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/sum.rs","byte_start":365270,"byte_end":365281,"line_start":25,"line_end":25,"column_start":15,"column_end":26},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":3442},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/sum.rs","byte_start":365422,"byte_end":365433,"line_start":33,"line_end":33,"column_start":28,"column_end":39},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":3442},"to":{"krate":0,"index":359}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/sum.rs","byte_start":365900,"byte_end":365911,"line_start":56,"line_end":56,"column_start":37,"column_end":48},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":3442},"to":{"krate":0,"index":378}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/sum.rs","byte_start":366127,"byte_end":366138,"line_start":69,"line_end":69,"column_start":24,"column_end":35},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":3442},"to":{"krate":0,"index":375}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/sum.rs","byte_start":366311,"byte_end":366320,"line_start":82,"line_end":82,"column_start":26,"column_end":35},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":3467},"to":{"krate":0,"index":367}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/take.rs","byte_start":367305,"byte_end":367309,"line_start":17,"line_end":17,"column_start":9,"column_end":13},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":7758},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/take.rs","byte_start":367542,"byte_end":367546,"line_start":28,"line_end":28,"column_start":30,"column_end":34},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":7758},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/take.rs","byte_start":367881,"byte_end":367885,"line_start":46,"line_end":46,"column_start":37,"column_end":41},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":7758},"to":{"krate":0,"index":4699}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/take.rs","byte_start":368448,"byte_end":368456,"line_start":72,"line_end":72,"column_start":45,"column_end":53},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":3501},"to":{"krate":0,"index":345}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/try_fold.rs","byte_start":368970,"byte_end":368977,"line_start":8,"line_end":8,"column_start":19,"column_end":26},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":7768},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/try_fold.rs","byte_start":369879,"byte_end":369886,"line_start":39,"line_end":39,"column_start":55,"column_end":62},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":7768},"to":{"krate":2,"index":8721}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/try_fold.rs","byte_start":370082,"byte_end":370089,"line_start":45,"line_end":45,"column_start":40,"column_end":47},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":7768},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/try_fold.rs","byte_start":370785,"byte_end":370800,"line_start":75,"line_end":75,"column_start":42,"column_end":57},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":3547},"to":{"krate":0,"index":359}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/try_fold.rs","byte_start":371691,"byte_end":371706,"line_start":111,"line_end":111,"column_start":51,"column_end":66},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":3547},"to":{"krate":0,"index":378}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/try_fold.rs","byte_start":372224,"byte_end":372237,"line_start":136,"line_end":136,"column_start":36,"column_end":49},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":3579},"to":{"krate":0,"index":367}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/try_fold.rs","byte_start":372965,"byte_end":372976,"line_start":167,"line_end":167,"column_start":15,"column_end":26},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":7783},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/try_fold.rs","byte_start":373817,"byte_end":373828,"line_start":196,"line_end":196,"column_start":56,"column_end":67},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":7783},"to":{"krate":2,"index":8721}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/try_fold.rs","byte_start":374109,"byte_end":374120,"line_start":208,"line_end":208,"column_start":36,"column_end":47},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":7783},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/try_fold.rs","byte_start":374730,"byte_end":374749,"line_start":236,"line_end":236,"column_start":38,"column_end":57},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":3614},"to":{"krate":0,"index":359}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/try_fold.rs","byte_start":375712,"byte_end":375731,"line_start":276,"line_end":276,"column_start":47,"column_end":66},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":3614},"to":{"krate":0,"index":378}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/try_reduce.rs","byte_start":376807,"byte_end":376824,"line_start":29,"line_end":29,"column_start":26,"column_end":43},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":3662},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/try_reduce.rs","byte_start":376866,"byte_end":376883,"line_start":31,"line_end":31,"column_start":27,"column_end":44},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":3662},"to":{"krate":2,"index":2446}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/try_reduce.rs","byte_start":376985,"byte_end":377002,"line_start":37,"line_end":37,"column_start":36,"column_end":53},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":3662},"to":{"krate":0,"index":359}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/try_reduce.rs","byte_start":377616,"byte_end":377633,"line_start":64,"line_end":64,"column_start":45,"column_end":62},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":3662},"to":{"krate":0,"index":378}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/try_reduce.rs","byte_start":377900,"byte_end":377917,"line_start":79,"line_end":79,"column_start":35,"column_end":52},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":3662},"to":{"krate":0,"index":375}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/try_reduce.rs","byte_start":378393,"byte_end":378408,"line_start":98,"line_end":98,"column_start":30,"column_end":45},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":3702},"to":{"krate":0,"index":367}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/try_reduce_with.rs","byte_start":379748,"byte_end":379769,"line_start":26,"line_end":26,"column_start":22,"column_end":43},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":3736},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/try_reduce_with.rs","byte_start":379803,"byte_end":379824,"line_start":28,"line_end":28,"column_start":23,"column_end":44},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":3736},"to":{"krate":2,"index":2446}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/try_reduce_with.rs","byte_start":379918,"byte_end":379939,"line_start":34,"line_end":34,"column_start":32,"column_end":53},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":3736},"to":{"krate":0,"index":359}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/try_reduce_with.rs","byte_start":380518,"byte_end":380539,"line_start":60,"line_end":60,"column_start":41,"column_end":62},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":3736},"to":{"krate":0,"index":378}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/try_reduce_with.rs","byte_start":380776,"byte_end":380797,"line_start":74,"line_end":74,"column_start":39,"column_end":60},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":3736},"to":{"krate":0,"index":375}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/try_reduce_with.rs","byte_start":381452,"byte_end":381471,"line_start":97,"line_end":97,"column_start":30,"column_end":49},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":3769},"to":{"krate":0,"index":367}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/unzip.rs","byte_start":382679,"byte_end":382683,"line_start":7,"line_end":7,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":2833},"to":{"krate":0,"index":3787}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/unzip.rs","byte_start":382686,"byte_end":382690,"line_start":7,"line_end":7,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2821},"to":{"krate":0,"index":3787}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/unzip.rs","byte_start":385367,"byte_end":385372,"line_start":94,"line_end":94,"column_start":44,"column_end":49},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":3817},"to":{"krate":0,"index":3787}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/unzip.rs","byte_start":386253,"byte_end":386262,"line_start":130,"line_end":130,"column_start":27,"column_end":36},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":3833},"to":{"krate":0,"index":3787}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/unzip.rs","byte_start":387299,"byte_end":387311,"line_start":172,"line_end":172,"column_start":33,"column_end":45},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":3851},"to":{"krate":0,"index":3787}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/unzip.rs","byte_start":387942,"byte_end":387948,"line_start":200,"line_end":200,"column_start":45,"column_end":51},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":3864},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/unzip.rs","byte_start":389349,"byte_end":389355,"line_start":252,"line_end":252,"column_start":42,"column_end":48},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":3881},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/unzip.rs","byte_start":390292,"byte_end":390305,"line_start":292,"line_end":292,"column_start":41,"column_end":54},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":3899},"to":{"krate":0,"index":359}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/unzip.rs","byte_start":391568,"byte_end":391581,"line_start":338,"line_end":338,"column_start":50,"column_end":63},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":3899},"to":{"krate":0,"index":378}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/unzip.rs","byte_start":392245,"byte_end":392256,"line_start":367,"line_end":367,"column_start":39,"column_end":50},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":3927},"to":{"krate":0,"index":367}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/unzip.rs","byte_start":392997,"byte_end":393009,"line_start":400,"line_end":400,"column_start":40,"column_end":52},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":3945},"to":{"krate":0,"index":375}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/unzip.rs","byte_start":394093,"byte_end":394101,"line_start":446,"line_end":446,"column_start":38,"column_end":46},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":3970},"to":{"krate":0,"index":3787}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/update.rs","byte_start":395082,"byte_end":395088,"line_start":20,"line_end":20,"column_start":48,"column_end":54},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":7795},"to":{"krate":2,"index":8721}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/update.rs","byte_start":395248,"byte_end":395254,"line_start":26,"line_end":26,"column_start":12,"column_end":18},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":7795},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/update.rs","byte_start":395466,"byte_end":395472,"line_start":36,"line_end":36,"column_start":33,"column_end":39},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":7795},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/update.rs","byte_start":395934,"byte_end":395940,"line_start":56,"line_end":56,"column_start":40,"column_end":46},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":7795},"to":{"krate":0,"index":4699}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/update.rs","byte_start":396681,"byte_end":396689,"line_start":87,"line_end":87,"column_start":48,"column_end":56},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":4013},"to":{"krate":0,"index":345}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/update.rs","byte_start":397366,"byte_end":397380,"line_start":115,"line_end":115,"column_start":29,"column_end":43},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":4025},"to":{"krate":0,"index":350}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/update.rs","byte_start":398640,"byte_end":398654,"line_start":171,"line_end":171,"column_start":16,"column_end":30},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":4043},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/update.rs","byte_start":398801,"byte_end":398815,"line_start":177,"line_end":177,"column_start":35,"column_end":49},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":4043},"to":{"krate":0,"index":359}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/update.rs","byte_start":399561,"byte_end":399575,"line_start":207,"line_end":207,"column_start":44,"column_end":58},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":4043},"to":{"krate":0,"index":378}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/update.rs","byte_start":400096,"byte_end":400108,"line_start":233,"line_end":233,"column_start":33,"column_end":45},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":4072},"to":{"krate":0,"index":367}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/update.rs","byte_start":401054,"byte_end":401063,"line_start":277,"line_end":277,"column_start":25,"column_end":34},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":7804},"to":{"krate":2,"index":7173}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/update.rs","byte_start":401813,"byte_end":401822,"line_start":310,"line_end":310,"column_start":34,"column_end":43},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":7804},"to":{"krate":2,"index":7062}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/update.rs","byte_start":401926,"byte_end":401935,"line_start":317,"line_end":317,"column_start":36,"column_end":45},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":7804},"to":{"krate":2,"index":7037}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/while_some.rs","byte_start":402748,"byte_end":402757,"line_start":18,"line_end":18,"column_start":9,"column_end":18},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":7817},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/while_some.rs","byte_start":402947,"byte_end":402956,"line_start":28,"line_end":28,"column_start":33,"column_end":42},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":7817},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/while_some.rs","byte_start":403586,"byte_end":403603,"line_start":56,"line_end":56,"column_start":40,"column_end":57},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":4131},"to":{"krate":0,"index":359}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/while_some.rs","byte_start":404403,"byte_end":404420,"line_start":89,"line_end":89,"column_start":49,"column_end":66},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":4131},"to":{"krate":0,"index":378}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/while_some.rs","byte_start":404823,"byte_end":404838,"line_start":111,"line_end":111,"column_start":38,"column_end":53},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":4152},"to":{"krate":0,"index":367}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/zip.rs","byte_start":406492,"byte_end":406495,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":7826},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/zip.rs","byte_start":406718,"byte_end":406721,"line_start":30,"line_end":30,"column_start":33,"column_end":36},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":7826},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/zip.rs","byte_start":407105,"byte_end":407108,"line_start":49,"line_end":49,"column_start":40,"column_end":43},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":7826},"to":{"krate":0,"index":4699}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/zip.rs","byte_start":407768,"byte_end":407777,"line_start":79,"line_end":79,"column_start":54,"column_end":63},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":4199},"to":{"krate":0,"index":345}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/zip.rs","byte_start":408398,"byte_end":408407,"line_start":102,"line_end":102,"column_start":54,"column_end":63},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":4211},"to":{"krate":0,"index":345}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/zip.rs","byte_start":409064,"byte_end":409075,"line_start":129,"line_end":129,"column_start":45,"column_end":56},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":4223},"to":{"krate":0,"index":350}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/zip_eq.rs","byte_start":410484,"byte_end":410489,"line_start":18,"line_end":18,"column_start":12,"column_end":17},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":7839},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/zip_eq.rs","byte_start":410759,"byte_end":410764,"line_start":31,"line_end":31,"column_start":33,"column_end":38},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":7839},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/zip_eq.rs","byte_start":411156,"byte_end":411161,"line_start":50,"line_end":50,"column_start":40,"column_end":45},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":7839},"to":{"krate":0,"index":4699}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/step_by.rs","byte_start":412258,"byte_end":412264,"line_start":22,"line_end":22,"column_start":9,"column_end":15},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":7851},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/step_by.rs","byte_start":412471,"byte_end":412477,"line_start":32,"line_end":32,"column_start":30,"column_end":36},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":7851},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/step_by.rs","byte_start":412812,"byte_end":412818,"line_start":50,"line_end":50,"column_start":37,"column_end":43},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":7851},"to":{"krate":0,"index":4699}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/step_by.rs","byte_start":413500,"byte_end":413508,"line_start":79,"line_end":79,"column_start":45,"column_end":53},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":4438},"to":{"krate":0,"index":345}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/step_by.rs","byte_start":414189,"byte_end":414203,"line_start":108,"line_end":108,"column_start":22,"column_end":36},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":4449},"to":{"krate":0,"index":350}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":38321,"byte_end":38322,"line_start":275,"line_end":275,"column_start":67,"column_end":68},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":4476},"to":{"krate":0,"index":4469}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":39830,"byte_end":39831,"line_start":322,"line_end":322,"column_start":70,"column_end":71},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":4487},"to":{"krate":0,"index":4480}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":40720,"byte_end":40725,"line_start":348,"line_end":348,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":2826},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":40728,"byte_end":40732,"line_start":348,"line_end":348,"column_start":37,"column_end":41},"kind":"SuperTrait","from":{"krate":2,"index":2821},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":101744,"byte_end":101745,"line_start":2157,"line_end":2157,"column_start":52,"column_end":53},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":4695},"to":{"krate":0,"index":4465}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":102112,"byte_end":102128,"line_start":2171,"line_end":2171,"column_start":36,"column_end":52},"kind":"SuperTrait","from":{"krate":0,"index":4491},"to":{"krate":0,"index":4699}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":131905,"byte_end":131911,"line_start":3088,"line_end":3088,"column_start":21,"column_end":27},"kind":{"Impl":{"id":426}},"from":{"krate":2,"index":37378},"to":{"krate":0,"index":4783}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/iter/mod.rs","byte_start":132236,"byte_end":132242,"line_start":3105,"line_end":3105,"column_start":24,"column_end":30},"kind":{"Impl":{"id":427}},"from":{"krate":2,"index":37530},"to":{"krate":0,"index":4783}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/option.rs","byte_start":416002,"byte_end":416008,"line_start":26,"line_end":26,"column_start":40,"column_end":46},"kind":{"Impl":{"id":428}},"from":{"krate":2,"index":37378},"to":{"krate":0,"index":4465}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/option.rs","byte_start":416181,"byte_end":416189,"line_start":35,"line_end":35,"column_start":36,"column_end":44},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":7864},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/option.rs","byte_start":416484,"byte_end":416492,"line_start":50,"line_end":50,"column_start":43,"column_end":51},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":7864},"to":{"krate":0,"index":4699}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/option.rs","byte_start":417649,"byte_end":417653,"line_start":91,"line_end":91,"column_start":29,"column_end":33},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":7873},"to":{"krate":2,"index":2446}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/option.rs","byte_start":419129,"byte_end":419143,"line_start":150,"line_end":150,"column_start":28,"column_end":42},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":4848},"to":{"krate":0,"index":350}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/option.rs","byte_start":419755,"byte_end":419761,"line_start":173,"line_end":173,"column_start":48,"column_end":54},"kind":{"Impl":{"id":437}},"from":{"krate":2,"index":37378},"to":{"krate":0,"index":4764}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range.rs","byte_start":422680,"byte_end":422685,"line_start":51,"line_end":51,"column_start":34,"column_end":39},"kind":{"Impl":{"id":438}},"from":{"krate":2,"index":35972},"to":{"krate":0,"index":4465}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range.rs","byte_start":422962,"byte_end":422974,"line_start":67,"line_end":67,"column_start":26,"column_end":38},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":4923},"to":{"krate":2,"index":7010}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range.rs","byte_start":428529,"byte_end":428533,"line_start":249,"line_end":249,"column_start":27,"column_end":31},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":7919},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range.rs","byte_start":428840,"byte_end":428844,"line_start":264,"line_end":264,"column_start":34,"column_end":38},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":7919},"to":{"krate":0,"index":4699}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range_inclusive.rs","byte_start":433426,"byte_end":433430,"line_start":50,"line_end":50,"column_start":9,"column_end":13},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":8122},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range_inclusive.rs","byte_start":434298,"byte_end":434312,"line_start":74,"line_end":74,"column_start":34,"column_end":48},"kind":{"Impl":{"id":443}},"from":{"krate":2,"index":36041},"to":{"krate":0,"index":4465}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range_inclusive.rs","byte_start":437625,"byte_end":437629,"line_start":187,"line_end":187,"column_start":27,"column_end":31},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":8122},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/range_inclusive.rs","byte_start":438009,"byte_end":438013,"line_start":203,"line_end":203,"column_start":34,"column_end":38},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":8122},"to":{"krate":0,"index":4699}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/result.rs","byte_start":441088,"byte_end":441094,"line_start":20,"line_end":20,"column_start":43,"column_end":49},"kind":{"Impl":{"id":446}},"from":{"krate":2,"index":37530},"to":{"krate":0,"index":4465}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/result.rs","byte_start":441528,"byte_end":441532,"line_start":42,"line_end":42,"column_start":29,"column_end":33},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":8243},"to":{"krate":2,"index":2446}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/result.rs","byte_start":442785,"byte_end":442791,"line_start":93,"line_end":93,"column_start":54,"column_end":60},"kind":{"Impl":{"id":454}},"from":{"krate":2,"index":37530},"to":{"krate":0,"index":4764}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mergesort.rs","byte_start":480167,"byte_end":480177,"line_start":32,"line_end":32,"column_start":18,"column_end":28},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":5046},"to":{"krate":2,"index":3049}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mergesort.rs","byte_start":483127,"byte_end":483133,"line_start":102,"line_end":102,"column_start":22,"column_end":28},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":5057},"to":{"krate":2,"index":3049}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mergesort.rs","byte_start":483382,"byte_end":483395,"line_start":114,"line_end":114,"column_start":22,"column_end":35},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":5063},"to":{"krate":2,"index":3049}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mergesort.rs","byte_start":487121,"byte_end":487130,"line_start":217,"line_end":217,"column_start":22,"column_end":31},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":5073},"to":{"krate":2,"index":3049}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mergesort.rs","byte_start":498572,"byte_end":498577,"line_start":521,"line_end":521,"column_start":22,"column_end":27},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":5095},"to":{"krate":2,"index":3049}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/quicksort.rs","byte_start":507748,"byte_end":507759,"line_start":21,"line_end":21,"column_start":18,"column_end":29},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":5126},"to":{"krate":2,"index":3049}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/quicksort.rs","byte_start":507989,"byte_end":507995,"line_start":34,"line_end":34,"column_start":18,"column_end":24},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":5133},"to":{"krate":2,"index":3049}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/quicksort.rs","byte_start":508202,"byte_end":508212,"line_start":46,"line_end":46,"column_start":18,"column_end":28},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":5139},"to":{"krate":2,"index":3049}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":461435,"byte_end":461439,"line_start":506,"line_end":506,"column_start":32,"column_end":36},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":8311},"to":{"krate":2,"index":2446}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":461566,"byte_end":461570,"line_start":512,"line_end":512,"column_start":51,"column_end":55},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":8311},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":461896,"byte_end":461900,"line_start":527,"line_end":527,"column_start":58,"column_end":62},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":8311},"to":{"krate":0,"index":4699}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":462403,"byte_end":462415,"line_start":551,"line_end":551,"column_start":43,"column_end":55},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":5308},"to":{"krate":0,"index":350}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":462974,"byte_end":462980,"line_start":572,"line_end":572,"column_start":32,"column_end":38},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":8319},"to":{"krate":2,"index":2446}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":463109,"byte_end":463115,"line_start":578,"line_end":578,"column_start":51,"column_end":57},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":8319},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":463443,"byte_end":463449,"line_start":593,"line_end":593,"column_start":58,"column_end":64},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":8319},"to":{"krate":0,"index":4699}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":464072,"byte_end":464086,"line_start":621,"line_end":621,"column_start":43,"column_end":57},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":5338},"to":{"krate":0,"index":350}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":464952,"byte_end":464963,"line_start":653,"line_end":653,"column_start":22,"column_end":33},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":8328},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":465250,"byte_end":465261,"line_start":662,"line_end":662,"column_start":32,"column_end":43},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":8328},"to":{"krate":2,"index":2446}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":465395,"byte_end":465406,"line_start":668,"line_end":668,"column_start":51,"column_end":62},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":8328},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":465734,"byte_end":465745,"line_start":683,"line_end":683,"column_start":58,"column_end":69},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":8328},"to":{"krate":0,"index":4699}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":466365,"byte_end":466384,"line_start":711,"line_end":711,"column_start":43,"column_end":62},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":5373},"to":{"krate":0,"index":350}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":467226,"byte_end":467233,"line_start":742,"line_end":742,"column_start":32,"column_end":39},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":8338},"to":{"krate":2,"index":2446}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":467363,"byte_end":467370,"line_start":748,"line_end":748,"column_start":51,"column_end":58},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":8338},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":467698,"byte_end":467705,"line_start":763,"line_end":763,"column_start":58,"column_end":65},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":8338},"to":{"krate":0,"index":4699}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":468379,"byte_end":468394,"line_start":792,"line_end":792,"column_start":43,"column_end":58},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":5404},"to":{"krate":0,"index":350}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":469269,"byte_end":469276,"line_start":823,"line_end":823,"column_start":51,"column_end":58},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":8347},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":469606,"byte_end":469613,"line_start":838,"line_end":838,"column_start":58,"column_end":65},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":8347},"to":{"krate":0,"index":4699}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":470126,"byte_end":470141,"line_start":862,"line_end":862,"column_start":43,"column_end":58},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":5431},"to":{"krate":0,"index":350}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":470780,"byte_end":470789,"line_start":886,"line_end":886,"column_start":51,"column_end":60},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":8355},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":471121,"byte_end":471130,"line_start":901,"line_end":901,"column_start":58,"column_end":67},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":8355},"to":{"krate":0,"index":4699}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":471763,"byte_end":471780,"line_start":929,"line_end":929,"column_start":43,"column_end":60},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":5457},"to":{"krate":0,"index":350}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":472676,"byte_end":472690,"line_start":961,"line_end":961,"column_start":22,"column_end":36},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":8364},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":474105,"byte_end":474119,"line_start":993,"line_end":993,"column_start":51,"column_end":65},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":8364},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":474451,"byte_end":474465,"line_start":1008,"line_end":1008,"column_start":58,"column_end":72},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":8364},"to":{"krate":0,"index":4699}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":475095,"byte_end":475117,"line_start":1036,"line_end":1036,"column_start":43,"column_end":65},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":5490},"to":{"krate":0,"index":350}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":475947,"byte_end":475952,"line_start":1066,"line_end":1066,"column_start":36,"column_end":41},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":5502},"to":{"krate":2,"index":2446}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":476135,"byte_end":476140,"line_start":1075,"line_end":1075,"column_start":36,"column_end":41},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":5502},"to":{"krate":2,"index":8721}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":476336,"byte_end":476341,"line_start":1081,"line_end":1081,"column_start":40,"column_end":45},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":5502},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":477828,"byte_end":477836,"line_start":1142,"line_end":1142,"column_start":36,"column_end":44},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":5536},"to":{"krate":2,"index":8721}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/slice/mod.rs","byte_start":478061,"byte_end":478069,"line_start":1150,"line_end":1150,"column_start":40,"column_end":48},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":5536},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":549265,"byte_end":549270,"line_start":283,"line_end":283,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":2826},"to":{"krate":0,"index":5594}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":549273,"byte_end":549277,"line_start":283,"line_end":283,"column_start":32,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":2833},"to":{"krate":0,"index":5594}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":549280,"byte_end":549284,"line_start":283,"line_end":283,"column_start":39,"column_end":43},"kind":"SuperTrait","from":{"krate":2,"index":2821},"to":{"krate":0,"index":5594}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":551124,"byte_end":551126,"line_start":350,"line_end":350,"column_start":54,"column_end":56},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":5628},"to":{"krate":0,"index":5594}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":552369,"byte_end":552374,"line_start":403,"line_end":403,"column_start":32,"column_end":37},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":8377},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":552634,"byte_end":552647,"line_start":414,"line_end":414,"column_start":33,"column_end":46},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":5641},"to":{"krate":0,"index":382}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":553446,"byte_end":553457,"line_start":448,"line_end":448,"column_start":32,"column_end":43},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":8386},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":553808,"byte_end":553827,"line_start":463,"line_end":463,"column_start":33,"column_end":52},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":5655},"to":{"krate":0,"index":382}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":554799,"byte_end":554804,"line_start":503,"line_end":503,"column_start":32,"column_end":37},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":8395},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":555062,"byte_end":555075,"line_start":514,"line_end":514,"column_start":33,"column_end":46},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":5670},"to":{"krate":0,"index":382}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":555832,"byte_end":555843,"line_start":547,"line_end":547,"column_start":32,"column_end":43},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":8404},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":556108,"byte_end":556127,"line_start":558,"line_end":558,"column_start":33,"column_end":52},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":5684},"to":{"krate":0,"index":382}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":556868,"byte_end":556873,"line_start":588,"line_end":588,"column_start":23,"column_end":28},"kind":{"Impl":{"id":506}},"from":{"krate":0,"index":8413},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":557023,"byte_end":557028,"line_start":594,"line_end":594,"column_start":44,"column_end":49},"kind":{"Impl":{"id":507}},"from":{"krate":0,"index":8413},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":558681,"byte_end":558696,"line_start":654,"line_end":654,"column_start":23,"column_end":38},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":8426},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":558850,"byte_end":558873,"line_start":660,"line_end":660,"column_start":36,"column_end":59},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":5718},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":559181,"byte_end":559196,"line_start":669,"line_end":669,"column_start":44,"column_end":59},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":8426},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":559544,"byte_end":559567,"line_start":681,"line_end":681,"column_start":58,"column_end":81},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":5718},"to":{"krate":0,"index":382}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":560531,"byte_end":560536,"line_start":721,"line_end":721,"column_start":32,"column_end":37},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":8439},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":561130,"byte_end":561145,"line_start":746,"line_end":746,"column_start":32,"column_end":47},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":8449},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":561810,"byte_end":561817,"line_start":774,"line_end":774,"column_start":44,"column_end":51},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":8459},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":562194,"byte_end":562209,"line_start":789,"line_end":789,"column_start":51,"column_end":66},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":5760},"to":{"krate":0,"index":382}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":563246,"byte_end":563258,"line_start":831,"line_end":831,"column_start":44,"column_end":56},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":8472},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/str.rs","byte_start":563671,"byte_end":563691,"line_start":847,"line_end":847,"column_start":51,"column_end":71},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":5780},"to":{"krate":0,"index":382}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/string.rs","byte_start":565259,"byte_end":565264,"line_start":30,"line_end":30,"column_start":31,"column_end":36},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":8485},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/string.rs","byte_start":565541,"byte_end":565546,"line_start":43,"line_end":43,"column_start":19,"column_end":24},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":8485},"to":{"krate":2,"index":3049}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/vec.rs","byte_start":566262,"byte_end":566265,"line_start":23,"line_end":23,"column_start":40,"column_end":43},"kind":{"Impl":{"id":520}},"from":{"krate":5,"index":6769},"to":{"krate":0,"index":4465}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/vec.rs","byte_start":566438,"byte_end":566446,"line_start":32,"line_end":32,"column_start":36,"column_end":44},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":8492},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/vec.rs","byte_start":566743,"byte_end":566751,"line_start":47,"line_end":47,"column_start":43,"column_end":51},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":8492},"to":{"krate":0,"index":4699}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/vec.rs","byte_start":567826,"byte_end":567831,"line_start":89,"line_end":89,"column_start":43,"column_end":48},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":8501},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/vec.rs","byte_start":568142,"byte_end":568147,"line_start":104,"line_end":104,"column_start":50,"column_end":55},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":8501},"to":{"krate":0,"index":4699}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/vec.rs","byte_start":569072,"byte_end":569077,"line_start":135,"line_end":135,"column_start":31,"column_end":36},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":8501},"to":{"krate":2,"index":3049}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/vec.rs","byte_start":570218,"byte_end":570231,"line_start":164,"line_end":164,"column_start":30,"column_end":43},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":5897},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/vec.rs","byte_start":570553,"byte_end":570566,"line_start":173,"line_end":173,"column_start":43,"column_end":56},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":5897},"to":{"krate":0,"index":350}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/vec.rs","byte_start":571225,"byte_end":571238,"line_start":193,"line_end":193,"column_start":39,"column_end":52},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":5897},"to":{"krate":2,"index":3049}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/vec.rs","byte_start":571614,"byte_end":571624,"line_start":207,"line_end":207,"column_start":36,"column_end":46},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":5916},"to":{"krate":2,"index":7173}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/vec.rs","byte_start":571977,"byte_end":571987,"line_start":224,"line_end":224,"column_start":47,"column_end":57},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":5916},"to":{"krate":2,"index":7037}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/vec.rs","byte_start":572187,"byte_end":572197,"line_start":231,"line_end":231,"column_start":45,"column_end":55},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":5916},"to":{"krate":2,"index":7062}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/vec.rs","byte_start":572318,"byte_end":572328,"line_start":237,"line_end":237,"column_start":47,"column_end":57},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":5916},"to":{"krate":2,"index":7444}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/vec.rs","byte_start":572374,"byte_end":572384,"line_start":239,"line_end":239,"column_start":32,"column_end":42},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":5916},"to":{"krate":2,"index":3049}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/par_either.rs","byte_start":574400,"byte_end":574406,"line_start":6,"line_end":6,"column_start":33,"column_end":39},"kind":{"Impl":{"id":534}},"from":{"krate":16,"index":181},"to":{"krate":0,"index":4491}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/par_either.rs","byte_start":574926,"byte_end":574932,"line_start":28,"line_end":28,"column_start":40,"column_end":46},"kind":{"Impl":{"id":535}},"from":{"krate":16,"index":181},"to":{"krate":0,"index":4699}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.0/src/par_either.rs","byte_start":575726,"byte_end":575732,"line_start":59,"line_end":59,"column_start":37,"column_end":43},"kind":{"Impl":{"id":536}},"from":{"krate":16,"index":181},"to":{"krate":0,"index":4768}}]}