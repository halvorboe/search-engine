{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4","program":"/Users/halvorbo/.rustup/toolchains/nightly-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","crossbeam_epoch","--edition=2018","/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"lazy_static\"","--cfg","feature=\"std\"","-C","metadata=a3dfde0369ff7ab0","-C","extra-filename=-a3dfde0369ff7ab0","--out-dir","/Users/halvorbo/Projects/search-engine/advanced/target/rls/debug/deps","-L","dependency=/Users/halvorbo/Projects/search-engine/advanced/target/rls/debug/deps","--extern","cfg_if=/Users/halvorbo/Projects/search-engine/advanced/target/rls/debug/deps/libcfg_if-65a893b22d0e7cc8.rmeta","--extern","crossbeam_utils=/Users/halvorbo/Projects/search-engine/advanced/target/rls/debug/deps/libcrossbeam_utils-8ecef0cf8dc3b385.rmeta","--extern","lazy_static=/Users/halvorbo/Projects/search-engine/advanced/target/rls/debug/deps/liblazy_static-02278938c89aba70.rmeta","--extern","memoffset=/Users/halvorbo/Projects/search-engine/advanced/target/rls/debug/deps/libmemoffset-02b74957c0f2c8ed.rmeta","--extern","scopeguard=/Users/halvorbo/Projects/search-engine/advanced/target/rls/debug/deps/libscopeguard-17e055f98f9d3b5a.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/halvorbo/.rustup/toolchains/nightly-x86_64-apple-darwin"],"output":"/Users/halvorbo/Projects/search-engine/advanced/target/rls/debug/deps/libcrossbeam_epoch-a3dfde0369ff7ab0.rmeta"},"prelude":{"crate_id":{"name":"crossbeam_epoch","disambiguator":[9172479745823779193,12584677627664147904]},"crate_root":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src","external_crates":[{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[10530524084485976407,9865151695911701379]}},{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[4677351122568421315,12912476906165123890]}},{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10488131761368839759,14745294566605726166]}},{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[897566241891434780,10334371453616731725]}},{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[11641657356728861508,7085351932648257302]}},{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[676122544404022689,40068272031765985]}},{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3818133010765225013,12223759246914958195]}},{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5938175211405239443,5415126661464186215]}},{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[3780697752239444282,3851721936065226901]}},{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[12165445765909509336,798848316425904467]}},{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[17502485708484438607,8308367046456781365]}},{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[14371327216633401758,10746896804827034804]}},{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[8353860865250060912,12073716115526585438]}},{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[1012648758462094634,18380545652037057514]}},{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[5859193186215189519,203091992714383988]}},{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","num":16,"id":{"name":"cfg_if","disambiguator":[10868258386125283332,10533175316954764242]}},{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","num":17,"id":{"name":"lazy_static","disambiguator":[7427177695640610454,2199846136346973132]}},{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","num":18,"id":{"name":"crossbeam_utils","disambiguator":[8630784673443417042,7091223614128856957]}},{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","num":19,"id":{"name":"scopeguard","disambiguator":[15479479183525032889,2643213063027633067]}},{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/internal.rs","num":20,"id":{"name":"memoffset","disambiguator":[9129973015885059360,13139673223423640593]}}],"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":0,"byte_end":7337,"line_start":1,"line_end":187,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":130},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":6886,"byte_end":6895,"line_start":171,"line_end":171,"column_start":13,"column_end":22},"alias_span":null,"name":"Pointable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":164},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":6897,"byte_end":6903,"line_start":171,"line_end":171,"column_start":24,"column_end":30},"alias_span":null,"name":"Atomic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":103},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":6905,"byte_end":6925,"line_start":171,"line_end":171,"column_start":32,"column_end":52},"alias_span":null,"name":"CompareExchangeError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":246},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":6939,"byte_end":6944,"line_start":172,"line_end":172,"column_start":13,"column_end":18},"alias_span":null,"name":"Owned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":242},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":6946,"byte_end":6953,"line_start":172,"line_end":172,"column_start":20,"column_end":27},"alias_span":null,"name":"Pointer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":300},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":6955,"byte_end":6961,"line_start":172,"line_end":172,"column_start":29,"column_end":35},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":371},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":7008,"byte_end":7017,"line_start":174,"line_end":174,"column_start":35,"column_end":44},"alias_span":null,"name":"Collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":387},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":7019,"byte_end":7030,"line_start":174,"line_end":174,"column_start":46,"column_end":57},"alias_span":null,"name":"LocalHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":499},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":7063,"byte_end":7074,"line_start":175,"line_end":175,"column_start":31,"column_end":42},"alias_span":null,"name":"unprotected","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":475},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":7076,"byte_end":7081,"line_start":175,"line_end":175,"column_start":44,"column_end":49},"alias_span":null,"name":"Guard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":99},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":7145,"byte_end":7163,"line_start":178,"line_end":178,"column_start":32,"column_end":50},"alias_span":null,"name":"CompareAndSetError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":113},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":7165,"byte_end":7186,"line_start":178,"line_end":178,"column_start":52,"column_end":73},"alias_span":null,"name":"CompareAndSetOrdering","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":893},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":7294,"byte_end":7311,"line_start":185,"line_end":185,"column_start":33,"column_end":50},"alias_span":null,"name":"default_collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":891},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":7313,"byte_end":7322,"line_start":185,"line_end":185,"column_start":52,"column_end":61},"alias_span":null,"name":"is_pinned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":889},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":7324,"byte_end":7327,"line_start":185,"line_end":185,"column_start":63,"column_end":66},"alias_span":null,"name":"pin","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":0,"byte_end":7337,"line_start":1,"line_end":187,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":354},{"krate":0,"index":397},{"krate":0,"index":434},{"krate":0,"index":453},{"krate":0,"index":505},{"krate":0,"index":650},{"krate":0,"index":773},{"krate":0,"index":774},{"krate":0,"index":777},{"krate":0,"index":780},{"krate":0,"index":783},{"krate":0,"index":786},{"krate":0,"index":789},{"krate":0,"index":792},{"krate":0,"index":793},{"krate":0,"index":796},{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":803},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":810},{"krate":0,"index":871},{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":903},{"krate":0,"index":906}],"decl_id":null,"docs":" Epoch-based memory reclamation.","sig":null,"attributes":[{"value":"/ Epoch-based memory reclamation.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":0,"byte_end":35,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":36,"byte_end":39,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ An interesting problem concurrent collections deal with comes from the remove operation.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":40,"byte_end":132,"line_start":3,"line_end":3,"column_start":1,"column_end":93}},{"value":"/ Suppose that a thread removes an element from a lock-free map, while another thread is reading","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":133,"byte_end":231,"line_start":4,"line_end":4,"column_start":1,"column_end":99}},{"value":"/ that same element at the same time. The first thread must wait until the second thread stops","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":232,"byte_end":328,"line_start":5,"line_end":5,"column_start":1,"column_end":97}},{"value":"/ reading the element. Only then it is safe to destruct it.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":329,"byte_end":390,"line_start":6,"line_end":6,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":391,"byte_end":394,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Programming languages that come with garbage collectors solve this problem trivially. The","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":395,"byte_end":488,"line_start":8,"line_end":8,"column_start":1,"column_end":94}},{"value":"/ garbage collector will destruct the removed element when no thread can hold a reference to it","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":489,"byte_end":586,"line_start":9,"line_end":9,"column_start":1,"column_end":98}},{"value":"/ anymore.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":587,"byte_end":599,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":600,"byte_end":603,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This crate implements a basic memory reclamation mechanism, which is based on epochs. When an","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":604,"byte_end":701,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ element gets removed from a concurrent collection, it is inserted into a pile of garbage and","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":702,"byte_end":798,"line_start":13,"line_end":13,"column_start":1,"column_end":97}},{"value":"/ marked with the current epoch. Every time a thread accesses a collection, it checks the current","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":799,"byte_end":898,"line_start":14,"line_end":14,"column_start":1,"column_end":100}},{"value":"/ epoch, attempts to increment it, and destructs some garbage that became so old that no thread","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":899,"byte_end":996,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"/ can be referencing it anymore.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":997,"byte_end":1031,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":1032,"byte_end":1035,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ That is the general mechanism behind epoch-based memory reclamation, but the details are a bit","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":1036,"byte_end":1134,"line_start":18,"line_end":18,"column_start":1,"column_end":99}},{"value":"/ more complicated. Anyhow, memory reclamation is designed to be fully automatic and something","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":1135,"byte_end":1231,"line_start":19,"line_end":19,"column_start":1,"column_end":97}},{"value":"/ users of concurrent collections don't have to worry much about.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":1232,"byte_end":1299,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":1300,"byte_end":1303,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Pointers","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":1304,"byte_end":1318,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":1319,"byte_end":1322,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Concurrent collections are built using atomic pointers. This module provides [`Atomic`], which","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":1323,"byte_end":1421,"line_start":24,"line_end":24,"column_start":1,"column_end":99}},{"value":"/ is just a shared atomic pointer to a heap-allocated object. Loading an [`Atomic`] yields a","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":1422,"byte_end":1516,"line_start":25,"line_end":25,"column_start":1,"column_end":95}},{"value":"/ [`Shared`], which is an epoch-protected pointer through which the loaded object can be safely","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":1517,"byte_end":1614,"line_start":26,"line_end":26,"column_start":1,"column_end":98}},{"value":"/ read.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":1615,"byte_end":1624,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":1625,"byte_end":1628,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Pinning","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":1629,"byte_end":1642,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":1643,"byte_end":1646,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Before an [`Atomic`] can be loaded, a participant must be [`pin`]ned. By pinning a participant","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":1647,"byte_end":1745,"line_start":31,"line_end":31,"column_start":1,"column_end":99}},{"value":"/ we declare that any object that gets removed from now on must not be destructed just","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":1746,"byte_end":1834,"line_start":32,"line_end":32,"column_start":1,"column_end":89}},{"value":"/ yet. Garbage collection of newly removed objects is suspended until the participant gets","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":1835,"byte_end":1927,"line_start":33,"line_end":33,"column_start":1,"column_end":93}},{"value":"/ unpinned.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":1928,"byte_end":1941,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":1942,"byte_end":1945,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Garbage","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":1946,"byte_end":1959,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":1960,"byte_end":1963,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Objects that get removed from concurrent collections must be stashed away until all currently","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":1964,"byte_end":2061,"line_start":38,"line_end":38,"column_start":1,"column_end":98}},{"value":"/ pinned participants get unpinned. Such objects can be stored into a thread-local or global","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":2062,"byte_end":2156,"line_start":39,"line_end":39,"column_start":1,"column_end":95}},{"value":"/ storage, where they are kept until the right time for their destruction comes.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":2157,"byte_end":2239,"line_start":40,"line_end":40,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":2240,"byte_end":2243,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ There is a global shared instance of garbage queue. You can [`defer`](Guard::defer) the execution of an","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":2244,"byte_end":2351,"line_start":42,"line_end":42,"column_start":1,"column_end":108}},{"value":"/ arbitrary function until the global epoch is advanced enough. Most notably, concurrent data","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":2352,"byte_end":2447,"line_start":43,"line_end":43,"column_start":1,"column_end":96}},{"value":"/ structures may defer the deallocation of an object.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":2448,"byte_end":2503,"line_start":44,"line_end":44,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":2504,"byte_end":2507,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # APIs","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":2508,"byte_end":2518,"line_start":46,"line_end":46,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":2519,"byte_end":2522,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ For majority of use cases, just use the default garbage collector by invoking [`pin`]. If you","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":2523,"byte_end":2620,"line_start":48,"line_end":48,"column_start":1,"column_end":98}},{"value":"/ want to create your own garbage collector, use the [`Collector`] API.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":2621,"byte_end":2694,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":2855,"byte_end":2961,"line_start":58,"line_end":63,"column_start":1,"column_end":3}}]},{"kind":"Type","id":{"krate":0,"index":99},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10000806,"byte_end":10000824,"line_start":31,"line_end":31,"column_start":10,"column_end":28},"name":"CompareAndSetError","qualname":"::atomic::CompareAndSetError","value":"CompareExchangeError","parent":null,"children":[],"decl_id":null,"docs":" The error returned on failed compare-and-set operation.\n","sig":null,"attributes":[{"value":"/ The error returned on failed compare-and-set operation.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10000635,"byte_end":10000694,"line_start":28,"line_end":28,"column_start":1,"column_end":60}},{"value":"deprecated(note = \"Use `CompareExchangeError` instead\")","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10000738,"byte_end":10000796,"line_start":30,"line_end":30,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":103},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10000942,"byte_end":10000962,"line_start":34,"line_end":34,"column_start":12,"column_end":32},"name":"CompareExchangeError","qualname":"::atomic::CompareExchangeError","value":"CompareExchangeError { current, new }","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":108}],"decl_id":null,"docs":" The error returned on failed compare-and-swap operation.\n","sig":null,"attributes":[{"value":"/ The error returned on failed compare-and-swap operation.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10000870,"byte_end":10000930,"line_start":33,"line_end":33,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":107},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10001092,"byte_end":10001099,"line_start":36,"line_end":36,"column_start":9,"column_end":16},"name":"current","qualname":"::atomic::CompareExchangeError::current","value":"atomic::Shared<'g, T>","parent":{"krate":0,"index":103},"children":[],"decl_id":null,"docs":" The value in the atomic pointer at the time of the failed operation.\n","sig":null,"attributes":[{"value":"/ The value in the atomic pointer at the time of the failed operation.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10001011,"byte_end":10001083,"line_start":35,"line_end":35,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":108},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10001185,"byte_end":10001188,"line_start":39,"line_end":39,"column_start":9,"column_end":12},"name":"new","qualname":"::atomic::CompareExchangeError::new","value":"P","parent":{"krate":0,"index":103},"children":[],"decl_id":null,"docs":" The new value, which the operation failed to store.\n","sig":null,"attributes":[{"value":"/ The new value, which the operation failed to store.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10001121,"byte_end":10001176,"line_start":38,"line_end":38,"column_start":5,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":113},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10002299,"byte_end":10002320,"line_start":67,"line_end":67,"column_start":11,"column_end":32},"name":"CompareAndSetOrdering","qualname":"::atomic::CompareAndSetOrdering","value":"CompareAndSetOrdering","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115}],"decl_id":null,"docs":" Memory orderings for compare-and-set operations.","sig":null,"attributes":[{"value":"/ Memory orderings for compare-and-set operations.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10001503,"byte_end":10001555,"line_start":51,"line_end":51,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10001556,"byte_end":10001559,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ A compare-and-set operation can have different memory orderings depending on whether it","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10001560,"byte_end":10001651,"line_start":53,"line_end":53,"column_start":1,"column_end":92}},{"value":"/ succeeds or fails. This trait generalizes different ways of specifying memory orderings.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10001652,"byte_end":10001744,"line_start":54,"line_end":54,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10001745,"byte_end":10001748,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The two ways of specifying orderings for compare-and-set are:","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10001749,"byte_end":10001814,"line_start":56,"line_end":56,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10001815,"byte_end":10001818,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ 1. Just one `Ordering` for the success case. In case of failure, the strongest appropriate","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10001819,"byte_end":10001913,"line_start":58,"line_end":58,"column_start":1,"column_end":95}},{"value":"/    ordering is chosen.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10001914,"byte_end":10001940,"line_start":59,"line_end":59,"column_start":1,"column_end":27}},{"value":"/ 2. A pair of `Ordering`s. The first one is for the success case, while the second one is","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10001941,"byte_end":10002033,"line_start":60,"line_end":60,"column_start":1,"column_end":93}},{"value":"/    for the failure case.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10002034,"byte_end":10002062,"line_start":61,"line_end":61,"column_start":1,"column_end":29}},{"value":"deprecated(note =\n             \"`compare_and_set` and `compare_and_set_weak` that use this trait are deprecated, \\\n            use `compare_exchange` or `compare_exchange_weak instead`\")","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10002106,"byte_end":10002288,"line_start":63,"line_end":66,"column_start":1,"column_end":3}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10002386,"byte_end":10002393,"line_start":69,"line_end":69,"column_start":8,"column_end":15},"name":"success","qualname":"::atomic::CompareAndSetOrdering::success","value":"pub fn success(&Self) -> Ordering","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":" The ordering of the operation when it succeeds.\n","sig":null,"attributes":[{"value":"/ The ordering of the operation when it succeeds.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10002327,"byte_end":10002378,"line_start":68,"line_end":68,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10002611,"byte_end":10002618,"line_start":75,"line_end":75,"column_start":8,"column_end":15},"name":"failure","qualname":"::atomic::CompareAndSetOrdering::failure","value":"pub fn failure(&Self) -> Ordering","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":" The ordering of the operation when it fails.","sig":null,"attributes":[{"value":"/ The ordering of the operation when it fails.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10002419,"byte_end":10002467,"line_start":71,"line_end":71,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10002472,"byte_end":10002475,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ The failure ordering can't be `Release` or `AcqRel` and must be equivalent or weaker than","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10002480,"byte_end":10002573,"line_start":73,"line_end":73,"column_start":5,"column_end":98}},{"value":"/ the success ordering.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10002578,"byte_end":10002603,"line_start":74,"line_end":74,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":130},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10004968,"byte_end":10004977,"line_start":150,"line_end":150,"column_start":11,"column_end":20},"name":"Pointable","qualname":"::atomic::Pointable","value":"Pointable","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":138}],"decl_id":null,"docs":" Types that are pointed to by a single word.","sig":null,"attributes":[{"value":"/ Types that are pointed to by a single word.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10003995,"byte_end":10004042,"line_start":130,"line_end":130,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10004043,"byte_end":10004046,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ In concurrent programming, it is necessary to represent an object within a word because atomic","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10004047,"byte_end":10004145,"line_start":132,"line_end":132,"column_start":1,"column_end":99}},{"value":"/ operations (e.g., reads, writes, read-modify-writes) support only single words.  This trait","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10004146,"byte_end":10004241,"line_start":133,"line_end":133,"column_start":1,"column_end":96}},{"value":"/ qualifies such types that are pointed to by a single word.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10004242,"byte_end":10004304,"line_start":134,"line_end":134,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10004305,"byte_end":10004308,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ The trait generalizes `Box<T>` for a sized type `T`.  In a box, an object of type `T` is","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10004309,"byte_end":10004401,"line_start":136,"line_end":136,"column_start":1,"column_end":93}},{"value":"/ allocated in heap and it is owned by a single-word pointer.  This trait is also implemented for","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10004402,"byte_end":10004501,"line_start":137,"line_end":137,"column_start":1,"column_end":100}},{"value":"/ `[MaybeUninit<T>]` by storing its size along with its elements and pointing to the pair of array","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10004502,"byte_end":10004602,"line_start":138,"line_end":138,"column_start":1,"column_end":101}},{"value":"/ size and elements.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10004603,"byte_end":10004625,"line_start":139,"line_end":139,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10004626,"byte_end":10004629,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ Pointers to `Pointable` types can be stored in [`Atomic`], [`Owned`], and [`Shared`].  In","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10004630,"byte_end":10004723,"line_start":141,"line_end":141,"column_start":1,"column_end":94}},{"value":"/ particular, Crossbeam supports dynamically sized slices as follows.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10004724,"byte_end":10004795,"line_start":142,"line_end":142,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10004796,"byte_end":10004799,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10004800,"byte_end":10004807,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"/ use std::mem::MaybeUninit;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10004808,"byte_end":10004838,"line_start":145,"line_end":145,"column_start":1,"column_end":31}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10004839,"byte_end":10004870,"line_start":146,"line_end":146,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10004871,"byte_end":10004874,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ let o = Owned::<[MaybeUninit<i32>]>::init(10); // allocating [i32; 10]","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10004875,"byte_end":10004949,"line_start":148,"line_end":148,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10004950,"byte_end":10004957,"line_start":149,"line_end":149,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":131},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10005024,"byte_end":10005029,"line_start":152,"line_end":152,"column_start":11,"column_end":16},"name":"ALIGN","qualname":"::atomic::Pointable::ALIGN","value":"usize","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" The alignment of pointer.\n","sig":null,"attributes":[{"value":"/ The alignment of pointer.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10004984,"byte_end":10005013,"line_start":151,"line_end":151,"column_start":5,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":132},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10005083,"byte_end":10005087,"line_start":155,"line_end":155,"column_start":10,"column_end":14},"name":"Init","qualname":"::atomic::Pointable::Init","value":"type Init;","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" The type for initializers.\n","sig":null,"attributes":[{"value":"/ The type for initializers.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10005043,"byte_end":10005073,"line_start":154,"line_end":154,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10005239,"byte_end":10005243,"line_start":162,"line_end":162,"column_start":15,"column_end":19},"name":"init","qualname":"::atomic::Pointable::init","value":"pub unsafe fn init(Self::Init) -> usize","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" Initializes a with the given initializer.","sig":null,"attributes":[{"value":"/ Initializes a with the given initializer.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10005094,"byte_end":10005139,"line_start":157,"line_end":157,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10005144,"byte_end":10005147,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10005152,"byte_end":10005164,"line_start":159,"line_end":159,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10005169,"byte_end":10005172,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ The result should be a multiple of `ALIGN`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10005177,"byte_end":10005224,"line_start":161,"line_end":161,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10005607,"byte_end":10005612,"line_start":171,"line_end":171,"column_start":15,"column_end":20},"name":"deref","qualname":"::atomic::Pointable::deref","value":"pub unsafe fn deref<'a>(usize) -> &'a Self","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" Dereferences the given pointer.","sig":null,"attributes":[{"value":"/ Dereferences the given pointer.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10005277,"byte_end":10005312,"line_start":164,"line_end":164,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10005317,"byte_end":10005320,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10005325,"byte_end":10005337,"line_start":166,"line_end":166,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10005342,"byte_end":10005345,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10005350,"byte_end":10005426,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10005431,"byte_end":10005499,"line_start":169,"line_end":169,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be mutably dereferenced by [`Pointable::deref_mut`] concurrently.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10005504,"byte_end":10005592,"line_start":170,"line_end":170,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10006011,"byte_end":10006020,"line_start":181,"line_end":181,"column_start":15,"column_end":24},"name":"deref_mut","qualname":"::atomic::Pointable::deref_mut","value":"pub unsafe fn deref_mut<'a>(usize) -> &'a mut Self","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" Mutably dereferences the given pointer.","sig":null,"attributes":[{"value":"/ Mutably dereferences the given pointer.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10005647,"byte_end":10005690,"line_start":173,"line_end":173,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10005695,"byte_end":10005698,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10005703,"byte_end":10005715,"line_start":175,"line_end":175,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10005720,"byte_end":10005723,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10005728,"byte_end":10005804,"line_start":177,"line_end":177,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10005809,"byte_end":10005877,"line_start":178,"line_end":178,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be dereferenced by [`Pointable::deref`] or [`Pointable::deref_mut`]","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10005882,"byte_end":10005972,"line_start":179,"line_end":179,"column_start":5,"column_end":95}},{"value":"/   concurrently.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10005977,"byte_end":10005996,"line_start":180,"line_end":180,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10006433,"byte_end":10006437,"line_start":191,"line_end":191,"column_start":15,"column_end":19},"name":"drop","qualname":"::atomic::Pointable::drop","value":"pub unsafe fn drop(usize)","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" Drops the object pointed to by the given pointer.","sig":null,"attributes":[{"value":"/ Drops the object pointed to by the given pointer.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10006059,"byte_end":10006112,"line_start":183,"line_end":183,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10006117,"byte_end":10006120,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10006125,"byte_end":10006137,"line_start":185,"line_end":185,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10006142,"byte_end":10006145,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10006150,"byte_end":10006226,"line_start":187,"line_end":187,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10006231,"byte_end":10006299,"line_start":188,"line_end":188,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be dereferenced by [`Pointable::deref`] or [`Pointable::deref_mut`]","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10006304,"byte_end":10006394,"line_start":189,"line_end":189,"column_start":5,"column_end":95}},{"value":"/   concurrently.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10006399,"byte_end":10006418,"line_start":190,"line_end":190,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":164},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10009496,"byte_end":10009502,"line_start":290,"line_end":290,"column_start":12,"column_end":18},"name":"Atomic","qualname":"::atomic::Atomic","value":"Atomic {  }","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":167}],"decl_id":null,"docs":" An atomic pointer that can be safely shared between threads.","sig":null,"attributes":[{"value":"/ An atomic pointer that can be safely shared between threads.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10008978,"byte_end":10009042,"line_start":281,"line_end":281,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10009043,"byte_end":10009046,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10009047,"byte_end":10009145,"line_start":283,"line_end":283,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address. For example, the tag for a pointer to a sized type `T`","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10009146,"byte_end":10009243,"line_start":284,"line_end":284,"column_start":1,"column_end":98}},{"value":"/ should be less than `(1 << mem::align_of::<T>().trailing_zeros())`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10009244,"byte_end":10009315,"line_start":285,"line_end":285,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10009316,"byte_end":10009319,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ Any method that loads the pointer must be passed a reference to a [`Guard`].","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10009320,"byte_end":10009400,"line_start":287,"line_end":287,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10009401,"byte_end":10009404,"line_start":288,"line_end":288,"column_start":1,"column_end":4}},{"value":"/ Crossbeam supports dynamically sized types.  See [`Pointable`] for details.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10009405,"byte_end":10009484,"line_start":289,"line_end":289,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10009988,"byte_end":10009991,"line_start":308,"line_end":308,"column_start":12,"column_end":15},"name":"new","qualname":"<Atomic<T>>::new","value":"pub fn new(T) -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new atomic pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new atomic pointer pointing to it.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10009755,"byte_end":10009837,"line_start":299,"line_end":299,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10009842,"byte_end":10009845,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10009850,"byte_end":10009864,"line_start":301,"line_end":301,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10009869,"byte_end":10009872,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10009877,"byte_end":10009884,"line_start":303,"line_end":303,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10009889,"byte_end":10009921,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10009926,"byte_end":10009929,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10009934,"byte_end":10009964,"line_start":306,"line_end":306,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10009969,"byte_end":10009976,"line_start":307,"line_end":307,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10010335,"byte_end":10010339,"line_start":323,"line_end":323,"column_start":12,"column_end":16},"name":"init","qualname":"<Atomic<T>>::init","value":"pub fn init(T::Init) -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new atomic pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new atomic pointer pointing to it.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10010094,"byte_end":10010176,"line_start":314,"line_end":314,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10010181,"byte_end":10010184,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10010189,"byte_end":10010203,"line_start":316,"line_end":316,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10010208,"byte_end":10010211,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10010216,"byte_end":10010223,"line_start":318,"line_end":318,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10010228,"byte_end":10010260,"line_start":319,"line_end":319,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10010265,"byte_end":10010268,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::init(1234);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10010273,"byte_end":10010311,"line_start":321,"line_end":321,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10010316,"byte_end":10010323,"line_start":322,"line_end":322,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10010928,"byte_end":10010932,"line_start":346,"line_end":346,"column_start":12,"column_end":16},"name":"null","qualname":"<Atomic<T>>::null","value":"pub fn null() -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null atomic pointer.","sig":null,"attributes":[{"value":"/ Returns a new null atomic pointer.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10010644,"byte_end":10010682,"line_start":335,"line_end":335,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10010687,"byte_end":10010690,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10010695,"byte_end":10010709,"line_start":337,"line_end":337,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10010714,"byte_end":10010717,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10010722,"byte_end":10010729,"line_start":339,"line_end":339,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10010734,"byte_end":10010766,"line_start":340,"line_end":340,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10010771,"byte_end":10010774,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::null();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10010779,"byte_end":10010813,"line_start":342,"line_end":342,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10010818,"byte_end":10010825,"line_start":343,"line_end":343,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10010830,"byte_end":10010833,"line_start":344,"line_end":344,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10011517,"byte_end":10011521,"line_start":368,"line_end":368,"column_start":12,"column_end":16},"name":"load","qualname":"<Atomic<T>>::load","value":"pub fn load<'g>(&Self, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10011059,"byte_end":10011104,"line_start":353,"line_end":353,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10011109,"byte_end":10011112,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10011117,"byte_end":10011207,"line_start":355,"line_end":355,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10011212,"byte_end":10011226,"line_start":356,"line_end":356,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10011231,"byte_end":10011234,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10011239,"byte_end":10011253,"line_start":358,"line_end":358,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10011258,"byte_end":10011261,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10011266,"byte_end":10011273,"line_start":360,"line_end":360,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10011278,"byte_end":10011327,"line_start":361,"line_end":361,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10011332,"byte_end":10011376,"line_start":362,"line_end":362,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10011381,"byte_end":10011384,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10011389,"byte_end":10011419,"line_start":364,"line_end":364,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10011424,"byte_end":10011454,"line_start":365,"line_end":365,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10011459,"byte_end":10011493,"line_start":366,"line_end":366,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10011498,"byte_end":10011505,"line_start":367,"line_end":367,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10012528,"byte_end":10012540,"line_start":393,"line_end":393,"column_start":12,"column_end":24},"name":"load_consume","qualname":"<Atomic<T>>::load_consume","value":"pub fn load_consume<'g>(&Self, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10011651,"byte_end":10011730,"line_start":372,"line_end":372,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10011735,"byte_end":10011738,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ This is similar to the \"acquire\" ordering, except that an ordering is","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10011743,"byte_end":10011816,"line_start":374,"line_end":374,"column_start":5,"column_end":78}},{"value":"/ only guaranteed with operations that \"depend on\" the result of the load.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10011821,"byte_end":10011897,"line_start":375,"line_end":375,"column_start":5,"column_end":81}},{"value":"/ However consume loads are usually much faster than acquire loads on","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10011902,"byte_end":10011973,"line_start":376,"line_end":376,"column_start":5,"column_end":76}},{"value":"/ architectures with a weak memory model since they don't require memory","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10011978,"byte_end":10012052,"line_start":377,"line_end":377,"column_start":5,"column_end":79}},{"value":"/ fence instructions.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10012057,"byte_end":10012080,"line_start":378,"line_end":378,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10012085,"byte_end":10012088,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ The exact definition of \"depend on\" is a bit vague, but it works as you","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10012093,"byte_end":10012168,"line_start":380,"line_end":380,"column_start":5,"column_end":80}},{"value":"/ would expect in practice since a lot of software, especially the Linux","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10012173,"byte_end":10012247,"line_start":381,"line_end":381,"column_start":5,"column_end":79}},{"value":"/ kernel, rely on this behavior.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10012252,"byte_end":10012286,"line_start":382,"line_end":382,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10012291,"byte_end":10012294,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10012299,"byte_end":10012313,"line_start":384,"line_end":384,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10012318,"byte_end":10012321,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10012326,"byte_end":10012333,"line_start":386,"line_end":386,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10012338,"byte_end":10012387,"line_start":387,"line_end":387,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10012392,"byte_end":10012395,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10012400,"byte_end":10012430,"line_start":389,"line_end":389,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10012435,"byte_end":10012465,"line_start":390,"line_end":390,"column_start":5,"column_end":35}},{"value":"/ let p = a.load_consume(guard);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10012470,"byte_end":10012504,"line_start":391,"line_end":391,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10012509,"byte_end":10012516,"line_start":392,"line_end":392,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10013148,"byte_end":10013153,"line_start":412,"line_end":412,"column_start":12,"column_end":17},"name":"store","qualname":"<Atomic<T>>::store","value":"pub fn store<P: Pointer<T>>(&Self, P, Ordering)","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10012660,"byte_end":10012725,"line_start":397,"line_end":397,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10012730,"byte_end":10012733,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10012738,"byte_end":10012828,"line_start":399,"line_end":399,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10012833,"byte_end":10012847,"line_start":400,"line_end":400,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10012852,"byte_end":10012855,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10012860,"byte_end":10012874,"line_start":402,"line_end":402,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10012879,"byte_end":10012882,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10012887,"byte_end":10012894,"line_start":404,"line_end":404,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{Atomic, Owned, Shared};","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10012899,"byte_end":10012948,"line_start":405,"line_end":405,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10012953,"byte_end":10012997,"line_start":406,"line_end":406,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10013002,"byte_end":10013005,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10013010,"byte_end":10013040,"line_start":408,"line_end":408,"column_start":5,"column_end":35}},{"value":"/ a.store(Shared::null(), SeqCst);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10013045,"byte_end":10013081,"line_start":409,"line_end":409,"column_start":5,"column_end":41}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10013086,"byte_end":10013124,"line_start":410,"line_end":410,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10013129,"byte_end":10013136,"line_start":411,"line_end":411,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10013803,"byte_end":10013807,"line_start":432,"line_end":432,"column_start":12,"column_end":16},"name":"swap","qualname":"<Atomic<T>>::swap","value":"pub fn swap<'g, P: Pointer<T>>(&Self, P, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous\n `Shared`.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10013260,"byte_end":10013348,"line_start":416,"line_end":416,"column_start":5,"column_end":93}},{"value":"/ `Shared`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10013353,"byte_end":10013366,"line_start":417,"line_end":417,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10013371,"byte_end":10013374,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10013379,"byte_end":10013469,"line_start":419,"line_end":419,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10013474,"byte_end":10013488,"line_start":420,"line_end":420,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10013493,"byte_end":10013496,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10013501,"byte_end":10013515,"line_start":422,"line_end":422,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10013520,"byte_end":10013523,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10013528,"byte_end":10013535,"line_start":424,"line_end":424,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10013540,"byte_end":10013597,"line_start":425,"line_end":425,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10013602,"byte_end":10013646,"line_start":426,"line_end":426,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10013651,"byte_end":10013654,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10013659,"byte_end":10013689,"line_start":428,"line_end":428,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10013694,"byte_end":10013724,"line_start":429,"line_end":429,"column_start":5,"column_end":35}},{"value":"/ let p = a.swap(Shared::null(), SeqCst, guard);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10013729,"byte_end":10013779,"line_start":430,"line_end":430,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10013784,"byte_end":10013791,"line_start":431,"line_end":431,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10015643,"byte_end":10015659,"line_start":466,"line_end":466,"column_start":12,"column_end":28},"name":"compare_exchange","qualname":"<Atomic<T>>::compare_exchange","value":"pub fn compare_exchange<'g,\n                        P>(&Self, Shared<, T>, P, Ordering, Ordering,\n                           &'g Guard) -> Result<Shared, CompareExchangeError>\nwhere P: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10013978,"byte_end":10014074,"line_start":436,"line_end":436,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10014079,"byte_end":10014173,"line_start":437,"line_end":437,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10014178,"byte_end":10014249,"line_start":438,"line_end":438,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10014254,"byte_end":10014257,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ The return value is a result indicating whether the new pointer was written. On success the","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10014262,"byte_end":10014357,"line_start":440,"line_end":440,"column_start":5,"column_end":100}},{"value":"/ pointer that was written is returned. On failure the actual current value and `new` are","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10014362,"byte_end":10014453,"line_start":441,"line_end":441,"column_start":5,"column_end":96}},{"value":"/ returned.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10014458,"byte_end":10014471,"line_start":442,"line_end":442,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10014476,"byte_end":10014479,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ This method takes two `Ordering` arguments to describe the memory","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10014484,"byte_end":10014553,"line_start":444,"line_end":444,"column_start":5,"column_end":74}},{"value":"/ ordering of this operation. `success` describes the required ordering for the","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10014558,"byte_end":10014639,"line_start":445,"line_end":445,"column_start":5,"column_end":86}},{"value":"/ read-modify-write operation that takes place if the comparison with `current` succeeds.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10014644,"byte_end":10014735,"line_start":446,"line_end":446,"column_start":5,"column_end":96}},{"value":"/ `failure` describes the required ordering for the load operation that takes place when","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10014740,"byte_end":10014830,"line_start":447,"line_end":447,"column_start":5,"column_end":95}},{"value":"/ the comparison fails. Using `Acquire` as success ordering makes the store part","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10014835,"byte_end":10014917,"line_start":448,"line_end":448,"column_start":5,"column_end":87}},{"value":"/ of this operation `Relaxed`, and using `Release` makes the successful load","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10014922,"byte_end":10015000,"line_start":449,"line_end":449,"column_start":5,"column_end":83}},{"value":"/ `Relaxed`. The failure ordering can only be `SeqCst`, `Acquire` or `Relaxed`","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10015005,"byte_end":10015085,"line_start":450,"line_end":450,"column_start":5,"column_end":85}},{"value":"/ and must be equivalent to or weaker than the success ordering.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10015090,"byte_end":10015156,"line_start":451,"line_end":451,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10015161,"byte_end":10015164,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10015169,"byte_end":10015183,"line_start":453,"line_end":453,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10015188,"byte_end":10015191,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10015196,"byte_end":10015203,"line_start":455,"line_end":455,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10015208,"byte_end":10015272,"line_start":456,"line_end":456,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10015277,"byte_end":10015321,"line_start":457,"line_end":457,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10015326,"byte_end":10015329,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10015334,"byte_end":10015364,"line_start":459,"line_end":459,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10015369,"byte_end":10015372,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10015377,"byte_end":10015407,"line_start":461,"line_end":461,"column_start":5,"column_end":35}},{"value":"/ let curr = a.load(SeqCst, guard);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10015412,"byte_end":10015449,"line_start":462,"line_end":462,"column_start":5,"column_end":42}},{"value":"/ let res1 = a.compare_exchange(curr, Shared::null(), SeqCst, SeqCst, guard);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10015454,"byte_end":10015533,"line_start":463,"line_end":463,"column_start":5,"column_end":84}},{"value":"/ let res2 = a.compare_exchange(curr, Owned::new(5678), SeqCst, SeqCst, guard);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10015538,"byte_end":10015619,"line_start":464,"line_end":464,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10015624,"byte_end":10015631,"line_start":465,"line_end":465,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10018693,"byte_end":10018714,"line_start":541,"line_end":541,"column_start":12,"column_end":33},"name":"compare_exchange_weak","qualname":"<Atomic<T>>::compare_exchange_weak","value":"pub fn compare_exchange_weak<'g,\n                             P>(&Self, Shared<, T>, P, Ordering, Ordering,\n                                &'g Guard)\n-> Result<Shared, CompareExchangeError> where P: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10016321,"byte_end":10016417,"line_start":489,"line_end":489,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10016422,"byte_end":10016516,"line_start":490,"line_end":490,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10016521,"byte_end":10016592,"line_start":491,"line_end":491,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10016597,"byte_end":10016600,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ Unlike [`compare_exchange`], this method is allowed to spuriously fail even when comparison","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10016605,"byte_end":10016700,"line_start":493,"line_end":493,"column_start":5,"column_end":100}},{"value":"/ succeeds, which can result in more efficient code on some platforms.  The return value is a","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10016705,"byte_end":10016800,"line_start":494,"line_end":494,"column_start":5,"column_end":100}},{"value":"/ result indicating whether the new pointer was written. On success the pointer that was","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10016805,"byte_end":10016895,"line_start":495,"line_end":495,"column_start":5,"column_end":95}},{"value":"/ written is returned. On failure the actual current value and `new` are returned.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10016900,"byte_end":10016984,"line_start":496,"line_end":496,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10016989,"byte_end":10016992,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ This method takes two `Ordering` arguments to describe the memory","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10016997,"byte_end":10017066,"line_start":498,"line_end":498,"column_start":5,"column_end":74}},{"value":"/ ordering of this operation. `success` describes the required ordering for the","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10017071,"byte_end":10017152,"line_start":499,"line_end":499,"column_start":5,"column_end":86}},{"value":"/ read-modify-write operation that takes place if the comparison with `current` succeeds.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10017157,"byte_end":10017248,"line_start":500,"line_end":500,"column_start":5,"column_end":96}},{"value":"/ `failure` describes the required ordering for the load operation that takes place when","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10017253,"byte_end":10017343,"line_start":501,"line_end":501,"column_start":5,"column_end":95}},{"value":"/ the comparison fails. Using `Acquire` as success ordering makes the store part","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10017348,"byte_end":10017430,"line_start":502,"line_end":502,"column_start":5,"column_end":87}},{"value":"/ of this operation `Relaxed`, and using `Release` makes the successful load","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10017435,"byte_end":10017513,"line_start":503,"line_end":503,"column_start":5,"column_end":83}},{"value":"/ `Relaxed`. The failure ordering can only be `SeqCst`, `Acquire` or `Relaxed`","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10017518,"byte_end":10017598,"line_start":504,"line_end":504,"column_start":5,"column_end":85}},{"value":"/ and must be equivalent to or weaker than the success ordering.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10017603,"byte_end":10017669,"line_start":505,"line_end":505,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10017674,"byte_end":10017677,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ [`compare_exchange`]: Atomic::compare_exchange","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10017682,"byte_end":10017732,"line_start":507,"line_end":507,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10017737,"byte_end":10017740,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10017745,"byte_end":10017759,"line_start":509,"line_end":509,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10017764,"byte_end":10017767,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10017772,"byte_end":10017779,"line_start":511,"line_end":511,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10017784,"byte_end":10017848,"line_start":512,"line_end":512,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10017853,"byte_end":10017897,"line_start":513,"line_end":513,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10017902,"byte_end":10017905,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10017910,"byte_end":10017940,"line_start":515,"line_end":515,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10017945,"byte_end":10017975,"line_start":516,"line_end":516,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10017980,"byte_end":10017983,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ let mut new = Owned::new(5678);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10017988,"byte_end":10018023,"line_start":518,"line_end":518,"column_start":5,"column_end":40}},{"value":"/ let mut ptr = a.load(SeqCst, guard);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10018028,"byte_end":10018068,"line_start":519,"line_end":519,"column_start":5,"column_end":45}},{"value":"/ loop {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10018073,"byte_end":10018083,"line_start":520,"line_end":520,"column_start":5,"column_end":15}},{"value":"/     match a.compare_exchange_weak(ptr, new, SeqCst, SeqCst, guard) {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10018088,"byte_end":10018160,"line_start":521,"line_end":521,"column_start":5,"column_end":77}},{"value":"/         Ok(p) => {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10018165,"byte_end":10018187,"line_start":522,"line_end":522,"column_start":5,"column_end":27}},{"value":"/             ptr = p;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10018192,"byte_end":10018216,"line_start":523,"line_end":523,"column_start":5,"column_end":29}},{"value":"/             break;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10018221,"byte_end":10018243,"line_start":524,"line_end":524,"column_start":5,"column_end":27}},{"value":"/         }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10018248,"byte_end":10018261,"line_start":525,"line_end":525,"column_start":5,"column_end":18}},{"value":"/         Err(err) => {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10018266,"byte_end":10018291,"line_start":526,"line_end":526,"column_start":5,"column_end":30}},{"value":"/             ptr = err.current;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10018296,"byte_end":10018330,"line_start":527,"line_end":527,"column_start":5,"column_end":39}},{"value":"/             new = err.new;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10018335,"byte_end":10018365,"line_start":528,"line_end":528,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10018370,"byte_end":10018383,"line_start":529,"line_end":529,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10018388,"byte_end":10018397,"line_start":530,"line_end":530,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10018402,"byte_end":10018407,"line_start":531,"line_end":531,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10018412,"byte_end":10018415,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ let mut curr = a.load(SeqCst, guard);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10018420,"byte_end":10018461,"line_start":533,"line_end":533,"column_start":5,"column_end":46}},{"value":"/ loop {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10018466,"byte_end":10018476,"line_start":534,"line_end":534,"column_start":5,"column_end":15}},{"value":"/     match a.compare_exchange_weak(curr, Shared::null(), SeqCst, SeqCst, guard) {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10018481,"byte_end":10018565,"line_start":535,"line_end":535,"column_start":5,"column_end":89}},{"value":"/         Ok(_) => break,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10018570,"byte_end":10018597,"line_start":536,"line_end":536,"column_start":5,"column_end":32}},{"value":"/         Err(err) => curr = err.current,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10018602,"byte_end":10018645,"line_start":537,"line_end":537,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10018650,"byte_end":10018659,"line_start":538,"line_end":538,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10018664,"byte_end":10018669,"line_start":539,"line_end":539,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10018674,"byte_end":10018681,"line_start":540,"line_end":540,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10021083,"byte_end":10021098,"line_start":605,"line_end":605,"column_start":12,"column_end":27},"name":"compare_and_set","qualname":"<Atomic<T>>::compare_and_set","value":"pub fn compare_and_set<'g, O, P>(&Self, Shared<, T>, P, O, &'g Guard)\n-> Result<Shared, CompareAndSetError> where O: CompareAndSetOrdering,\nP: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10019381,"byte_end":10019477,"line_start":564,"line_end":564,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10019482,"byte_end":10019576,"line_start":565,"line_end":565,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10019581,"byte_end":10019652,"line_start":566,"line_end":566,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10019657,"byte_end":10019660,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ The return value is a result indicating whether the new pointer was written. On success the","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10019665,"byte_end":10019760,"line_start":568,"line_end":568,"column_start":5,"column_end":100}},{"value":"/ pointer that was written is returned. On failure the actual current value and `new` are","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10019765,"byte_end":10019856,"line_start":569,"line_end":569,"column_start":5,"column_end":96}},{"value":"/ returned.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10019861,"byte_end":10019874,"line_start":570,"line_end":570,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10019879,"byte_end":10019882,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10019887,"byte_end":10019972,"line_start":572,"line_end":572,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10019977,"byte_end":10020008,"line_start":573,"line_end":573,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10020013,"byte_end":10020016,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ # Migrating to `compare_exchange`","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10020021,"byte_end":10020058,"line_start":575,"line_end":575,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10020063,"byte_end":10020066,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ `compare_and_set` is equivalent to `compare_exchange` with the following mapping for","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10020071,"byte_end":10020159,"line_start":577,"line_end":577,"column_start":5,"column_end":93}},{"value":"/ memory orderings:","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10020164,"byte_end":10020185,"line_start":578,"line_end":578,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10020190,"byte_end":10020193,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ Original | Success | Failure","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10020198,"byte_end":10020230,"line_start":580,"line_end":580,"column_start":5,"column_end":37}},{"value":"/ -------- | ------- | -------","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10020235,"byte_end":10020267,"line_start":581,"line_end":581,"column_start":5,"column_end":37}},{"value":"/ Relaxed  | Relaxed | Relaxed","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10020272,"byte_end":10020304,"line_start":582,"line_end":582,"column_start":5,"column_end":37}},{"value":"/ Acquire  | Acquire | Acquire","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10020309,"byte_end":10020341,"line_start":583,"line_end":583,"column_start":5,"column_end":37}},{"value":"/ Release  | Release | Relaxed","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10020346,"byte_end":10020378,"line_start":584,"line_end":584,"column_start":5,"column_end":37}},{"value":"/ AcqRel   | AcqRel  | Acquire","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10020383,"byte_end":10020415,"line_start":585,"line_end":585,"column_start":5,"column_end":37}},{"value":"/ SeqCst   | SeqCst  | SeqCst","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10020420,"byte_end":10020451,"line_start":586,"line_end":586,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10020456,"byte_end":10020459,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10020464,"byte_end":10020478,"line_start":588,"line_end":588,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10020483,"byte_end":10020486,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10020491,"byte_end":10020498,"line_start":590,"line_end":590,"column_start":5,"column_end":12}},{"value":"/ # #![allow(deprecated)]","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10020503,"byte_end":10020530,"line_start":591,"line_end":591,"column_start":5,"column_end":32}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10020535,"byte_end":10020599,"line_start":592,"line_end":592,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10020604,"byte_end":10020648,"line_start":593,"line_end":593,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10020653,"byte_end":10020656,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10020661,"byte_end":10020691,"line_start":595,"line_end":595,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10020696,"byte_end":10020699,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10020704,"byte_end":10020734,"line_start":597,"line_end":597,"column_start":5,"column_end":35}},{"value":"/ let curr = a.load(SeqCst, guard);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10020739,"byte_end":10020776,"line_start":598,"line_end":598,"column_start":5,"column_end":42}},{"value":"/ let res1 = a.compare_and_set(curr, Shared::null(), SeqCst, guard);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10020781,"byte_end":10020851,"line_start":599,"line_end":599,"column_start":5,"column_end":75}},{"value":"/ let res2 = a.compare_and_set(curr, Owned::new(5678), SeqCst, guard);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10020856,"byte_end":10020928,"line_start":600,"line_end":600,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10020933,"byte_end":10020940,"line_start":601,"line_end":601,"column_start":5,"column_end":12}},{"value":"allow(deprecated)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10020992,"byte_end":10021012,"line_start":603,"line_end":603,"column_start":5,"column_end":25}},{"value":"deprecated(note = \"Use `compare_exchange` instead\")","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10021017,"byte_end":10021071,"line_start":604,"line_end":604,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10023867,"byte_end":10023887,"line_start":682,"line_end":682,"column_start":12,"column_end":32},"name":"compare_and_set_weak","qualname":"<Atomic<T>>::compare_and_set_weak","value":"pub fn compare_and_set_weak<'g, O, P>(&Self, Shared<, T>, P, O, &'g Guard)\n-> Result<Shared, CompareAndSetError> where O: CompareAndSetOrdering,\nP: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10021441,"byte_end":10021537,"line_start":619,"line_end":619,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10021542,"byte_end":10021636,"line_start":620,"line_end":620,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10021641,"byte_end":10021712,"line_start":621,"line_end":621,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10021717,"byte_end":10021720,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ Unlike [`compare_and_set`], this method is allowed to spuriously fail even when comparison","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10021725,"byte_end":10021819,"line_start":623,"line_end":623,"column_start":5,"column_end":99}},{"value":"/ succeeds, which can result in more efficient code on some platforms.  The return value is a","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10021824,"byte_end":10021919,"line_start":624,"line_end":624,"column_start":5,"column_end":100}},{"value":"/ result indicating whether the new pointer was written. On success the pointer that was","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10021924,"byte_end":10022014,"line_start":625,"line_end":625,"column_start":5,"column_end":95}},{"value":"/ written is returned. On failure the actual current value and `new` are returned.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10022019,"byte_end":10022103,"line_start":626,"line_end":626,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10022108,"byte_end":10022111,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10022116,"byte_end":10022201,"line_start":628,"line_end":628,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10022206,"byte_end":10022237,"line_start":629,"line_end":629,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10022242,"byte_end":10022245,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ [`compare_and_set`]: Atomic::compare_and_set","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10022250,"byte_end":10022298,"line_start":631,"line_end":631,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10022303,"byte_end":10022306,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ # Migrating to `compare_exchange_weak`","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10022311,"byte_end":10022353,"line_start":633,"line_end":633,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10022358,"byte_end":10022361,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ `compare_and_set_weak` is equivalent to `compare_exchange_weak` with the following mapping for","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10022366,"byte_end":10022464,"line_start":635,"line_end":635,"column_start":5,"column_end":103}},{"value":"/ memory orderings:","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10022469,"byte_end":10022490,"line_start":636,"line_end":636,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10022495,"byte_end":10022498,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ Original | Success | Failure","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10022503,"byte_end":10022535,"line_start":638,"line_end":638,"column_start":5,"column_end":37}},{"value":"/ -------- | ------- | -------","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10022540,"byte_end":10022572,"line_start":639,"line_end":639,"column_start":5,"column_end":37}},{"value":"/ Relaxed  | Relaxed | Relaxed","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10022577,"byte_end":10022609,"line_start":640,"line_end":640,"column_start":5,"column_end":37}},{"value":"/ Acquire  | Acquire | Acquire","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10022614,"byte_end":10022646,"line_start":641,"line_end":641,"column_start":5,"column_end":37}},{"value":"/ Release  | Release | Relaxed","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10022651,"byte_end":10022683,"line_start":642,"line_end":642,"column_start":5,"column_end":37}},{"value":"/ AcqRel   | AcqRel  | Acquire","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10022688,"byte_end":10022720,"line_start":643,"line_end":643,"column_start":5,"column_end":37}},{"value":"/ SeqCst   | SeqCst  | SeqCst","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10022725,"byte_end":10022756,"line_start":644,"line_end":644,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10022761,"byte_end":10022764,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10022769,"byte_end":10022783,"line_start":646,"line_end":646,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10022788,"byte_end":10022791,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10022796,"byte_end":10022803,"line_start":648,"line_end":648,"column_start":5,"column_end":12}},{"value":"/ # #![allow(deprecated)]","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10022808,"byte_end":10022835,"line_start":649,"line_end":649,"column_start":5,"column_end":32}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10022840,"byte_end":10022904,"line_start":650,"line_end":650,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10022909,"byte_end":10022953,"line_start":651,"line_end":651,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10022958,"byte_end":10022961,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10022966,"byte_end":10022996,"line_start":653,"line_end":653,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10023001,"byte_end":10023031,"line_start":654,"line_end":654,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10023036,"byte_end":10023039,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ let mut new = Owned::new(5678);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10023044,"byte_end":10023079,"line_start":656,"line_end":656,"column_start":5,"column_end":40}},{"value":"/ let mut ptr = a.load(SeqCst, guard);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10023084,"byte_end":10023124,"line_start":657,"line_end":657,"column_start":5,"column_end":45}},{"value":"/ loop {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10023129,"byte_end":10023139,"line_start":658,"line_end":658,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(ptr, new, SeqCst, guard) {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10023144,"byte_end":10023207,"line_start":659,"line_end":659,"column_start":5,"column_end":68}},{"value":"/         Ok(p) => {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10023212,"byte_end":10023234,"line_start":660,"line_end":660,"column_start":5,"column_end":27}},{"value":"/             ptr = p;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10023239,"byte_end":10023263,"line_start":661,"line_end":661,"column_start":5,"column_end":29}},{"value":"/             break;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10023268,"byte_end":10023290,"line_start":662,"line_end":662,"column_start":5,"column_end":27}},{"value":"/         }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10023295,"byte_end":10023308,"line_start":663,"line_end":663,"column_start":5,"column_end":18}},{"value":"/         Err(err) => {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10023313,"byte_end":10023338,"line_start":664,"line_end":664,"column_start":5,"column_end":30}},{"value":"/             ptr = err.current;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10023343,"byte_end":10023377,"line_start":665,"line_end":665,"column_start":5,"column_end":39}},{"value":"/             new = err.new;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10023382,"byte_end":10023412,"line_start":666,"line_end":666,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10023417,"byte_end":10023430,"line_start":667,"line_end":667,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10023435,"byte_end":10023444,"line_start":668,"line_end":668,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10023449,"byte_end":10023454,"line_start":669,"line_end":669,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10023459,"byte_end":10023462,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ let mut curr = a.load(SeqCst, guard);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10023467,"byte_end":10023508,"line_start":671,"line_end":671,"column_start":5,"column_end":46}},{"value":"/ loop {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10023513,"byte_end":10023523,"line_start":672,"line_end":672,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(curr, Shared::null(), SeqCst, guard) {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10023528,"byte_end":10023603,"line_start":673,"line_end":673,"column_start":5,"column_end":80}},{"value":"/         Ok(_) => break,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10023608,"byte_end":10023635,"line_start":674,"line_end":674,"column_start":5,"column_end":32}},{"value":"/         Err(err) => curr = err.current,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10023640,"byte_end":10023683,"line_start":675,"line_end":675,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10023688,"byte_end":10023697,"line_start":676,"line_end":676,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10023702,"byte_end":10023707,"line_start":677,"line_end":677,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10023712,"byte_end":10023719,"line_start":678,"line_end":678,"column_start":5,"column_end":12}},{"value":"allow(deprecated)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10023771,"byte_end":10023791,"line_start":680,"line_end":680,"column_start":5,"column_end":25}},{"value":"deprecated(note = \"Use `compare_exchange_weak` instead\")","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10023796,"byte_end":10023855,"line_start":681,"line_end":681,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10024966,"byte_end":10024975,"line_start":715,"line_end":715,"column_start":12,"column_end":21},"name":"fetch_and","qualname":"<Atomic<T>>::fetch_and","value":"pub fn fetch_and<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"and\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"and\" with the current tag.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10024235,"byte_end":10024274,"line_start":696,"line_end":696,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10024279,"byte_end":10024282,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"and\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10024287,"byte_end":10024381,"line_start":698,"line_end":698,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10024386,"byte_end":10024442,"line_start":699,"line_end":699,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10024447,"byte_end":10024450,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10024455,"byte_end":10024545,"line_start":701,"line_end":701,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10024550,"byte_end":10024564,"line_start":702,"line_end":702,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10024569,"byte_end":10024572,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10024577,"byte_end":10024591,"line_start":704,"line_end":704,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10024596,"byte_end":10024599,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10024604,"byte_end":10024611,"line_start":706,"line_end":706,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10024616,"byte_end":10024673,"line_start":707,"line_end":707,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10024678,"byte_end":10024722,"line_start":708,"line_end":708,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10024727,"byte_end":10024730,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(3));","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10024735,"byte_end":10024795,"line_start":710,"line_end":710,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10024800,"byte_end":10024830,"line_start":711,"line_end":711,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_and(2, SeqCst, guard).tag(), 3);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10024835,"byte_end":10024890,"line_start":712,"line_end":712,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10024895,"byte_end":10024942,"line_start":713,"line_end":713,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10024947,"byte_end":10024954,"line_start":714,"line_end":714,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10025874,"byte_end":10025882,"line_start":738,"line_end":738,"column_start":12,"column_end":20},"name":"fetch_or","qualname":"<Atomic<T>>::fetch_or","value":"pub fn fetch_or<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"or\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"or\" with the current tag.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10025146,"byte_end":10025184,"line_start":719,"line_end":719,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10025189,"byte_end":10025192,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"or\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10025197,"byte_end":10025290,"line_start":721,"line_end":721,"column_start":5,"column_end":98}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10025295,"byte_end":10025351,"line_start":722,"line_end":722,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10025356,"byte_end":10025359,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10025364,"byte_end":10025454,"line_start":724,"line_end":724,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10025459,"byte_end":10025473,"line_start":725,"line_end":725,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10025478,"byte_end":10025481,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10025486,"byte_end":10025500,"line_start":727,"line_end":727,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10025505,"byte_end":10025508,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10025513,"byte_end":10025520,"line_start":729,"line_end":729,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10025525,"byte_end":10025582,"line_start":730,"line_end":730,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10025587,"byte_end":10025631,"line_start":731,"line_end":731,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10025636,"byte_end":10025639,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10025644,"byte_end":10025704,"line_start":733,"line_end":733,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10025709,"byte_end":10025739,"line_start":734,"line_end":734,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_or(2, SeqCst, guard).tag(), 1);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10025744,"byte_end":10025798,"line_start":735,"line_end":735,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 3);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10025803,"byte_end":10025850,"line_start":736,"line_end":736,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10025855,"byte_end":10025862,"line_start":737,"line_end":737,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10026782,"byte_end":10026791,"line_start":761,"line_end":761,"column_start":12,"column_end":21},"name":"fetch_xor","qualname":"<Atomic<T>>::fetch_xor","value":"pub fn fetch_xor<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"xor\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"xor\" with the current tag.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10026051,"byte_end":10026090,"line_start":742,"line_end":742,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10026095,"byte_end":10026098,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"xor\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10026103,"byte_end":10026197,"line_start":744,"line_end":744,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10026202,"byte_end":10026258,"line_start":745,"line_end":745,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10026263,"byte_end":10026266,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10026271,"byte_end":10026361,"line_start":747,"line_end":747,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10026366,"byte_end":10026380,"line_start":748,"line_end":748,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10026385,"byte_end":10026388,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10026393,"byte_end":10026407,"line_start":750,"line_end":750,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10026412,"byte_end":10026415,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10026420,"byte_end":10026427,"line_start":752,"line_end":752,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10026432,"byte_end":10026489,"line_start":753,"line_end":753,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10026494,"byte_end":10026538,"line_start":754,"line_end":754,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10026543,"byte_end":10026546,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10026551,"byte_end":10026611,"line_start":756,"line_end":756,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10026616,"byte_end":10026646,"line_start":757,"line_end":757,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_xor(3, SeqCst, guard).tag(), 1);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10026651,"byte_end":10026706,"line_start":758,"line_end":758,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10026711,"byte_end":10026758,"line_start":759,"line_end":759,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10026763,"byte_end":10026770,"line_start":760,"line_end":760,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10028088,"byte_end":10028098,"line_start":799,"line_end":799,"column_start":19,"column_end":29},"name":"into_owned","qualname":"<Atomic<T>>::into_owned","value":"pub unsafe fn into_owned(Self) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10026961,"byte_end":10026996,"line_start":765,"line_end":765,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10027001,"byte_end":10027004,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/ This consumes the atomic and converts it into [`Owned`]. As [`Atomic`] doesn't have a","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10027009,"byte_end":10027098,"line_start":767,"line_end":767,"column_start":5,"column_end":94}},{"value":"/ destructor and doesn't drop the pointee while [`Owned`] does, this is suitable for","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10027103,"byte_end":10027189,"line_start":768,"line_end":768,"column_start":5,"column_end":91}},{"value":"/ destructors of data structures.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10027194,"byte_end":10027229,"line_start":769,"line_end":769,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10027234,"byte_end":10027237,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10027242,"byte_end":10027254,"line_start":771,"line_end":771,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10027259,"byte_end":10027262,"line_start":772,"line_end":772,"column_start":5,"column_end":8}},{"value":"/ Panics if this pointer is null, but only in debug mode.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10027267,"byte_end":10027326,"line_start":773,"line_end":773,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10027331,"byte_end":10027334,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10027339,"byte_end":10027351,"line_start":775,"line_end":775,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10027356,"byte_end":10027359,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10027364,"byte_end":10027451,"line_start":777,"line_end":777,"column_start":5,"column_end":92}},{"value":"/ reference to the same object.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10027456,"byte_end":10027489,"line_start":778,"line_end":778,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10027494,"byte_end":10027497,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10027502,"byte_end":10027516,"line_start":780,"line_end":780,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10027521,"byte_end":10027524,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10027529,"byte_end":10027540,"line_start":782,"line_end":782,"column_start":5,"column_end":16}},{"value":"/ # use std::mem;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10027545,"byte_end":10027564,"line_start":783,"line_end":783,"column_start":5,"column_end":24}},{"value":"/ # use crossbeam_epoch::Atomic;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10027569,"byte_end":10027603,"line_start":784,"line_end":784,"column_start":5,"column_end":39}},{"value":"/ struct DataStructure {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10027608,"byte_end":10027634,"line_start":785,"line_end":785,"column_start":5,"column_end":31}},{"value":"/     ptr: Atomic<usize>,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10027639,"byte_end":10027666,"line_start":786,"line_end":786,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10027671,"byte_end":10027676,"line_start":787,"line_end":787,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10027681,"byte_end":10027684,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ impl Drop for DataStructure {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10027689,"byte_end":10027722,"line_start":789,"line_end":789,"column_start":5,"column_end":38}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10027727,"byte_end":10027755,"line_start":790,"line_end":790,"column_start":5,"column_end":33}},{"value":"/         // By now the DataStructure lives only in our thread and we are sure we don't hold","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10027760,"byte_end":10027854,"line_start":791,"line_end":791,"column_start":5,"column_end":99}},{"value":"/         // any Shared or & to it ourselves.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10027859,"byte_end":10027906,"line_start":792,"line_end":792,"column_start":5,"column_end":52}},{"value":"/         unsafe {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10027911,"byte_end":10027931,"line_start":793,"line_end":793,"column_start":5,"column_end":25}},{"value":"/             drop(mem::replace(&mut self.ptr, Atomic::null()).into_owned());","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10027936,"byte_end":10028015,"line_start":794,"line_end":794,"column_start":5,"column_end":84}},{"value":"/         }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10028020,"byte_end":10028033,"line_start":795,"line_end":795,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10028038,"byte_end":10028047,"line_start":796,"line_end":796,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10028052,"byte_end":10028057,"line_start":797,"line_end":797,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10028062,"byte_end":10028069,"line_start":798,"line_end":798,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":242},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10031115,"byte_end":10031122,"line_start":912,"line_end":912,"column_start":11,"column_end":18},"name":"Pointer","qualname":"::atomic::Pointer","value":"Pointer<T: ?Sized + Pointable>","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":245}],"decl_id":null,"docs":" A trait for either `Owned` or `Shared` pointers.\n","sig":null,"attributes":[{"value":"/ A trait for either `Owned` or `Shared` pointers.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10031052,"byte_end":10031104,"line_start":911,"line_end":911,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10031214,"byte_end":10031224,"line_start":914,"line_end":914,"column_start":8,"column_end":18},"name":"into_usize","qualname":"::atomic::Pointer::into_usize","value":"pub fn into_usize(Self) -> usize","parent":{"krate":0,"index":242},"children":[],"decl_id":null,"docs":" Returns the machine representation of the pointer.\n","sig":null,"attributes":[{"value":"/ Returns the machine representation of the pointer.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10031152,"byte_end":10031206,"line_start":913,"line_end":913,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10031531,"byte_end":10031541,"line_start":922,"line_end":922,"column_start":15,"column_end":25},"name":"from_usize","qualname":"::atomic::Pointer::from_usize","value":"pub unsafe fn from_usize(usize) -> Self","parent":{"krate":0,"index":242},"children":[],"decl_id":null,"docs":" Returns a new pointer pointing to the tagged pointer `data`.","sig":null,"attributes":[{"value":"/ Returns a new pointer pointing to the tagged pointer `data`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10031246,"byte_end":10031310,"line_start":916,"line_end":916,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10031315,"byte_end":10031318,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10031323,"byte_end":10031335,"line_start":918,"line_end":918,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10031340,"byte_end":10031343,"line_start":919,"line_end":919,"column_start":5,"column_end":8}},{"value":"/ The given `data` should have been created by `Pointer::into_usize()`, and one `data` should","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10031348,"byte_end":10031443,"line_start":920,"line_end":920,"column_start":5,"column_end":100}},{"value":"/ not be converted back by `Pointer::from_usize()` multiple times.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10031448,"byte_end":10031516,"line_start":921,"line_end":921,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":246},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10031807,"byte_end":10031812,"line_start":931,"line_end":931,"column_start":12,"column_end":17},"name":"Owned","qualname":"::atomic::Owned","value":"Owned {  }","parent":null,"children":[{"krate":0,"index":248},{"krate":0,"index":249}],"decl_id":null,"docs":" An owned heap-allocated object.","sig":null,"attributes":[{"value":"/ An owned heap-allocated object.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10031567,"byte_end":10031602,"line_start":925,"line_end":925,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10031603,"byte_end":10031606,"line_start":926,"line_end":926,"column_start":1,"column_end":4}},{"value":"/ This type is very similar to `Box<T>`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10031607,"byte_end":10031649,"line_start":927,"line_end":927,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10031650,"byte_end":10031653,"line_start":928,"line_end":928,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10031654,"byte_end":10031752,"line_start":929,"line_end":929,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10031753,"byte_end":10031795,"line_start":930,"line_end":930,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10033210,"byte_end":10033218,"line_start":982,"line_end":982,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<Owned<T>>::from_raw","value":"pub unsafe fn from_raw(*mut T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new owned pointer pointing to `raw`.","sig":null,"attributes":[{"value":"/ Returns a new owned pointer pointing to `raw`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10032462,"byte_end":10032512,"line_start":960,"line_end":960,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10032517,"byte_end":10032520,"line_start":961,"line_end":961,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because improper use may lead to memory problems. Argument `raw`","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10032525,"byte_end":10032617,"line_start":962,"line_end":962,"column_start":5,"column_end":97}},{"value":"/ must be a valid pointer. Also, a double-free may occur if the function is called twice on","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10032622,"byte_end":10032715,"line_start":963,"line_end":963,"column_start":5,"column_end":98}},{"value":"/ the same raw pointer.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10032720,"byte_end":10032745,"line_start":964,"line_end":964,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10032750,"byte_end":10032753,"line_start":965,"line_end":965,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10032758,"byte_end":10032770,"line_start":966,"line_end":966,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10032775,"byte_end":10032778,"line_start":967,"line_end":967,"column_start":5,"column_end":8}},{"value":"/ Panics if `raw` is not properly aligned.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10032783,"byte_end":10032827,"line_start":968,"line_end":968,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10032832,"byte_end":10032835,"line_start":969,"line_end":969,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10032840,"byte_end":10032852,"line_start":970,"line_end":970,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10032857,"byte_end":10032860,"line_start":971,"line_end":971,"column_start":5,"column_end":8}},{"value":"/ The given `raw` should have been derived from `Owned`, and one `raw` should not be converted","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10032865,"byte_end":10032961,"line_start":972,"line_end":972,"column_start":5,"column_end":101}},{"value":"/ back by `Owned::from_raw()` multiple times.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10032966,"byte_end":10033013,"line_start":973,"line_end":973,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10033018,"byte_end":10033021,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10033026,"byte_end":10033040,"line_start":975,"line_end":975,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10033045,"byte_end":10033048,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10033053,"byte_end":10033060,"line_start":977,"line_end":977,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10033065,"byte_end":10033096,"line_start":978,"line_end":978,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10033101,"byte_end":10033104,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ let o = unsafe { Owned::from_raw(Box::into_raw(Box::new(1234))) };","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10033109,"byte_end":10033179,"line_start":980,"line_end":980,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10033184,"byte_end":10033191,"line_start":981,"line_end":981,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10033616,"byte_end":10033624,"line_start":999,"line_end":999,"column_start":12,"column_end":20},"name":"into_box","qualname":"<Owned<T>>::into_box","value":"pub fn into_box(Self) -> Box<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a `Box`.","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a `Box`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10033353,"byte_end":10033397,"line_start":988,"line_end":988,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10033402,"byte_end":10033405,"line_start":989,"line_end":989,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10033410,"byte_end":10033424,"line_start":990,"line_end":990,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10033429,"byte_end":10033432,"line_start":991,"line_end":991,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10033437,"byte_end":10033444,"line_start":992,"line_end":992,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10033449,"byte_end":10033480,"line_start":993,"line_end":993,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10033485,"byte_end":10033488,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10033493,"byte_end":10033522,"line_start":995,"line_end":995,"column_start":5,"column_end":34}},{"value":"/ let b: Box<i32> = o.into_box();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10033527,"byte_end":10033562,"line_start":996,"line_end":996,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(*b, 1234);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10033567,"byte_end":10033592,"line_start":997,"line_end":997,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10033597,"byte_end":10033604,"line_start":998,"line_end":998,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10034013,"byte_end":10034016,"line_start":1014,"line_end":1014,"column_start":12,"column_end":15},"name":"new","qualname":"<Owned<T>>::new","value":"pub fn new(T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new owned pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new owned pointer pointing to it.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10033783,"byte_end":10033864,"line_start":1005,"line_end":1005,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10033869,"byte_end":10033872,"line_start":1006,"line_end":1006,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10033877,"byte_end":10033891,"line_start":1007,"line_end":1007,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10033896,"byte_end":10033899,"line_start":1008,"line_end":1008,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10033904,"byte_end":10033911,"line_start":1009,"line_end":1009,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10033916,"byte_end":10033947,"line_start":1010,"line_end":1010,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10033952,"byte_end":10033955,"line_start":1011,"line_end":1011,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10033960,"byte_end":10033989,"line_start":1012,"line_end":1012,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10033994,"byte_end":10034001,"line_start":1013,"line_end":1013,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10034355,"byte_end":10034359,"line_start":1029,"line_end":1029,"column_start":12,"column_end":16},"name":"init","qualname":"<Owned<T>>::init","value":"pub fn init(T::Init) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new owned pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new owned pointer pointing to it.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10034117,"byte_end":10034198,"line_start":1020,"line_end":1020,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10034203,"byte_end":10034206,"line_start":1021,"line_end":1021,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10034211,"byte_end":10034225,"line_start":1022,"line_end":1022,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10034230,"byte_end":10034233,"line_start":1023,"line_end":1023,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10034238,"byte_end":10034245,"line_start":1024,"line_end":1024,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10034250,"byte_end":10034281,"line_start":1025,"line_end":1025,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10034286,"byte_end":10034289,"line_start":1026,"line_end":1026,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::<i32>::init(1234);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10034294,"byte_end":10034331,"line_start":1027,"line_end":1027,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10034336,"byte_end":10034343,"line_start":1028,"line_end":1028,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10034780,"byte_end":10034791,"line_start":1045,"line_end":1045,"column_start":12,"column_end":23},"name":"into_shared","qualname":"<Owned<T>>::into_shared","value":"pub fn into_shared<'g>(Self, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a [`Shared`].","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a [`Shared`].","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10034451,"byte_end":10034500,"line_start":1033,"line_end":1033,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10034505,"byte_end":10034508,"line_start":1034,"line_end":1034,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10034513,"byte_end":10034527,"line_start":1035,"line_end":1035,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10034532,"byte_end":10034535,"line_start":1036,"line_end":1036,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10034540,"byte_end":10034547,"line_start":1037,"line_end":1037,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Owned};","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10034552,"byte_end":10034600,"line_start":1038,"line_end":1038,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10034605,"byte_end":10034608,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10034613,"byte_end":10034642,"line_start":1040,"line_end":1040,"column_start":5,"column_end":34}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10034647,"byte_end":10034677,"line_start":1041,"line_end":1041,"column_start":5,"column_end":35}},{"value":"/ let p = o.into_shared(guard);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10034682,"byte_end":10034715,"line_start":1042,"line_end":1042,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10034720,"byte_end":10034727,"line_start":1043,"line_end":1043,"column_start":5,"column_end":12}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10034732,"byte_end":10034768,"line_start":1044,"line_end":1044,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10035111,"byte_end":10035114,"line_start":1058,"line_end":1058,"column_start":12,"column_end":15},"name":"tag","qualname":"<Owned<T>>::tag","value":"pub fn tag(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10034903,"byte_end":10034949,"line_start":1049,"line_end":1049,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10034954,"byte_end":10034957,"line_start":1050,"line_end":1050,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10034962,"byte_end":10034976,"line_start":1051,"line_end":1051,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10034981,"byte_end":10034984,"line_start":1052,"line_end":1052,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10034989,"byte_end":10034996,"line_start":1053,"line_end":1053,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10035001,"byte_end":10035032,"line_start":1054,"line_end":1054,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10035037,"byte_end":10035040,"line_start":1055,"line_end":1055,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Owned::new(1234).tag(), 0);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10035045,"byte_end":10035087,"line_start":1056,"line_end":1056,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10035092,"byte_end":10035099,"line_start":1057,"line_end":1057,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10035587,"byte_end":10035595,"line_start":1076,"line_end":1076,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Owned<T>>::with_tag","value":"pub fn with_tag(Self, usize) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10035210,"byte_end":10035300,"line_start":1063,"line_end":1063,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10035305,"byte_end":10035343,"line_start":1064,"line_end":1064,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10035348,"byte_end":10035351,"line_start":1065,"line_end":1065,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10035356,"byte_end":10035370,"line_start":1066,"line_end":1066,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10035375,"byte_end":10035378,"line_start":1067,"line_end":1067,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10035383,"byte_end":10035390,"line_start":1068,"line_end":1068,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10035395,"byte_end":10035426,"line_start":1069,"line_end":1069,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10035431,"byte_end":10035434,"line_start":1070,"line_end":1070,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(0u64);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10035439,"byte_end":10035468,"line_start":1071,"line_end":1071,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(o.tag(), 0);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10035473,"byte_end":10035500,"line_start":1072,"line_end":1072,"column_start":5,"column_end":32}},{"value":"/ let o = o.with_tag(2);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10035505,"byte_end":10035531,"line_start":1073,"line_end":1073,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(o.tag(), 2);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10035536,"byte_end":10035563,"line_start":1074,"line_end":1074,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10035568,"byte_end":10035575,"line_start":1075,"line_end":1075,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":300},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10038057,"byte_end":10038063,"line_start":1179,"line_end":1179,"column_start":12,"column_end":18},"name":"Shared","qualname":"::atomic::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304}],"decl_id":null,"docs":" A pointer to an object protected by the epoch GC.","sig":null,"attributes":[{"value":"/ A pointer to an object protected by the epoch GC.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10037778,"byte_end":10037831,"line_start":1173,"line_end":1173,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10037832,"byte_end":10037835,"line_start":1174,"line_end":1174,"column_start":1,"column_end":4}},{"value":"/ The pointer is valid for use only during the lifetime `'g`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10037836,"byte_end":10037899,"line_start":1175,"line_end":1175,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10037900,"byte_end":10037903,"line_start":1176,"line_end":1176,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10037904,"byte_end":10038002,"line_start":1177,"line_end":1177,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10038003,"byte_end":10038045,"line_start":1178,"line_end":1178,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10039234,"byte_end":10039240,"line_start":1228,"line_end":1228,"column_start":12,"column_end":18},"name":"as_raw","qualname":"<Shared>::as_raw","value":"pub fn as_raw(&Self) -> *const T","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a raw pointer (without the tag).","sig":null,"attributes":[{"value":"/ Converts the pointer to a raw pointer (without the tag).","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10038715,"byte_end":10038775,"line_start":1211,"line_end":1211,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10038780,"byte_end":10038783,"line_start":1212,"line_end":1212,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10038788,"byte_end":10038802,"line_start":1213,"line_end":1213,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10038807,"byte_end":10038810,"line_start":1214,"line_end":1214,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10038815,"byte_end":10038822,"line_start":1215,"line_end":1215,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10038827,"byte_end":10038883,"line_start":1216,"line_end":1216,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10038888,"byte_end":10038932,"line_start":1217,"line_end":1217,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10038937,"byte_end":10038940,"line_start":1218,"line_end":1218,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10038945,"byte_end":10038974,"line_start":1219,"line_end":1219,"column_start":5,"column_end":34}},{"value":"/ let raw = &*o as *const _;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10038979,"byte_end":10039009,"line_start":1220,"line_end":1220,"column_start":5,"column_end":35}},{"value":"/ let a = Atomic::from(o);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10039014,"byte_end":10039042,"line_start":1221,"line_end":1221,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10039047,"byte_end":10039050,"line_start":1222,"line_end":1222,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10039055,"byte_end":10039085,"line_start":1223,"line_end":1223,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10039090,"byte_end":10039124,"line_start":1224,"line_end":1224,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.as_raw(), raw);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10039129,"byte_end":10039161,"line_start":1225,"line_end":1225,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10039166,"byte_end":10039173,"line_start":1226,"line_end":1226,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10039178,"byte_end":10039222,"line_start":1227,"line_end":1227,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10039617,"byte_end":10039621,"line_start":1245,"line_end":1245,"column_start":12,"column_end":16},"name":"null","qualname":"<Shared>::null","value":"pub fn null() -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null pointer.","sig":null,"attributes":[{"value":"/ Returns a new null pointer.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10039401,"byte_end":10039432,"line_start":1235,"line_end":1235,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10039437,"byte_end":10039440,"line_start":1236,"line_end":1236,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10039445,"byte_end":10039459,"line_start":1237,"line_end":1237,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10039464,"byte_end":10039467,"line_start":1238,"line_end":1238,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10039472,"byte_end":10039479,"line_start":1239,"line_end":1239,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Shared;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10039484,"byte_end":10039516,"line_start":1240,"line_end":1240,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10039521,"byte_end":10039524,"line_start":1241,"line_end":1241,"column_start":5,"column_end":8}},{"value":"/ let p = Shared::<i32>::null();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10039529,"byte_end":10039563,"line_start":1242,"line_end":1242,"column_start":5,"column_end":39}},{"value":"/ assert!(p.is_null());","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10039568,"byte_end":10039593,"line_start":1243,"line_end":1243,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10039598,"byte_end":10039605,"line_start":1244,"line_end":1244,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10040227,"byte_end":10040234,"line_start":1267,"line_end":1267,"column_start":12,"column_end":19},"name":"is_null","qualname":"<Shared>::is_null","value":"pub fn is_null(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the pointer is null.","sig":null,"attributes":[{"value":"/ Returns `true` if the pointer is null.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10039736,"byte_end":10039778,"line_start":1252,"line_end":1252,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10039783,"byte_end":10039786,"line_start":1253,"line_end":1253,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10039791,"byte_end":10039805,"line_start":1254,"line_end":1254,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10039810,"byte_end":10039813,"line_start":1255,"line_end":1255,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10039818,"byte_end":10039825,"line_start":1256,"line_end":1256,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10039830,"byte_end":10039886,"line_start":1257,"line_end":1257,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10039891,"byte_end":10039935,"line_start":1258,"line_end":1258,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10039940,"byte_end":10039943,"line_start":1259,"line_end":1259,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::null();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10039948,"byte_end":10039975,"line_start":1260,"line_end":1260,"column_start":5,"column_end":32}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10039980,"byte_end":10040010,"line_start":1261,"line_end":1261,"column_start":5,"column_end":35}},{"value":"/ assert!(a.load(SeqCst, guard).is_null());","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10040015,"byte_end":10040060,"line_start":1262,"line_end":1262,"column_start":5,"column_end":50}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10040065,"byte_end":10040103,"line_start":1263,"line_end":1263,"column_start":5,"column_end":43}},{"value":"/ assert!(!a.load(SeqCst, guard).is_null());","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10040108,"byte_end":10040154,"line_start":1264,"line_end":1264,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10040159,"byte_end":10040166,"line_start":1265,"line_end":1265,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10040171,"byte_end":10040215,"line_start":1266,"line_end":1266,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10041608,"byte_end":10041613,"line_start":1305,"line_end":1305,"column_start":19,"column_end":24},"name":"deref","qualname":"<Shared>::deref","value":"pub unsafe fn deref(&Self) -> &'g T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the pointer.","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10040334,"byte_end":10040363,"line_start":1272,"line_end":1272,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10040368,"byte_end":10040371,"line_start":1273,"line_end":1273,"column_start":5,"column_end":8}},{"value":"/ Returns a reference to the pointee that is valid during the lifetime `'g`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10040376,"byte_end":10040454,"line_start":1274,"line_end":1274,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10040459,"byte_end":10040462,"line_start":1275,"line_end":1275,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10040467,"byte_end":10040479,"line_start":1276,"line_end":1276,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10040484,"byte_end":10040487,"line_start":1277,"line_end":1277,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10040492,"byte_end":10040577,"line_start":1278,"line_end":1278,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10040582,"byte_end":10040585,"line_start":1279,"line_end":1279,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possibility of data races due to lack of proper synchronization.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10040590,"byte_end":10040681,"line_start":1280,"line_end":1280,"column_start":5,"column_end":96}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10040686,"byte_end":10040735,"line_start":1281,"line_end":1281,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10040740,"byte_end":10040743,"line_start":1282,"line_end":1282,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10040748,"byte_end":10040820,"line_start":1283,"line_end":1283,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10040825,"byte_end":10040900,"line_start":1284,"line_end":1284,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10040905,"byte_end":10040908,"line_start":1285,"line_end":1285,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10040913,"byte_end":10041006,"line_start":1286,"line_end":1286,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10041011,"byte_end":10041104,"line_start":1287,"line_end":1287,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10041109,"byte_end":10041147,"line_start":1288,"line_end":1288,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10041152,"byte_end":10041155,"line_start":1289,"line_end":1289,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10041160,"byte_end":10041174,"line_start":1290,"line_end":1290,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10041179,"byte_end":10041182,"line_start":1291,"line_end":1291,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10041187,"byte_end":10041194,"line_start":1292,"line_end":1292,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10041199,"byte_end":10041248,"line_start":1293,"line_end":1293,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10041253,"byte_end":10041297,"line_start":1294,"line_end":1294,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10041302,"byte_end":10041305,"line_start":1295,"line_end":1295,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10041310,"byte_end":10041340,"line_start":1296,"line_end":1296,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10041345,"byte_end":10041375,"line_start":1297,"line_end":1297,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10041380,"byte_end":10041414,"line_start":1298,"line_end":1298,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10041419,"byte_end":10041431,"line_start":1299,"line_end":1299,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.deref(), &1234);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10041436,"byte_end":10041473,"line_start":1300,"line_end":1300,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10041478,"byte_end":10041483,"line_start":1301,"line_end":1301,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10041488,"byte_end":10041495,"line_start":1302,"line_end":1302,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10041500,"byte_end":10041544,"line_start":1303,"line_end":1303,"column_start":5,"column_end":49}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10041549,"byte_end":10041589,"line_start":1304,"line_end":1304,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10042924,"byte_end":10042933,"line_start":1347,"line_end":1347,"column_start":19,"column_end":28},"name":"deref_mut","qualname":"<Shared>::deref_mut","value":"pub unsafe fn deref_mut(&mut Self) -> &'g mut T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the pointer.","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10041719,"byte_end":10041748,"line_start":1310,"line_end":1310,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10041753,"byte_end":10041756,"line_start":1311,"line_end":1311,"column_start":5,"column_end":8}},{"value":"/ Returns a mutable reference to the pointee that is valid during the lifetime `'g`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10041761,"byte_end":10041847,"line_start":1312,"line_end":1312,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10041852,"byte_end":10041855,"line_start":1313,"line_end":1313,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10041860,"byte_end":10041872,"line_start":1314,"line_end":1314,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10041877,"byte_end":10041880,"line_start":1315,"line_end":1315,"column_start":5,"column_end":8}},{"value":"/ * There is no guarantee that there are no more threads attempting to read/write from/to the","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10041885,"byte_end":10041980,"line_start":1316,"line_end":1316,"column_start":5,"column_end":100}},{"value":"/   actual object at the same time.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10041985,"byte_end":10042022,"line_start":1317,"line_end":1317,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10042027,"byte_end":10042030,"line_start":1318,"line_end":1318,"column_start":5,"column_end":8}},{"value":"/   The user must know that there are no concurrent accesses towards the object itself.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10042035,"byte_end":10042124,"line_start":1319,"line_end":1319,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10042129,"byte_end":10042132,"line_start":1320,"line_end":1320,"column_start":5,"column_end":8}},{"value":"/ * Other than the above, all safety concerns of `deref()` applies here.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10042137,"byte_end":10042211,"line_start":1321,"line_end":1321,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10042216,"byte_end":10042219,"line_start":1322,"line_end":1322,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10042224,"byte_end":10042238,"line_start":1323,"line_end":1323,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10042243,"byte_end":10042246,"line_start":1324,"line_end":1324,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10042251,"byte_end":10042258,"line_start":1325,"line_end":1325,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10042263,"byte_end":10042312,"line_start":1326,"line_end":1326,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10042317,"byte_end":10042361,"line_start":1327,"line_end":1327,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10042366,"byte_end":10042369,"line_start":1328,"line_end":1328,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(vec![1, 2, 3, 4]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10042374,"byte_end":10042416,"line_start":1329,"line_end":1329,"column_start":5,"column_end":47}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10042421,"byte_end":10042451,"line_start":1330,"line_end":1330,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10042456,"byte_end":10042459,"line_start":1331,"line_end":1331,"column_start":5,"column_end":8}},{"value":"/ let mut p = a.load(SeqCst, guard);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10042464,"byte_end":10042502,"line_start":1332,"line_end":1332,"column_start":5,"column_end":43}},{"value":"/ unsafe {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10042507,"byte_end":10042519,"line_start":1333,"line_end":1333,"column_start":5,"column_end":17}},{"value":"/     assert!(!p.is_null());","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10042524,"byte_end":10042554,"line_start":1334,"line_end":1334,"column_start":5,"column_end":35}},{"value":"/     let b = p.deref_mut();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10042559,"byte_end":10042589,"line_start":1335,"line_end":1335,"column_start":5,"column_end":35}},{"value":"/     assert_eq!(b, &vec![1, 2, 3, 4]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10042594,"byte_end":10042635,"line_start":1336,"line_end":1336,"column_start":5,"column_end":46}},{"value":"/     b.push(5);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10042640,"byte_end":10042658,"line_start":1337,"line_end":1337,"column_start":5,"column_end":23}},{"value":"/     assert_eq!(b, &vec![1, 2, 3, 4, 5]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10042663,"byte_end":10042707,"line_start":1338,"line_end":1338,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10042712,"byte_end":10042717,"line_start":1339,"line_end":1339,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10042722,"byte_end":10042725,"line_start":1340,"line_end":1340,"column_start":5,"column_end":8}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10042730,"byte_end":10042764,"line_start":1341,"line_end":1341,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10042769,"byte_end":10042781,"line_start":1342,"line_end":1342,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.deref(), &vec![1, 2, 3, 4, 5]);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10042786,"byte_end":10042838,"line_start":1343,"line_end":1343,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10042843,"byte_end":10042848,"line_start":1344,"line_end":1344,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10042853,"byte_end":10042860,"line_start":1345,"line_end":1345,"column_start":5,"column_end":12}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10042865,"byte_end":10042905,"line_start":1346,"line_end":1346,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10044315,"byte_end":10044321,"line_start":1384,"line_end":1384,"column_start":19,"column_end":25},"name":"as_ref","qualname":"<Shared>::as_ref","value":"pub unsafe fn as_ref(&Self) -> Option<&'g T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a reference.","sig":null,"attributes":[{"value":"/ Converts the pointer to a reference.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10043051,"byte_end":10043091,"line_start":1352,"line_end":1352,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10043096,"byte_end":10043099,"line_start":1353,"line_end":1353,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the pointer is null, or else a reference to the object wrapped in `Some`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10043104,"byte_end":10043199,"line_start":1354,"line_end":1354,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10043204,"byte_end":10043207,"line_start":1355,"line_end":1355,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10043212,"byte_end":10043224,"line_start":1356,"line_end":1356,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10043229,"byte_end":10043232,"line_start":1357,"line_end":1357,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10043237,"byte_end":10043322,"line_start":1358,"line_end":1358,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10043327,"byte_end":10043330,"line_start":1359,"line_end":1359,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possibility of data races due to lack of proper synchronization.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10043335,"byte_end":10043426,"line_start":1360,"line_end":1360,"column_start":5,"column_end":96}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10043431,"byte_end":10043480,"line_start":1361,"line_end":1361,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10043485,"byte_end":10043488,"line_start":1362,"line_end":1362,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10043493,"byte_end":10043565,"line_start":1363,"line_end":1363,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10043570,"byte_end":10043645,"line_start":1364,"line_end":1364,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10043650,"byte_end":10043653,"line_start":1365,"line_end":1365,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10043658,"byte_end":10043751,"line_start":1366,"line_end":1366,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10043756,"byte_end":10043849,"line_start":1367,"line_end":1367,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10043854,"byte_end":10043892,"line_start":1368,"line_end":1368,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10043897,"byte_end":10043900,"line_start":1369,"line_end":1369,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10043905,"byte_end":10043919,"line_start":1370,"line_end":1370,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10043924,"byte_end":10043927,"line_start":1371,"line_end":1371,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10043932,"byte_end":10043939,"line_start":1372,"line_end":1372,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10043944,"byte_end":10043993,"line_start":1373,"line_end":1373,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10043998,"byte_end":10044042,"line_start":1374,"line_end":1374,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10044047,"byte_end":10044050,"line_start":1375,"line_end":1375,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10044055,"byte_end":10044085,"line_start":1376,"line_end":1376,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10044090,"byte_end":10044120,"line_start":1377,"line_end":1377,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10044125,"byte_end":10044159,"line_start":1378,"line_end":1378,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10044164,"byte_end":10044176,"line_start":1379,"line_end":1379,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.as_ref(), Some(&1234));","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10044181,"byte_end":10044225,"line_start":1380,"line_end":1380,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10044230,"byte_end":10044235,"line_start":1381,"line_end":1381,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10044240,"byte_end":10044247,"line_start":1382,"line_end":1382,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10044252,"byte_end":10044296,"line_start":1383,"line_end":1383,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10045181,"byte_end":10045191,"line_start":1417,"line_end":1417,"column_start":19,"column_end":29},"name":"into_owned","qualname":"<Shared>::into_owned","value":"pub unsafe fn into_owned(Self) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10044511,"byte_end":10044546,"line_start":1393,"line_end":1393,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10044551,"byte_end":10044554,"line_start":1394,"line_end":1394,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10044559,"byte_end":10044571,"line_start":1395,"line_end":1395,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10044576,"byte_end":10044579,"line_start":1396,"line_end":1396,"column_start":5,"column_end":8}},{"value":"/ Panics if this pointer is null, but only in debug mode.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10044584,"byte_end":10044643,"line_start":1397,"line_end":1397,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10044648,"byte_end":10044651,"line_start":1398,"line_end":1398,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10044656,"byte_end":10044668,"line_start":1399,"line_end":1399,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10044673,"byte_end":10044676,"line_start":1400,"line_end":1400,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10044681,"byte_end":10044768,"line_start":1401,"line_end":1401,"column_start":5,"column_end":92}},{"value":"/ reference to the same object.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10044773,"byte_end":10044806,"line_start":1402,"line_end":1402,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10044811,"byte_end":10044814,"line_start":1403,"line_end":1403,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10044819,"byte_end":10044833,"line_start":1404,"line_end":1404,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10044838,"byte_end":10044841,"line_start":1405,"line_end":1405,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10044846,"byte_end":10044853,"line_start":1406,"line_end":1406,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10044858,"byte_end":10044907,"line_start":1407,"line_end":1407,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10044912,"byte_end":10044956,"line_start":1408,"line_end":1408,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10044961,"byte_end":10044964,"line_start":1409,"line_end":1409,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10044969,"byte_end":10044999,"line_start":1410,"line_end":1410,"column_start":5,"column_end":35}},{"value":"/ unsafe {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10045004,"byte_end":10045016,"line_start":1411,"line_end":1411,"column_start":5,"column_end":17}},{"value":"/     let guard = &epoch::unprotected();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10045021,"byte_end":10045063,"line_start":1412,"line_end":1412,"column_start":5,"column_end":47}},{"value":"/     let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10045068,"byte_end":10045106,"line_start":1413,"line_end":1413,"column_start":5,"column_end":43}},{"value":"/     drop(p.into_owned());","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10045111,"byte_end":10045140,"line_start":1414,"line_end":1414,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10045145,"byte_end":10045150,"line_start":1415,"line_end":1415,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10045155,"byte_end":10045162,"line_start":1416,"line_end":1416,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10045800,"byte_end":10045803,"line_start":1436,"line_end":1436,"column_start":12,"column_end":15},"name":"tag","qualname":"<Shared>::tag","value":"pub fn tag(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10045343,"byte_end":10045389,"line_start":1422,"line_end":1422,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10045394,"byte_end":10045397,"line_start":1423,"line_end":1423,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10045402,"byte_end":10045416,"line_start":1424,"line_end":1424,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10045421,"byte_end":10045424,"line_start":1425,"line_end":1425,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10045429,"byte_end":10045436,"line_start":1426,"line_end":1426,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10045441,"byte_end":10045497,"line_start":1427,"line_end":1427,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10045502,"byte_end":10045546,"line_start":1428,"line_end":1428,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10045551,"byte_end":10045554,"line_start":1429,"line_end":1429,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<u64>::from(Owned::new(0u64).with_tag(2));","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10045559,"byte_end":10045621,"line_start":1430,"line_end":1430,"column_start":5,"column_end":67}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10045626,"byte_end":10045656,"line_start":1431,"line_end":1431,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10045661,"byte_end":10045695,"line_start":1432,"line_end":1432,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.tag(), 2);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10045700,"byte_end":10045727,"line_start":1433,"line_end":1433,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10045732,"byte_end":10045739,"line_start":1434,"line_end":1434,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10045744,"byte_end":10045788,"line_start":1435,"line_end":1435,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10046526,"byte_end":10046534,"line_start":1460,"line_end":1460,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Shared>::with_tag","value":"pub fn with_tag(&Self, usize) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10045899,"byte_end":10045989,"line_start":1441,"line_end":1441,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10045994,"byte_end":10046032,"line_start":1442,"line_end":1442,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10046037,"byte_end":10046040,"line_start":1443,"line_end":1443,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10046045,"byte_end":10046059,"line_start":1444,"line_end":1444,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10046064,"byte_end":10046067,"line_start":1445,"line_end":1445,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10046072,"byte_end":10046079,"line_start":1446,"line_end":1446,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10046084,"byte_end":10046133,"line_start":1447,"line_end":1447,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10046138,"byte_end":10046182,"line_start":1448,"line_end":1448,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10046187,"byte_end":10046190,"line_start":1449,"line_end":1449,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(0u64);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10046195,"byte_end":10046225,"line_start":1450,"line_end":1450,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10046230,"byte_end":10046260,"line_start":1451,"line_end":1451,"column_start":5,"column_end":35}},{"value":"/ let p1 = a.load(SeqCst, guard);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10046265,"byte_end":10046300,"line_start":1452,"line_end":1452,"column_start":5,"column_end":40}},{"value":"/ let p2 = p1.with_tag(2);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10046305,"byte_end":10046333,"line_start":1453,"line_end":1453,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10046338,"byte_end":10046341,"line_start":1454,"line_end":1454,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(p1.tag(), 0);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10046346,"byte_end":10046374,"line_start":1455,"line_end":1455,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p2.tag(), 2);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10046379,"byte_end":10046407,"line_start":1456,"line_end":1456,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p1.as_raw(), p2.as_raw());","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10046412,"byte_end":10046453,"line_start":1457,"line_end":1457,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10046458,"byte_end":10046465,"line_start":1458,"line_end":1458,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10046470,"byte_end":10046514,"line_start":1459,"line_end":1459,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":371},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/collector.rs","byte_start":10049234,"byte_end":10049243,"line_start":22,"line_end":22,"column_start":12,"column_end":21},"name":"Collector","qualname":"::collector::Collector","value":"Collector {  }","parent":null,"children":[{"krate":0,"index":372}],"decl_id":null,"docs":" An epoch-based garbage collector.\n","sig":null,"attributes":[{"value":"/ An epoch-based garbage collector.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/collector.rs","byte_start":10049185,"byte_end":10049222,"line_start":21,"line_end":21,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/collector.rs","byte_start":10049550,"byte_end":10049553,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<Collector>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new collector.\n","sig":null,"attributes":[{"value":"/ Creates a new collector.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/collector.rs","byte_start":10049510,"byte_end":10049538,"line_start":38,"line_end":38,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/collector.rs","byte_start":10049658,"byte_end":10049666,"line_start":44,"line_end":44,"column_start":12,"column_end":20},"name":"register","qualname":"<Collector>::register","value":"pub fn register(&Self) -> LocalHandle","parent":null,"children":[],"decl_id":null,"docs":" Registers a new handle for the collector.\n","sig":null,"attributes":[{"value":"/ Registers a new handle for the collector.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/collector.rs","byte_start":10049601,"byte_end":10049646,"line_start":43,"line_end":43,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":387},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/collector.rs","byte_start":10050334,"byte_end":10050345,"line_start":73,"line_end":73,"column_start":12,"column_end":23},"name":"LocalHandle","qualname":"::collector::LocalHandle","value":"LocalHandle {  }","parent":null,"children":[{"krate":0,"index":388}],"decl_id":null,"docs":" A handle to a garbage collector.\n","sig":null,"attributes":[{"value":"/ A handle to a garbage collector.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/collector.rs","byte_start":10050286,"byte_end":10050322,"line_start":72,"line_end":72,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/collector.rs","byte_start":10050456,"byte_end":10050459,"line_start":80,"line_end":80,"column_start":12,"column_end":15},"name":"pin","qualname":"<LocalHandle>::pin","value":"pub fn pin(&Self) -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the handle.\n","sig":null,"attributes":[{"value":"/ Pins the handle.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/collector.rs","byte_start":10050410,"byte_end":10050430,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/collector.rs","byte_start":10050435,"byte_end":10050444,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/collector.rs","byte_start":10050597,"byte_end":10050606,"line_start":86,"line_end":86,"column_start":12,"column_end":21},"name":"is_pinned","qualname":"<LocalHandle>::is_pinned","value":"pub fn is_pinned(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the handle is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the handle is pinned.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/collector.rs","byte_start":10050528,"byte_end":10050571,"line_start":84,"line_end":84,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/collector.rs","byte_start":10050576,"byte_end":10050585,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/collector.rs","byte_start":10050762,"byte_end":10050771,"line_start":92,"line_end":92,"column_start":12,"column_end":21},"name":"collector","qualname":"<LocalHandle>::collector","value":"pub fn collector(&Self) -> &Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this handle.\n","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this handle.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/collector.rs","byte_start":10050680,"byte_end":10050736,"line_start":90,"line_end":90,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/collector.rs","byte_start":10050741,"byte_end":10050750,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":475},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10070864,"byte_end":10070869,"line_start":70,"line_end":70,"column_start":12,"column_end":17},"name":"Guard","qualname":"::guard::Guard","value":"Guard {  }","parent":null,"children":[{"krate":0,"index":476}],"decl_id":null,"docs":" A guard that keeps the current thread pinned.","sig":null,"attributes":[{"value":"/ A guard that keeps the current thread pinned.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10069148,"byte_end":10069197,"line_start":11,"line_end":11,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10069198,"byte_end":10069201,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Pinning","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10069202,"byte_end":10069215,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10069216,"byte_end":10069219,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The current thread is pinned by calling [`pin`], which returns a new guard:","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10069220,"byte_end":10069299,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10069300,"byte_end":10069303,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10069304,"byte_end":10069311,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10069312,"byte_end":10069345,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10069346,"byte_end":10069349,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ // It is often convenient to prefix a call to `pin` with a `&` in order to create a reference.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10069350,"byte_end":10069448,"line_start":20,"line_end":20,"column_start":1,"column_end":99}},{"value":"/ // This is not really necessary, but makes passing references to the guard a bit easier.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10069449,"byte_end":10069541,"line_start":21,"line_end":21,"column_start":1,"column_end":93}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10069542,"byte_end":10069572,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10069573,"byte_end":10069580,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10069581,"byte_end":10069584,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ When a guard gets dropped, the current thread is automatically unpinned.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10069585,"byte_end":10069661,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10069662,"byte_end":10069665,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Pointers on the stack","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10069666,"byte_end":10069693,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10069694,"byte_end":10069697,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Having a guard allows us to create pointers on the stack to heap-allocated objects.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10069698,"byte_end":10069785,"line_start":29,"line_end":29,"column_start":1,"column_end":88}},{"value":"/ For example:","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10069786,"byte_end":10069802,"line_start":30,"line_end":30,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10069803,"byte_end":10069806,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10069807,"byte_end":10069814,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10069815,"byte_end":10069864,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10069865,"byte_end":10069909,"line_start":34,"line_end":34,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10069910,"byte_end":10069913,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // Create a heap-allocated number.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10069914,"byte_end":10069952,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10069953,"byte_end":10069982,"line_start":37,"line_end":37,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10069983,"byte_end":10069986,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ // Pin the current thread.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10069987,"byte_end":10070017,"line_start":39,"line_end":39,"column_start":1,"column_end":31}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10070018,"byte_end":10070048,"line_start":40,"line_end":40,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10070049,"byte_end":10070052,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // Load the heap-allocated object and create pointer `p` on the stack.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10070053,"byte_end":10070127,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10070128,"byte_end":10070162,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10070163,"byte_end":10070166,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ // Dereference the pointer and print the value:","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10070167,"byte_end":10070218,"line_start":45,"line_end":45,"column_start":1,"column_end":52}},{"value":"/ if let Some(num) = unsafe { p.as_ref() } {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10070219,"byte_end":10070265,"line_start":46,"line_end":46,"column_start":1,"column_end":47}},{"value":"/     println!(\"The number is {}.\", num);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10070266,"byte_end":10070309,"line_start":47,"line_end":47,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10070310,"byte_end":10070315,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10070316,"byte_end":10070323,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10070324,"byte_end":10070327,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Multiple guards","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10070328,"byte_end":10070349,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10070350,"byte_end":10070353,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Pinning is reentrant and it is perfectly legal to create multiple guards. In that case, the","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10070354,"byte_end":10070449,"line_start":53,"line_end":53,"column_start":1,"column_end":96}},{"value":"/ thread will actually be pinned only when the first guard is created and unpinned when the last","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10070450,"byte_end":10070548,"line_start":54,"line_end":54,"column_start":1,"column_end":99}},{"value":"/ one is dropped:","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10070549,"byte_end":10070568,"line_start":55,"line_end":55,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10070569,"byte_end":10070572,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10070573,"byte_end":10070580,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10070581,"byte_end":10070614,"line_start":58,"line_end":58,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10070615,"byte_end":10070618,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ let guard1 = epoch::pin();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10070619,"byte_end":10070649,"line_start":60,"line_end":60,"column_start":1,"column_end":31}},{"value":"/ let guard2 = epoch::pin();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10070650,"byte_end":10070680,"line_start":61,"line_end":61,"column_start":1,"column_end":31}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10070681,"byte_end":10070713,"line_start":62,"line_end":62,"column_start":1,"column_end":33}},{"value":"/ drop(guard1);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10070714,"byte_end":10070731,"line_start":63,"line_end":63,"column_start":1,"column_end":18}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10070732,"byte_end":10070764,"line_start":64,"line_end":64,"column_start":1,"column_end":33}},{"value":"/ drop(guard2);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10070765,"byte_end":10070782,"line_start":65,"line_end":65,"column_start":1,"column_end":18}},{"value":"/ assert!(!epoch::is_pinned());","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10070783,"byte_end":10070816,"line_start":66,"line_end":66,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10070817,"byte_end":10070824,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10070825,"byte_end":10070828,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ [`pin`]: super::pin","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10070829,"byte_end":10070852,"line_start":69,"line_end":69,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10071844,"byte_end":10071849,"line_start":90,"line_end":90,"column_start":12,"column_end":17},"name":"defer","qualname":"<Guard>::defer","value":"pub fn defer<F, R>(&Self, F) where F: FnOnce() -> R, F: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10070928,"byte_end":10071017,"line_start":75,"line_end":75,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10071022,"byte_end":10071047,"line_start":76,"line_end":76,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10071052,"byte_end":10071055,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10071060,"byte_end":10071153,"line_start":78,"line_end":78,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10071158,"byte_end":10071246,"line_start":79,"line_end":79,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10071251,"byte_end":10071341,"line_start":80,"line_end":80,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10071346,"byte_end":10071386,"line_start":81,"line_end":81,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10071391,"byte_end":10071394,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10071399,"byte_end":10071489,"line_start":83,"line_end":83,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10071494,"byte_end":10071585,"line_start":84,"line_end":84,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10071590,"byte_end":10071677,"line_start":85,"line_end":85,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10071682,"byte_end":10071702,"line_start":86,"line_end":86,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10071707,"byte_end":10071710,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10071715,"byte_end":10071802,"line_start":88,"line_end":88,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10071807,"byte_end":10071832,"line_start":89,"line_end":89,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10076149,"byte_end":10076164,"line_start":188,"line_end":188,"column_start":19,"column_end":34},"name":"defer_unchecked","qualname":"<Guard>::defer_unchecked","value":"pub unsafe fn defer_unchecked<F, R>(&Self, F) where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10072013,"byte_end":10072102,"line_start":100,"line_end":100,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10072107,"byte_end":10072132,"line_start":101,"line_end":101,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10072137,"byte_end":10072140,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10072145,"byte_end":10072238,"line_start":103,"line_end":103,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10072243,"byte_end":10072331,"line_start":104,"line_end":104,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10072336,"byte_end":10072426,"line_start":105,"line_end":105,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10072431,"byte_end":10072471,"line_start":106,"line_end":106,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10072476,"byte_end":10072479,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10072484,"byte_end":10072574,"line_start":108,"line_end":108,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10072579,"byte_end":10072670,"line_start":109,"line_end":109,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10072675,"byte_end":10072762,"line_start":110,"line_end":110,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10072767,"byte_end":10072787,"line_start":111,"line_end":111,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10072792,"byte_end":10072795,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10072800,"byte_end":10072887,"line_start":113,"line_end":113,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10072892,"byte_end":10072917,"line_start":114,"line_end":114,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10072922,"byte_end":10072925,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10072930,"byte_end":10072942,"line_start":116,"line_end":116,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10072947,"byte_end":10072950,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ The given function must not hold reference onto the stack. It is highly recommended that","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10072955,"byte_end":10073047,"line_start":118,"line_end":118,"column_start":5,"column_end":97}},{"value":"/ the passed function is **always** marked with `move` in order to prevent accidental","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10073052,"byte_end":10073139,"line_start":119,"line_end":119,"column_start":5,"column_end":92}},{"value":"/ borrows.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10073144,"byte_end":10073156,"line_start":120,"line_end":120,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10073161,"byte_end":10073164,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10073169,"byte_end":10073176,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10073181,"byte_end":10073214,"line_start":123,"line_end":123,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10073219,"byte_end":10073222,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10073227,"byte_end":10073257,"line_start":125,"line_end":125,"column_start":5,"column_end":35}},{"value":"/ let message = \"Hello!\";","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10073262,"byte_end":10073289,"line_start":126,"line_end":126,"column_start":5,"column_end":32}},{"value":"/ unsafe {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10073294,"byte_end":10073306,"line_start":127,"line_end":127,"column_start":5,"column_end":17}},{"value":"/     // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10073311,"byte_end":10073386,"line_start":128,"line_end":128,"column_start":5,"column_end":80}},{"value":"/     guard.defer_unchecked(move || {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10073391,"byte_end":10073430,"line_start":129,"line_end":129,"column_start":5,"column_end":44}},{"value":"/         println!(\"{}\", message);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10073435,"byte_end":10073471,"line_start":130,"line_end":130,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10073476,"byte_end":10073487,"line_start":131,"line_end":131,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10073492,"byte_end":10073497,"line_start":132,"line_end":132,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10073502,"byte_end":10073509,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10073514,"byte_end":10073517,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute `f`, so anything accessed by","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10073522,"byte_end":10073616,"line_start":135,"line_end":135,"column_start":5,"column_end":99}},{"value":"/ the closure must be `Send`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10073621,"byte_end":10073652,"line_start":136,"line_end":136,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10073657,"byte_end":10073660,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `F: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10073665,"byte_end":10073760,"line_start":138,"line_end":138,"column_start":5,"column_end":100}},{"value":"/ `F: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10073765,"byte_end":10073857,"line_start":139,"line_end":139,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10073862,"byte_end":10073951,"line_start":140,"line_end":140,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10073956,"byte_end":10073959,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10073964,"byte_end":10073977,"line_start":142,"line_end":142,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10073982,"byte_end":10074035,"line_start":143,"line_end":143,"column_start":5,"column_end":58}},{"value":"/ guard.defer_unchecked(move || shared.into_owned()); // `Shared` is not `Send`!","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10074040,"byte_end":10074122,"line_start":144,"line_end":144,"column_start":5,"column_end":87}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10074127,"byte_end":10074134,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10074139,"byte_end":10074142,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the deferred function,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10074147,"byte_end":10074240,"line_start":147,"line_end":147,"column_start":5,"column_end":98}},{"value":"/ because it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10074245,"byte_end":10074340,"line_start":148,"line_end":148,"column_start":5,"column_end":100}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10074345,"byte_end":10074405,"line_start":149,"line_end":149,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10074410,"byte_end":10074413,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10074418,"byte_end":10074432,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10074437,"byte_end":10074440,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10074445,"byte_end":10074531,"line_start":153,"line_end":153,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10074536,"byte_end":10074630,"line_start":154,"line_end":154,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10074635,"byte_end":10074731,"line_start":155,"line_end":155,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10074736,"byte_end":10074828,"line_start":156,"line_end":156,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10074833,"byte_end":10074889,"line_start":157,"line_end":157,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10074894,"byte_end":10074897,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10074902,"byte_end":10074909,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10074914,"byte_end":10074970,"line_start":160,"line_end":160,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10074975,"byte_end":10075019,"line_start":161,"line_end":161,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10075024,"byte_end":10075027,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10075032,"byte_end":10075063,"line_start":163,"line_end":163,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10075068,"byte_end":10075071,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10075076,"byte_end":10075153,"line_start":165,"line_end":165,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10075158,"byte_end":10075189,"line_start":166,"line_end":166,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10075194,"byte_end":10075197,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10075202,"byte_end":10075232,"line_start":168,"line_end":168,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10075237,"byte_end":10075267,"line_start":169,"line_end":169,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10075272,"byte_end":10075275,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10075280,"byte_end":10075357,"line_start":171,"line_end":171,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10075362,"byte_end":10075434,"line_start":172,"line_end":172,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10075439,"byte_end":10075442,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10075447,"byte_end":10075468,"line_start":174,"line_end":174,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10075473,"byte_end":10075533,"line_start":175,"line_end":175,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10075538,"byte_end":10075620,"line_start":176,"line_end":176,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10075625,"byte_end":10075641,"line_start":177,"line_end":177,"column_start":5,"column_end":21}},{"value":"/         // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10075646,"byte_end":10075725,"line_start":178,"line_end":178,"column_start":5,"column_end":84}},{"value":"/         guard.defer_unchecked(move || {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10075730,"byte_end":10075773,"line_start":179,"line_end":179,"column_start":5,"column_end":48}},{"value":"/             println!(\"{} is now being deallocated.\", p.deref());","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10075778,"byte_end":10075846,"line_start":180,"line_end":180,"column_start":5,"column_end":73}},{"value":"/             // Now we have unique access to the object pointed to by `p` and can turn it","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10075851,"byte_end":10075943,"line_start":181,"line_end":181,"column_start":5,"column_end":97}},{"value":"/             // into an `Owned`. Dropping the `Owned` will deallocate the object.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10075948,"byte_end":10076032,"line_start":182,"line_end":182,"column_start":5,"column_end":89}},{"value":"/             drop(p.into_owned());","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10076037,"byte_end":10076074,"line_start":183,"line_end":183,"column_start":5,"column_end":42}},{"value":"/         });","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10076079,"byte_end":10076094,"line_start":184,"line_end":184,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10076099,"byte_end":10076108,"line_start":185,"line_end":185,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10076113,"byte_end":10076118,"line_start":186,"line_end":186,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10076123,"byte_end":10076130,"line_start":187,"line_end":187,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10079751,"byte_end":10079764,"line_start":267,"line_end":267,"column_start":19,"column_end":32},"name":"defer_destroy","qualname":"<Guard>::defer_destroy","value":"pub unsafe fn defer_destroy<T>(&Self, Shared<, T>)","parent":null,"children":[],"decl_id":null,"docs":" Stores a destructor for an object so that it can be deallocated and dropped at some point\n after all currently pinned threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a destructor for an object so that it can be deallocated and dropped at some point","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10076403,"byte_end":10076496,"line_start":199,"line_end":199,"column_start":5,"column_end":98}},{"value":"/ after all currently pinned threads get unpinned.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10076501,"byte_end":10076553,"line_start":200,"line_end":200,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10076558,"byte_end":10076561,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ This method first stores the destructor into the thread-local (or handle-local) cache. If","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10076566,"byte_end":10076659,"line_start":202,"line_end":202,"column_start":5,"column_end":98}},{"value":"/ this cache becomes full, some destructors are moved into the global cache. At the same","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10076664,"byte_end":10076754,"line_start":203,"line_end":203,"column_start":5,"column_end":95}},{"value":"/ time, some destructors from both local and global caches may get executed in order to","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10076759,"byte_end":10076848,"line_start":204,"line_end":204,"column_start":5,"column_end":94}},{"value":"/ incrementally clean up the caches as they fill up.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10076853,"byte_end":10076907,"line_start":205,"line_end":205,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10076912,"byte_end":10076915,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly the destructor will be executed. The only guarantee is","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10076920,"byte_end":10077013,"line_start":207,"line_end":207,"column_start":5,"column_end":98}},{"value":"/ that it won't be executed until all currently pinned threads get unpinned. In theory, the","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10077018,"byte_end":10077111,"line_start":208,"line_end":208,"column_start":5,"column_end":98}},{"value":"/ destructor might never run, but the epoch-based garbage collection will make an effort to","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10077116,"byte_end":10077209,"line_start":209,"line_end":209,"column_start":5,"column_end":98}},{"value":"/ execute it reasonably soon.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10077214,"byte_end":10077245,"line_start":210,"line_end":210,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10077250,"byte_end":10077253,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the destructor will simply be","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10077258,"byte_end":10077347,"line_start":212,"line_end":212,"column_start":5,"column_end":94}},{"value":"/ executed immediately.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10077352,"byte_end":10077377,"line_start":213,"line_end":213,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10077382,"byte_end":10077385,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10077390,"byte_end":10077402,"line_start":215,"line_end":215,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10077407,"byte_end":10077410,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ The object must not be reachable by other threads anymore, otherwise it might be still in","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10077415,"byte_end":10077508,"line_start":217,"line_end":217,"column_start":5,"column_end":98}},{"value":"/ use when the destructor runs.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10077513,"byte_end":10077546,"line_start":218,"line_end":218,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10077551,"byte_end":10077554,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute the destructor, so the object","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10077559,"byte_end":10077654,"line_start":220,"line_end":220,"column_start":5,"column_end":100}},{"value":"/ must be sendable to other threads.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10077659,"byte_end":10077697,"line_start":221,"line_end":221,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10077702,"byte_end":10077705,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `T: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10077710,"byte_end":10077805,"line_start":223,"line_end":223,"column_start":5,"column_end":100}},{"value":"/ `T: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10077810,"byte_end":10077902,"line_start":224,"line_end":224,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10077907,"byte_end":10077996,"line_start":225,"line_end":225,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10078001,"byte_end":10078004,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10078009,"byte_end":10078022,"line_start":227,"line_end":227,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10078027,"byte_end":10078080,"line_start":228,"line_end":228,"column_start":5,"column_end":58}},{"value":"/ guard.defer_destroy(shared); // `Shared` is not `Send`!","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10078085,"byte_end":10078144,"line_start":229,"line_end":229,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10078149,"byte_end":10078156,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10078161,"byte_end":10078164,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the destructor, because","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10078169,"byte_end":10078263,"line_start":232,"line_end":232,"column_start":5,"column_end":99}},{"value":"/ it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10078268,"byte_end":10078355,"line_start":233,"line_end":233,"column_start":5,"column_end":92}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10078360,"byte_end":10078420,"line_start":234,"line_end":234,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10078425,"byte_end":10078428,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10078433,"byte_end":10078447,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10078452,"byte_end":10078455,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10078460,"byte_end":10078546,"line_start":238,"line_end":238,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10078551,"byte_end":10078645,"line_start":239,"line_end":239,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10078650,"byte_end":10078746,"line_start":240,"line_end":240,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10078751,"byte_end":10078843,"line_start":241,"line_end":241,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10078848,"byte_end":10078904,"line_start":242,"line_end":242,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10078909,"byte_end":10078912,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10078917,"byte_end":10078924,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10078929,"byte_end":10078985,"line_start":245,"line_end":245,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10078990,"byte_end":10079034,"line_start":246,"line_end":246,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10079039,"byte_end":10079042,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10079047,"byte_end":10079078,"line_start":248,"line_end":248,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10079083,"byte_end":10079086,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10079091,"byte_end":10079168,"line_start":250,"line_end":250,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10079173,"byte_end":10079204,"line_start":251,"line_end":251,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10079209,"byte_end":10079212,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10079217,"byte_end":10079247,"line_start":253,"line_end":253,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10079252,"byte_end":10079282,"line_start":254,"line_end":254,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10079287,"byte_end":10079290,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10079295,"byte_end":10079372,"line_start":256,"line_end":256,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10079377,"byte_end":10079449,"line_start":257,"line_end":257,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10079454,"byte_end":10079457,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10079462,"byte_end":10079483,"line_start":259,"line_end":259,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10079488,"byte_end":10079548,"line_start":260,"line_end":260,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10079553,"byte_end":10079635,"line_start":261,"line_end":261,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10079640,"byte_end":10079656,"line_start":262,"line_end":262,"column_start":5,"column_end":21}},{"value":"/         guard.defer_destroy(p);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10079661,"byte_end":10079696,"line_start":263,"line_end":263,"column_start":5,"column_end":40}},{"value":"/     }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10079701,"byte_end":10079710,"line_start":264,"line_end":264,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10079715,"byte_end":10079720,"line_start":265,"line_end":265,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10079725,"byte_end":10079732,"line_start":266,"line_end":266,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10080649,"byte_end":10080654,"line_start":291,"line_end":291,"column_start":12,"column_end":17},"name":"flush","qualname":"<Guard>::flush","value":"pub fn flush(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears up the thread-local cache of deferred functions by executing them or moving into the\n global cache.","sig":null,"attributes":[{"value":"/ Clears up the thread-local cache of deferred functions by executing them or moving into the","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10079864,"byte_end":10079959,"line_start":271,"line_end":271,"column_start":5,"column_end":100}},{"value":"/ global cache.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10079964,"byte_end":10079981,"line_start":272,"line_end":272,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10079986,"byte_end":10079989,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ Call this method after deferring execution of a function if you want to get it executed as","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10079994,"byte_end":10080088,"line_start":274,"line_end":274,"column_start":5,"column_end":99}},{"value":"/ soon as possible. Flushing will make sure it is residing in in the global cache, so that","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10080093,"byte_end":10080185,"line_start":275,"line_end":275,"column_start":5,"column_end":97}},{"value":"/ any thread has a chance of taking the function and executing it.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10080190,"byte_end":10080258,"line_start":276,"line_end":276,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10080263,"byte_end":10080266,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, it is a no-op (nothing happens).","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10080271,"byte_end":10080363,"line_start":278,"line_end":278,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10080368,"byte_end":10080371,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10080376,"byte_end":10080390,"line_start":280,"line_end":280,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10080395,"byte_end":10080398,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10080403,"byte_end":10080410,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10080415,"byte_end":10080448,"line_start":283,"line_end":283,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10080453,"byte_end":10080456,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10080461,"byte_end":10080491,"line_start":285,"line_end":285,"column_start":5,"column_end":35}},{"value":"/ guard.defer(move || {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10080496,"byte_end":10080521,"line_start":286,"line_end":286,"column_start":5,"column_end":30}},{"value":"/     println!(\"This better be printed as soon as possible!\");","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10080526,"byte_end":10080590,"line_start":287,"line_end":287,"column_start":5,"column_end":69}},{"value":"/ });","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10080595,"byte_end":10080602,"line_start":288,"line_end":288,"column_start":5,"column_end":12}},{"value":"/ guard.flush();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10080607,"byte_end":10080625,"line_start":289,"line_end":289,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10080630,"byte_end":10080637,"line_start":290,"line_end":290,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10081816,"byte_end":10081821,"line_start":324,"line_end":324,"column_start":12,"column_end":17},"name":"repin","qualname":"<Guard>::repin","value":"pub fn repin(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Unpins and then immediately re-pins the thread.","sig":null,"attributes":[{"value":"/ Unpins and then immediately re-pins the thread.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10080778,"byte_end":10080829,"line_start":297,"line_end":297,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10080834,"byte_end":10080837,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you don't want delay the advancement of the global epoch by","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10080842,"byte_end":10080932,"line_start":299,"line_end":299,"column_start":5,"column_end":95}},{"value":"/ holding an old epoch. For safety, you should not maintain any guard-based reference across","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10080937,"byte_end":10081031,"line_start":300,"line_end":300,"column_start":5,"column_end":99}},{"value":"/ the call (the latter is enforced by `&mut self`). The thread will only be repinned if this","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10081036,"byte_end":10081130,"line_start":301,"line_end":301,"column_start":5,"column_end":99}},{"value":"/ is the only active guard for the current thread.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10081135,"byte_end":10081187,"line_start":302,"line_end":302,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10081192,"byte_end":10081195,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the call will be just no-op.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10081200,"byte_end":10081293,"line_start":304,"line_end":304,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10081298,"byte_end":10081301,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10081306,"byte_end":10081320,"line_start":306,"line_end":306,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10081325,"byte_end":10081328,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10081333,"byte_end":10081340,"line_start":308,"line_end":308,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10081345,"byte_end":10081394,"line_start":309,"line_end":309,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10081399,"byte_end":10081443,"line_start":310,"line_end":310,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10081448,"byte_end":10081451,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10081456,"byte_end":10081485,"line_start":312,"line_end":312,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10081490,"byte_end":10081523,"line_start":313,"line_end":313,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10081528,"byte_end":10081533,"line_start":314,"line_end":314,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10081538,"byte_end":10081577,"line_start":315,"line_end":315,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10081582,"byte_end":10081636,"line_start":316,"line_end":316,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10081641,"byte_end":10081646,"line_start":317,"line_end":317,"column_start":5,"column_end":10}},{"value":"/ guard.repin();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10081651,"byte_end":10081669,"line_start":318,"line_end":318,"column_start":5,"column_end":23}},{"value":"/ {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10081674,"byte_end":10081679,"line_start":319,"line_end":319,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10081684,"byte_end":10081723,"line_start":320,"line_end":320,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10081728,"byte_end":10081782,"line_start":321,"line_end":321,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10081787,"byte_end":10081792,"line_start":322,"line_end":322,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10081797,"byte_end":10081804,"line_start":323,"line_end":323,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10083148,"byte_end":10083159,"line_start":360,"line_end":360,"column_start":12,"column_end":23},"name":"repin_after","qualname":"<Guard>::repin_after","value":"pub fn repin_after<F, R>(&mut Self, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Temporarily unpins the thread, executes the given function and then re-pins the thread.","sig":null,"attributes":[{"value":"/ Temporarily unpins the thread, executes the given function and then re-pins the thread.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10081945,"byte_end":10082036,"line_start":330,"line_end":330,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10082041,"byte_end":10082044,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to perform a long-running operation (e.g. sleeping)","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10082049,"byte_end":10082140,"line_start":332,"line_end":332,"column_start":5,"column_end":96}},{"value":"/ and don't need to maintain any guard-based reference across the call (the latter is enforced","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10082145,"byte_end":10082241,"line_start":333,"line_end":333,"column_start":5,"column_end":101}},{"value":"/ by `&mut self`). The thread will only be unpinned if this is the only active guard for the","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10082246,"byte_end":10082340,"line_start":334,"line_end":334,"column_start":5,"column_end":99}},{"value":"/ current thread.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10082345,"byte_end":10082364,"line_start":335,"line_end":335,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10082369,"byte_end":10082372,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the passed function is called","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10082377,"byte_end":10082471,"line_start":337,"line_end":337,"column_start":5,"column_end":99}},{"value":"/ directly without unpinning the thread.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10082476,"byte_end":10082518,"line_start":338,"line_end":338,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10082523,"byte_end":10082526,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10082531,"byte_end":10082545,"line_start":340,"line_end":340,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10082550,"byte_end":10082553,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10082558,"byte_end":10082565,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10082570,"byte_end":10082619,"line_start":343,"line_end":343,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10082624,"byte_end":10082668,"line_start":344,"line_end":344,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10082673,"byte_end":10082693,"line_start":345,"line_end":345,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10082698,"byte_end":10082726,"line_start":346,"line_end":346,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10082731,"byte_end":10082734,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10082739,"byte_end":10082768,"line_start":348,"line_end":348,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10082773,"byte_end":10082806,"line_start":349,"line_end":349,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10082811,"byte_end":10082816,"line_start":350,"line_end":350,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10082821,"byte_end":10082860,"line_start":351,"line_end":351,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10082865,"byte_end":10082919,"line_start":352,"line_end":352,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10082924,"byte_end":10082929,"line_start":353,"line_end":353,"column_start":5,"column_end":10}},{"value":"/ guard.repin_after(|| thread::sleep(Duration::from_millis(50)));","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10082934,"byte_end":10083001,"line_start":354,"line_end":354,"column_start":5,"column_end":72}},{"value":"/ {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10083006,"byte_end":10083011,"line_start":355,"line_end":355,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10083016,"byte_end":10083055,"line_start":356,"line_end":356,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10083060,"byte_end":10083114,"line_start":357,"line_end":357,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10083119,"byte_end":10083124,"line_start":358,"line_end":358,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10083129,"byte_end":10083136,"line_start":359,"line_end":359,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10084305,"byte_end":10084314,"line_start":398,"line_end":398,"column_start":12,"column_end":21},"name":"collector","qualname":"<Guard>::collector","value":"pub fn collector(&Self) -> Option<&Collector>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this guard.","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this guard.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10083764,"byte_end":10083819,"line_start":382,"line_end":382,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10083824,"byte_end":10083827,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to ensure that all guards used with","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10083832,"byte_end":10083907,"line_start":384,"line_end":384,"column_start":5,"column_end":80}},{"value":"/ a data structure come from the same collector.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10083912,"byte_end":10083962,"line_start":385,"line_end":385,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10083967,"byte_end":10083970,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then `None` is returned.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10083975,"byte_end":10084059,"line_start":387,"line_end":387,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10084064,"byte_end":10084067,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10084072,"byte_end":10084086,"line_start":389,"line_end":389,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10084091,"byte_end":10084094,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10084099,"byte_end":10084106,"line_start":391,"line_end":391,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10084111,"byte_end":10084144,"line_start":392,"line_end":392,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10084149,"byte_end":10084152,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ let guard1 = epoch::pin();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10084157,"byte_end":10084187,"line_start":394,"line_end":394,"column_start":5,"column_end":35}},{"value":"/ let guard2 = epoch::pin();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10084192,"byte_end":10084222,"line_start":395,"line_end":395,"column_start":5,"column_end":35}},{"value":"/ assert!(guard1.collector() == guard2.collector());","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10084227,"byte_end":10084281,"line_start":396,"line_end":396,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10084286,"byte_end":10084293,"line_start":397,"line_end":397,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":499},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10087613,"byte_end":10087624,"line_start":504,"line_end":504,"column_start":15,"column_end":26},"name":"unprotected","qualname":"::guard::unprotected","value":"pub unsafe fn unprotected() -> &'static Guard","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","sig":null,"attributes":[{"value":"/ Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10084724,"byte_end":10084811,"line_start":418,"line_end":418,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10084812,"byte_end":10084815,"line_start":419,"line_end":419,"column_start":1,"column_end":4}},{"value":"/ This guard should be used in special occasions only. Note that it doesn't actually keep any","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10084816,"byte_end":10084911,"line_start":420,"line_end":420,"column_start":1,"column_end":96}},{"value":"/ thread pinned - it's just a fake guard that allows loading from [`Atomic`]s unsafely.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10084912,"byte_end":10085001,"line_start":421,"line_end":421,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10085002,"byte_end":10085005,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ Note that calling [`defer`] with a dummy guard will not defer the function - it will just","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10085006,"byte_end":10085099,"line_start":423,"line_end":423,"column_start":1,"column_end":94}},{"value":"/ execute the function immediately.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10085100,"byte_end":10085137,"line_start":424,"line_end":424,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10085138,"byte_end":10085141,"line_start":425,"line_end":425,"column_start":1,"column_end":4}},{"value":"/ If necessary, it's possible to create more dummy guards by cloning: `unprotected().clone()`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10085142,"byte_end":10085238,"line_start":426,"line_end":426,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10085239,"byte_end":10085242,"line_start":427,"line_end":427,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10085243,"byte_end":10085255,"line_start":428,"line_end":428,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10085256,"byte_end":10085259,"line_start":429,"line_end":429,"column_start":1,"column_end":4}},{"value":"/ Loading and dereferencing data from an [`Atomic`] using this guard is safe only if the","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10085260,"byte_end":10085350,"line_start":430,"line_end":430,"column_start":1,"column_end":91}},{"value":"/ [`Atomic`] is not being concurrently modified by other threads.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10085351,"byte_end":10085418,"line_start":431,"line_end":431,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10085419,"byte_end":10085422,"line_start":432,"line_end":432,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10085423,"byte_end":10085437,"line_start":433,"line_end":433,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10085438,"byte_end":10085441,"line_start":434,"line_end":434,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10085442,"byte_end":10085449,"line_start":435,"line_end":435,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10085450,"byte_end":10085499,"line_start":436,"line_end":436,"column_start":1,"column_end":50}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10085500,"byte_end":10085545,"line_start":437,"line_end":437,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10085546,"byte_end":10085549,"line_start":438,"line_end":438,"column_start":1,"column_end":4}},{"value":"/ let a = Atomic::new(7);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10085550,"byte_end":10085577,"line_start":439,"line_end":439,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10085578,"byte_end":10085581,"line_start":440,"line_end":440,"column_start":1,"column_end":4}},{"value":"/ unsafe {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10085582,"byte_end":10085594,"line_start":441,"line_end":441,"column_start":1,"column_end":13}},{"value":"/     // Load `a` without pinning the current thread.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10085595,"byte_end":10085650,"line_start":442,"line_end":442,"column_start":1,"column_end":56}},{"value":"/     a.load(Relaxed, epoch::unprotected());","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10085651,"byte_end":10085697,"line_start":443,"line_end":443,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10085698,"byte_end":10085701,"line_start":444,"line_end":444,"column_start":1,"column_end":4}},{"value":"/     // It's possible to create more dummy guards by calling `clone()`.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10085702,"byte_end":10085776,"line_start":445,"line_end":445,"column_start":1,"column_end":75}},{"value":"/     let dummy = &epoch::unprotected().clone();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10085777,"byte_end":10085827,"line_start":446,"line_end":446,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10085828,"byte_end":10085831,"line_start":447,"line_end":447,"column_start":1,"column_end":4}},{"value":"/     dummy.defer(move || {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10085832,"byte_end":10085861,"line_start":448,"line_end":448,"column_start":1,"column_end":30}},{"value":"/         println!(\"This gets executed immediately.\");","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10085862,"byte_end":10085918,"line_start":449,"line_end":449,"column_start":1,"column_end":57}},{"value":"/     });","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10085919,"byte_end":10085930,"line_start":450,"line_end":450,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10085931,"byte_end":10085934,"line_start":451,"line_end":451,"column_start":1,"column_end":4}},{"value":"/     // Dropping `dummy` doesn't affect the current thread - it's just a noop.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10085935,"byte_end":10086016,"line_start":452,"line_end":452,"column_start":1,"column_end":82}},{"value":"/ }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10086017,"byte_end":10086022,"line_start":453,"line_end":453,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10086023,"byte_end":10086030,"line_start":454,"line_end":454,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10086031,"byte_end":10086034,"line_start":455,"line_end":455,"column_start":1,"column_end":4}},{"value":"/ The most common use of this function is when constructing or destructing a data structure.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10086035,"byte_end":10086129,"line_start":456,"line_end":456,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10086130,"byte_end":10086133,"line_start":457,"line_end":457,"column_start":1,"column_end":4}},{"value":"/ For example, we can use a dummy guard in the destructor of a Treiber stack because at that","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10086134,"byte_end":10086228,"line_start":458,"line_end":458,"column_start":1,"column_end":95}},{"value":"/ point no other thread could concurrently modify the [`Atomic`]s we are accessing.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10086229,"byte_end":10086314,"line_start":459,"line_end":459,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10086315,"byte_end":10086318,"line_start":460,"line_end":460,"column_start":1,"column_end":4}},{"value":"/ If we were to actually pin the current thread during destruction, that would just unnecessarily","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10086319,"byte_end":10086418,"line_start":461,"line_end":461,"column_start":1,"column_end":100}},{"value":"/ delay garbage collection and incur some performance cost, so in cases like these `unprotected`","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10086419,"byte_end":10086517,"line_start":462,"line_end":462,"column_start":1,"column_end":99}},{"value":"/ is very helpful.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10086518,"byte_end":10086538,"line_start":463,"line_end":463,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10086539,"byte_end":10086542,"line_start":464,"line_end":464,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10086543,"byte_end":10086550,"line_start":465,"line_end":465,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10086551,"byte_end":10086600,"line_start":466,"line_end":466,"column_start":1,"column_end":50}},{"value":"/ use std::mem::ManuallyDrop;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10086601,"byte_end":10086632,"line_start":467,"line_end":467,"column_start":1,"column_end":32}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10086633,"byte_end":10086678,"line_start":468,"line_end":468,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10086679,"byte_end":10086682,"line_start":469,"line_end":469,"column_start":1,"column_end":4}},{"value":"/ struct Stack<T> {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10086683,"byte_end":10086704,"line_start":470,"line_end":470,"column_start":1,"column_end":22}},{"value":"/     head: Atomic<Node<T>>,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10086705,"byte_end":10086735,"line_start":471,"line_end":471,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10086736,"byte_end":10086741,"line_start":472,"line_end":472,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10086742,"byte_end":10086745,"line_start":473,"line_end":473,"column_start":1,"column_end":4}},{"value":"/ struct Node<T> {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10086746,"byte_end":10086766,"line_start":474,"line_end":474,"column_start":1,"column_end":21}},{"value":"/     data: ManuallyDrop<T>,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10086767,"byte_end":10086797,"line_start":475,"line_end":475,"column_start":1,"column_end":31}},{"value":"/     next: Atomic<Node<T>>,","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10086798,"byte_end":10086828,"line_start":476,"line_end":476,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10086829,"byte_end":10086834,"line_start":477,"line_end":477,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10086835,"byte_end":10086838,"line_start":478,"line_end":478,"column_start":1,"column_end":4}},{"value":"/ impl<T> Drop for Stack<T> {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10086839,"byte_end":10086870,"line_start":479,"line_end":479,"column_start":1,"column_end":32}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10086871,"byte_end":10086899,"line_start":480,"line_end":480,"column_start":1,"column_end":29}},{"value":"/         unsafe {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10086900,"byte_end":10086920,"line_start":481,"line_end":481,"column_start":1,"column_end":21}},{"value":"/             // Unprotected load.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10086921,"byte_end":10086957,"line_start":482,"line_end":482,"column_start":1,"column_end":37}},{"value":"/             let mut node = self.head.load(Relaxed, epoch::unprotected());","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10086958,"byte_end":10087035,"line_start":483,"line_end":483,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10087036,"byte_end":10087039,"line_start":484,"line_end":484,"column_start":1,"column_end":4}},{"value":"/             while let Some(n) = node.as_ref() {","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10087040,"byte_end":10087091,"line_start":485,"line_end":485,"column_start":1,"column_end":52}},{"value":"/                 // Unprotected load.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10087092,"byte_end":10087132,"line_start":486,"line_end":486,"column_start":1,"column_end":41}},{"value":"/                 let next = n.next.load(Relaxed, epoch::unprotected());","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10087133,"byte_end":10087207,"line_start":487,"line_end":487,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10087208,"byte_end":10087211,"line_start":488,"line_end":488,"column_start":1,"column_end":4}},{"value":"/                 // Take ownership of the node, then drop its data and deallocate it.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10087212,"byte_end":10087300,"line_start":489,"line_end":489,"column_start":1,"column_end":89}},{"value":"/                 let mut o = node.into_owned();","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10087301,"byte_end":10087351,"line_start":490,"line_end":490,"column_start":1,"column_end":51}},{"value":"/                 ManuallyDrop::drop(&mut o.data);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10087352,"byte_end":10087404,"line_start":491,"line_end":491,"column_start":1,"column_end":53}},{"value":"/                 drop(o);","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10087405,"byte_end":10087433,"line_start":492,"line_end":492,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10087434,"byte_end":10087437,"line_start":493,"line_end":493,"column_start":1,"column_end":4}},{"value":"/                 node = next;","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10087438,"byte_end":10087470,"line_start":494,"line_end":494,"column_start":1,"column_end":33}},{"value":"/             }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10087471,"byte_end":10087488,"line_start":495,"line_end":495,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10087489,"byte_end":10087502,"line_start":496,"line_end":496,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10087503,"byte_end":10087512,"line_start":497,"line_end":497,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10087513,"byte_end":10087518,"line_start":498,"line_end":498,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10087519,"byte_end":10087526,"line_start":499,"line_end":499,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10087527,"byte_end":10087530,"line_start":500,"line_end":500,"column_start":1,"column_end":4}},{"value":"/ [`Atomic`]: super::Atomic","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10087531,"byte_end":10087560,"line_start":501,"line_end":501,"column_start":1,"column_end":30}},{"value":"/ [`defer`]: Guard::defer","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10087561,"byte_end":10087588,"line_start":502,"line_end":502,"column_start":1,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10087589,"byte_end":10087598,"line_start":503,"line_end":503,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":889},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/default.rs","byte_start":10143524,"byte_end":10143527,"line_start":23,"line_end":23,"column_start":8,"column_end":11},"name":"pin","qualname":"::default::pin","value":"pub fn pin() -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the current thread.\n","sig":null,"attributes":[{"value":"/ Pins the current thread.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/default.rs","byte_start":10143478,"byte_end":10143506,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"inline","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/default.rs","byte_start":10143507,"byte_end":10143516,"line_start":22,"line_end":22,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":891},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/default.rs","byte_start":10143652,"byte_end":10143661,"line_start":29,"line_end":29,"column_start":8,"column_end":17},"name":"is_pinned","qualname":"::default::is_pinned","value":"pub fn is_pinned() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the current thread is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the current thread is pinned.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/default.rs","byte_start":10143583,"byte_end":10143634,"line_start":27,"line_end":27,"column_start":1,"column_end":52}},{"value":"inline","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/default.rs","byte_start":10143635,"byte_end":10143644,"line_start":28,"line_end":28,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":893},"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/default.rs","byte_start":10143771,"byte_end":10143788,"line_start":34,"line_end":34,"column_start":8,"column_end":25},"name":"default_collector","qualname":"::default::default_collector","value":"pub fn default_collector() -> &'static Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the default global collector.\n","sig":null,"attributes":[{"value":"/ Returns the default global collector.","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/default.rs","byte_start":10143722,"byte_end":10143763,"line_start":33,"line_end":33,"column_start":1,"column_end":42}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":5510,"byte_end":5520,"line_start":122,"line_end":122,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":14}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10001247,"byte_end":10001267,"line_start":42,"line_end":42,"column_start":52,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10002694,"byte_end":10002702,"line_start":79,"line_end":79,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10006476,"byte_end":10006477,"line_start":194,"line_end":194,"column_start":23,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":146},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10009646,"byte_end":10009652,"line_start":295,"line_end":295,"column_start":59,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10009717,"byte_end":10009723,"line_start":296,"line_end":296,"column_start":59,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10009739,"byte_end":10009745,"line_start":298,"line_end":298,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10010078,"byte_end":10010084,"line_start":313,"line_end":313,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":182},{"krate":0,"index":184},{"krate":0,"index":186},{"krate":0,"index":189},{"krate":0,"index":194},{"krate":0,"index":199},{"krate":0,"index":203},{"krate":0,"index":207},{"krate":0,"index":209},{"krate":0,"index":211},{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10028607,"byte_end":10028613,"line_start":814,"line_end":814,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10028960,"byte_end":10028966,"line_start":826,"line_end":826,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10029254,"byte_end":10029260,"line_start":834,"line_end":834,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10029607,"byte_end":10029613,"line_start":845,"line_end":845,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10029725,"byte_end":10029731,"line_start":851,"line_end":851,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10030126,"byte_end":10030132,"line_start":868,"line_end":868,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10030235,"byte_end":10030241,"line_start":874,"line_end":874,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10030361,"byte_end":10030367,"line_start":880,"line_end":880,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10030716,"byte_end":10030722,"line_start":895,"line_end":895,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10031935,"byte_end":10031940,"line_start":936,"line_end":936,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":252},{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10032447,"byte_end":10032452,"line_start":959,"line_end":959,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10034102,"byte_end":10034107,"line_start":1019,"line_end":1019,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":264},{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10035777,"byte_end":10035782,"line_start":1082,"line_end":1082,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10035972,"byte_end":10035977,"line_start":1091,"line_end":1091,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10036255,"byte_end":10036260,"line_start":1102,"line_end":1102,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10036401,"byte_end":10036406,"line_start":1108,"line_end":1108,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10036599,"byte_end":10036604,"line_start":1117,"line_end":1117,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10036770,"byte_end":10036775,"line_start":1124,"line_end":1124,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10036865,"byte_end":10036870,"line_start":1130,"line_end":1130,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10037343,"byte_end":10037348,"line_start":1149,"line_end":1149,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10037458,"byte_end":10037463,"line_start":1155,"line_end":1155,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10037585,"byte_end":10037590,"line_start":1161,"line_end":1161,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10037696,"byte_end":10037701,"line_start":1167,"line_end":1167,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10038202,"byte_end":10038208,"line_start":1184,"line_end":1184,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10038382,"byte_end":10038388,"line_start":1193,"line_end":1193,"column_start":38,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10038443,"byte_end":10038449,"line_start":1195,"line_end":1195,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":312},{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10038695,"byte_end":10038701,"line_start":1210,"line_end":1210,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10039381,"byte_end":10039387,"line_start":1234,"line_end":1234,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10046679,"byte_end":10046685,"line_start":1465,"line_end":1465,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10047248,"byte_end":10047254,"line_start":1487,"line_end":1487,"column_start":62,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10047381,"byte_end":10047387,"line_start":1493,"line_end":1493,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10047461,"byte_end":10047467,"line_start":1495,"line_end":1495,"column_start":63,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":341}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10047632,"byte_end":10047638,"line_start":1501,"line_end":1501,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10047786,"byte_end":10047792,"line_start":1507,"line_end":1507,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10048095,"byte_end":10048101,"line_start":1518,"line_end":1518,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10048292,"byte_end":10048298,"line_start":1524,"line_end":1524,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/collector.rs","byte_start":10049306,"byte_end":10049315,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/collector.rs","byte_start":10049340,"byte_end":10049349,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/collector.rs","byte_start":10049371,"byte_end":10049380,"line_start":29,"line_end":29,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":376}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/collector.rs","byte_start":10049494,"byte_end":10049503,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":378},{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/collector.rs","byte_start":10049745,"byte_end":10049754,"line_start":49,"line_end":49,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/collector.rs","byte_start":10049952,"byte_end":10049961,"line_start":58,"line_end":58,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/collector.rs","byte_start":10050089,"byte_end":10050098,"line_start":64,"line_end":64,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/collector.rs","byte_start":10050272,"byte_end":10050281,"line_start":70,"line_end":70,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/collector.rs","byte_start":10050392,"byte_end":10050403,"line_start":77,"line_end":77,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/collector.rs","byte_start":10050863,"byte_end":10050874,"line_start":97,"line_end":97,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/collector.rs","byte_start":10051021,"byte_end":10051032,"line_start":106,"line_end":106,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/deferred.rs","byte_start":10061148,"byte_end":10061156,"line_start":25,"line_end":25,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":425}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/deferred.rs","byte_start":10061280,"byte_end":10061288,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":427},{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/epoch.rs","byte_start":10065216,"byte_end":10065221,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/epoch.rs","byte_start":10067025,"byte_end":10067036,"line_start":82,"line_end":82,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10070916,"byte_end":10070921,"line_start":74,"line_end":74,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":478},{"krate":0,"index":481},{"krate":0,"index":485},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10084439,"byte_end":10084444,"line_start":403,"line_end":403,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10084614,"byte_end":10084619,"line_start":412,"line_end":412,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":498}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10087903,"byte_end":10087915,"line_start":509,"line_end":509,"column_start":26,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/internal.rs","byte_start":10090988,"byte_end":10090991,"line_start":71,"line_end":71,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/internal.rs","byte_start":10091001,"byte_end":10091004,"line_start":73,"line_end":73,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/internal.rs","byte_start":10091952,"byte_end":10091955,"line_start":108,"line_end":108,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":835}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/internal.rs","byte_start":10095229,"byte_end":10095232,"line_start":193,"line_end":193,"column_start":15,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/internal.rs","byte_start":10095631,"byte_end":10095634,"line_start":205,"line_end":205,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/internal.rs","byte_start":10096060,"byte_end":10096069,"line_start":223,"line_end":223,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/internal.rs","byte_start":10096079,"byte_end":10096088,"line_start":225,"line_end":225,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/internal.rs","byte_start":10096770,"byte_end":10096776,"line_start":246,"line_end":246,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":618}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/internal.rs","byte_start":10101901,"byte_end":10101906,"line_start":387,"line_end":387,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":636},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/internal.rs","byte_start":10110631,"byte_end":10110636,"line_start":611,"line_end":611,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/sync/list.rs","byte_start":10116701,"byte_end":10116706,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":693}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/sync/list.rs","byte_start":10116842,"byte_end":10116847,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":695}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/sync/list.rs","byte_start":10117360,"byte_end":10117364,"line_start":153,"line_end":153,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":702}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/sync/list.rs","byte_start":10119947,"byte_end":10119951,"line_start":218,"line_end":218,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":707}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/sync/list.rs","byte_start":10120483,"byte_end":10120487,"line_start":235,"line_end":235,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":712},{"krate":0,"index":713}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/sync/queue.rs","byte_start":10130308,"byte_end":10130313,"line_start":40,"line_end":40,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/sync/queue.rs","byte_start":10130350,"byte_end":10130355,"line_start":41,"line_end":41,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/sync/queue.rs","byte_start":10130371,"byte_end":10130376,"line_start":43,"line_end":43,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":757},{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":763},{"krate":0,"index":767},{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/sync/queue.rs","byte_start":10136296,"byte_end":10136301,"line_start":204,"line_end":204,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":772}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/lib.rs","byte_start":5510,"byte_end":5520,"line_start":122,"line_end":122,"column_start":17,"column_end":27},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":37},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10001247,"byte_end":10001267,"line_start":42,"line_end":42,"column_start":52,"column_end":72},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":103},"to":{"krate":2,"index":8721}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10002694,"byte_end":10002702,"line_start":79,"line_end":79,"column_start":32,"column_end":40},"kind":{"Impl":{"id":2}},"from":{"krate":2,"index":37599},"to":{"krate":0,"index":113}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10006476,"byte_end":10006477,"line_start":194,"line_end":194,"column_start":23,"column_end":24},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":140},"to":{"krate":0,"index":130}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10009646,"byte_end":10009652,"line_start":295,"line_end":295,"column_start":59,"column_end":65},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2821}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10009717,"byte_end":10009723,"line_start":296,"line_end":296,"column_start":59,"column_end":65},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2833}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10009739,"byte_end":10009745,"line_start":298,"line_end":298,"column_start":9,"column_end":15},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10010078,"byte_end":10010084,"line_start":313,"line_end":313,"column_start":29,"column_end":35},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10028607,"byte_end":10028613,"line_start":814,"line_end":814,"column_start":44,"column_end":50},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":8721}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10028960,"byte_end":10028966,"line_start":826,"line_end":826,"column_start":46,"column_end":52},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":8738}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10029254,"byte_end":10029260,"line_start":834,"line_end":834,"column_start":39,"column_end":45},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2446}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10029607,"byte_end":10029613,"line_start":845,"line_end":845,"column_start":41,"column_end":47},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2799}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10029725,"byte_end":10029731,"line_start":851,"line_end":851,"column_start":48,"column_end":54},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2727}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10030126,"byte_end":10030132,"line_start":868,"line_end":868,"column_start":26,"column_end":32},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2727}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10030235,"byte_end":10030241,"line_start":874,"line_end":874,"column_start":21,"column_end":27},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2727}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10030361,"byte_end":10030367,"line_start":880,"line_end":880,"column_start":57,"column_end":63},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2727}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10030716,"byte_end":10030722,"line_start":895,"line_end":895,"column_start":28,"column_end":34},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2727}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10031935,"byte_end":10031940,"line_start":936,"line_end":936,"column_start":44,"column_end":49},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":246},"to":{"krate":0,"index":242}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10032447,"byte_end":10032452,"line_start":959,"line_end":959,"column_start":9,"column_end":14},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":246},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10034102,"byte_end":10034107,"line_start":1019,"line_end":1019,"column_start":29,"column_end":34},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":246},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10035777,"byte_end":10035782,"line_start":1082,"line_end":1082,"column_start":38,"column_end":43},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":3049}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10035972,"byte_end":10035977,"line_start":1091,"line_end":1091,"column_start":44,"column_end":49},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":8721}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10036255,"byte_end":10036260,"line_start":1102,"line_end":1102,"column_start":26,"column_end":31},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":2446}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10036401,"byte_end":10036406,"line_start":1108,"line_end":1108,"column_start":39,"column_end":44},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":3025}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10036599,"byte_end":10036604,"line_start":1117,"line_end":1117,"column_start":42,"column_end":47},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":3038}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10036770,"byte_end":10036775,"line_start":1124,"line_end":1124,"column_start":21,"column_end":26},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":2727}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10036865,"byte_end":10036870,"line_start":1130,"line_end":1130,"column_start":26,"column_end":31},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":2727}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10037343,"byte_end":10037348,"line_start":1149,"line_end":1149,"column_start":43,"column_end":48},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":2424}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10037458,"byte_end":10037463,"line_start":1155,"line_end":1155,"column_start":46,"column_end":51},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":2427}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10037585,"byte_end":10037590,"line_start":1161,"line_end":1161,"column_start":42,"column_end":47},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":2718}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10037696,"byte_end":10037701,"line_start":1167,"line_end":1167,"column_start":42,"column_end":47},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":2721}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10038202,"byte_end":10038208,"line_start":1184,"line_end":1184,"column_start":39,"column_end":45},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":2446}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10038382,"byte_end":10038388,"line_start":1193,"line_end":1193,"column_start":38,"column_end":44},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10038443,"byte_end":10038449,"line_start":1195,"line_end":1195,"column_start":44,"column_end":50},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":300},"to":{"krate":0,"index":242}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10038695,"byte_end":10038701,"line_start":1210,"line_end":1210,"column_start":13,"column_end":19},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":300},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10039381,"byte_end":10039387,"line_start":1234,"line_end":1234,"column_start":33,"column_end":39},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":300},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10046679,"byte_end":10046685,"line_start":1465,"line_end":1465,"column_start":28,"column_end":34},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":2727}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10047248,"byte_end":10047254,"line_start":1487,"line_end":1487,"column_start":62,"column_end":68},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":2476}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10047381,"byte_end":10047387,"line_start":1493,"line_end":1493,"column_start":36,"column_end":42},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":2481}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10047461,"byte_end":10047467,"line_start":1495,"line_end":1495,"column_start":63,"column_end":69},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":2519}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10047632,"byte_end":10047638,"line_start":1501,"line_end":1501,"column_start":37,"column_end":43},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":2508}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10047786,"byte_end":10047792,"line_start":1507,"line_end":1507,"column_start":44,"column_end":50},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":8721}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10048095,"byte_end":10048101,"line_start":1518,"line_end":1518,"column_start":46,"column_end":52},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":8738}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/atomic.rs","byte_start":10048292,"byte_end":10048298,"line_start":1524,"line_end":1524,"column_start":41,"column_end":47},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":2799}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/collector.rs","byte_start":10049306,"byte_end":10049315,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":371},"to":{"krate":2,"index":2821}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/collector.rs","byte_start":10049340,"byte_end":10049349,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":371},"to":{"krate":2,"index":2833}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/collector.rs","byte_start":10049371,"byte_end":10049380,"line_start":29,"line_end":29,"column_start":18,"column_end":27},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":371},"to":{"krate":2,"index":2799}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/collector.rs","byte_start":10049494,"byte_end":10049503,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":371},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/collector.rs","byte_start":10049745,"byte_end":10049754,"line_start":49,"line_end":49,"column_start":16,"column_end":25},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":371},"to":{"krate":2,"index":2446}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/collector.rs","byte_start":10049952,"byte_end":10049961,"line_start":58,"line_end":58,"column_start":21,"column_end":30},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":371},"to":{"krate":2,"index":8721}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/collector.rs","byte_start":10050089,"byte_end":10050098,"line_start":64,"line_end":64,"column_start":20,"column_end":29},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":371},"to":{"krate":2,"index":2476}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/collector.rs","byte_start":10050272,"byte_end":10050281,"line_start":70,"line_end":70,"column_start":13,"column_end":22},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":371},"to":{"krate":2,"index":2481}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/collector.rs","byte_start":10050392,"byte_end":10050403,"line_start":77,"line_end":77,"column_start":6,"column_end":17},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":387},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/collector.rs","byte_start":10050863,"byte_end":10050874,"line_start":97,"line_end":97,"column_start":15,"column_end":26},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":387},"to":{"krate":2,"index":3049}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/collector.rs","byte_start":10051021,"byte_end":10051032,"line_start":106,"line_end":106,"column_start":21,"column_end":32},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":387},"to":{"krate":2,"index":8721}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/deferred.rs","byte_start":10061148,"byte_end":10061156,"line_start":25,"line_end":25,"column_start":21,"column_end":29},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":420},"to":{"krate":2,"index":8721}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/deferred.rs","byte_start":10061280,"byte_end":10061288,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":420},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/epoch.rs","byte_start":10065216,"byte_end":10065221,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":813},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/epoch.rs","byte_start":10067025,"byte_end":10067036,"line_start":82,"line_end":82,"column_start":6,"column_end":17},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":829},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10070916,"byte_end":10070921,"line_start":74,"line_end":74,"column_start":6,"column_end":11},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":475},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10084439,"byte_end":10084444,"line_start":403,"line_end":403,"column_start":15,"column_end":20},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":475},"to":{"krate":2,"index":3049}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10084614,"byte_end":10084619,"line_start":412,"line_end":412,"column_start":21,"column_end":26},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":475},"to":{"krate":2,"index":8721}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/guard.rs","byte_start":10087903,"byte_end":10087915,"line_start":509,"line_end":509,"column_start":26,"column_end":38},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":500},"to":{"krate":2,"index":2833}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/internal.rs","byte_start":10090988,"byte_end":10090991,"line_start":71,"line_end":71,"column_start":22,"column_end":25},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":589},"to":{"krate":2,"index":2821}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/internal.rs","byte_start":10091001,"byte_end":10091004,"line_start":73,"line_end":73,"column_start":6,"column_end":9},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":589},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/internal.rs","byte_start":10091952,"byte_end":10091955,"line_start":108,"line_end":108,"column_start":18,"column_end":21},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":589},"to":{"krate":2,"index":2799}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/internal.rs","byte_start":10095229,"byte_end":10095232,"line_start":193,"line_end":193,"column_start":15,"column_end":18},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":589},"to":{"krate":2,"index":3049}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/internal.rs","byte_start":10095631,"byte_end":10095634,"line_start":205,"line_end":205,"column_start":21,"column_end":24},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":589},"to":{"krate":2,"index":8721}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/internal.rs","byte_start":10096060,"byte_end":10096069,"line_start":223,"line_end":223,"column_start":22,"column_end":31},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":836},"to":{"krate":2,"index":2833}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/internal.rs","byte_start":10096079,"byte_end":10096088,"line_start":225,"line_end":225,"column_start":6,"column_end":15},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":836},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/internal.rs","byte_start":10096770,"byte_end":10096776,"line_start":246,"line_end":246,"column_start":6,"column_end":12},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":608},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/internal.rs","byte_start":10101901,"byte_end":10101906,"line_start":387,"line_end":387,"column_start":6,"column_end":11},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":619},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/internal.rs","byte_start":10110631,"byte_end":10110636,"line_start":611,"line_end":611,"column_start":27,"column_end":32},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":619},"to":{"krate":0,"index":678}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/sync/list.rs","byte_start":10116701,"byte_end":10116706,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":843},"to":{"krate":2,"index":2799}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/sync/list.rs","byte_start":10116842,"byte_end":10116847,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":843},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/sync/list.rs","byte_start":10117360,"byte_end":10117364,"line_start":153,"line_end":153,"column_start":26,"column_end":30},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":847},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/sync/list.rs","byte_start":10119947,"byte_end":10119951,"line_start":218,"line_end":218,"column_start":35,"column_end":39},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":847},"to":{"krate":2,"index":3049}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/sync/list.rs","byte_start":10120483,"byte_end":10120487,"line_start":235,"line_end":235,"column_start":47,"column_end":51},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":683},"to":{"krate":2,"index":7173}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/sync/queue.rs","byte_start":10130308,"byte_end":10130313,"line_start":40,"line_end":40,"column_start":31,"column_end":36},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":864},"to":{"krate":2,"index":2833}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/sync/queue.rs","byte_start":10130350,"byte_end":10130355,"line_start":41,"line_end":41,"column_start":31,"column_end":36},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":864},"to":{"krate":2,"index":2821}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/sync/queue.rs","byte_start":10130371,"byte_end":10130376,"line_start":43,"line_end":43,"column_start":9,"column_end":14},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":864},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/halvorbo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.4/src/sync/queue.rs","byte_start":10136296,"byte_end":10136301,"line_start":204,"line_end":204,"column_start":18,"column_end":23},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":864},"to":{"krate":2,"index":3049}}]}